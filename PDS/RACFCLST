./ ADD NAME=$$$COIBM 0101-01016-01016-1428-00001-00001-00000-RACFCLS
//*
./ ADD NAME=#ISPAUT  0101-01016-01016-1428-00097-00097-00000-RACFCLS
PROC 0 PANEL()      /* ISPAUT */
CONTROL NOFLUSH NOMSG MAIN
PROFILE MODE WTPMSG MSGID NOPREFIX
GETSYSN
SET SYSNUM = &LASTCC
IF &SYSNUM = 0 THEN SET SYSNAME=BIGERROR
IF &SYSNUM = 1 THEN SET SYSNAME=PRDA
IF &SYSNUM = 2 THEN SET SYSNAME=PRDB
IF &SYSNUM = 3 THEN SET SYSNAME=PRDC
IF &SYSNUM = 4 THEN SET SYSNAME=PRDD
IF &SYSNUM = 5 THEN SET SYSNAME=PRDE
IF &SYSNUM = 6 THEN SET SYSNAME=TSTF
IF &SYSNUM = 7 THEN SET SYSNAME=TSTG

SET SHRNAME = &SYSNAME
IF &SYSNUM = 4 THEN SET SHRNAME=PRDE
IF &SYSNUM = 7 THEN SET SHRNAME=PRDE

FREE FILE(ISPLLIB,ISPPLIB,ISPMLIB,ISPTLIB,ISPSLIB, +
          ISPPROF,ISPTABL,SMPTABL)
SET &DSNAME = &SYSUID..&SYSNAME..ISPF.ISPPROF
ALLOC FI(ISPPROF) SHR  DA('&DSNAME.')
IF &LASTCC ^= 0 THEN +
  DO
    FREE FI(ISPCRTE)
    CONTROL MSG
    ATTRIB ISPCRTE DSORG(PO) RECFM(F B) LRECL(80) BLKSIZE(6160)
    ALLOC DA('&DSNAME.') SP(2,1) TRACKS DIR(2) USING(ISPCRTE) +
        FI(ISPPROF)
    IF &LASTCC = 0 THEN +
      WRITE *** ISPF PROFILE DATA SET '&DSNAME.' HAS BEEN CREATED
    ELSE +
     DO
      WRITE  *** UNABLE TO ALLOCATE ISPF PROFILE DATA SET '&DSNAME.'
      FREE FI(ISPCRTE)
      EXIT CODE(12)
     END
    FREE FI(ISPCRTE)
  END
CONTROL MSG
ERROR EXIT
IF &PANEL = &STR() THEN +
  SET &PNL = PANEL(ISP@AUT)
ELSE +
  SET &PNL = PANEL(&PANEL)
ALLOC FI(ISPTABL) SHR DA('&DSNAME.')
ALLOC FI(SMPTABL) SHR DA('&DSNAME.')
ALLOC FI(ISPLLIB) SHR DA( +
                         'SYS1.ICEISPL'           /* DFSORT        */ +
                         'SYS1.DGTLLIB'           /* DFDSS         */ +
                         'GIM.SGIMLMD0')
ALLOC FI(ISPPLIB) SHR DA(                         /* SPFOPS        */ +
                         'ISF.V1R5M0.SISFPLIB'       /* SDSF       */ +
                         'ISP.V4R2M0.SISPPENU'       /* ISPF       */ +
                         'SYS2.RACFPANL'           /* CUSTOM       */ +
                         'SYS2.ISPPLIB'           /* CUSTOM        */ +
                         'SYS1.ICEISPP'           /* DFSORT        */ +
                         'SYS1.DGTPLIB'           /* DFDSS         */ +
                         'EOY.SEOYPENU'           /* BOOKMANAGER   */ +
                         'GIM.SGIMPENU'                            +
                         'SYS3.&SHRNAME..IOAIV410.PANEL') /* IOA   */
ALLOC FI(ISPMLIB) SHR DA( +
                         'SYS1.ICEISPM'           /* DFSORT        */ +
                         'SYS1.DGTMLIB'           /* DFDSS         */ +
                         'EOY.SEOYMENU'           /* BOOKMANAGER   */ +
                         'SYS3.&SHRNAME..IOAIV410.ISMSG' /* IOA    */ +
                         'GIM.SGIMMENU'                              +
                         'ISP.V4R2M0.SISPMENU')    /* ISPF        */
ALLOC FI(ISPTLIB) SHR DA( +
                         '&DSNAME'                                    +
                         'SYS1.ICEISPT'           /* DFSORT        */ +
                         'SYS1.DGTTLIB'           /* DFP/DFDSS     */ +
                         'EOY.SEOYTENU'           /* BOOKMANAGER   */ +
                         'SYS3.&SHRNAME..IOAIV410.TLIB' /* IOA    */ +
                         'ISF.V1R5M0.SISFTLIB'     /* SDSF      */ +
                         'GIM.SGIMTENU'                            +
                         'ISP.V4R2M0.SISPTENU')    /* ISPF      */
ALLOC FI(ISPSLIB) SHR DA( +
                         'SYS1.ICEISPS'           /* DFSORT        */ +
                         'SYS1.DGTSLIB'           /* DFP/DFDSS     */ +
                         'GIM.SGIMSENU'                           +
                         'ISP.V4R2M0.SISPSLIB')    /* ISPF       */
ALLOC FI(HASPINDX) SHR DA('SYS0.&SYSNAME..HASPINDX') /* SDSF INDEX */
FREE FI(SYSPROC)
ALLOC FI(SYSPROC) SHR DA( +
                         'SYS2.RACFCLST'           /* CUSTOMIZED   */ +
                         'SYS2.CMDPROC'           /* CUSTOMIZED    */ +
                         'SYS1.ICEISPC'           /* DFSORT        */ +
                         'SYS1.DGTCLIB'           /* DFDSS         */ +
                         'EOY.SEOYCLIB'           /* BOOKMANAGER   */ +
                         'EDC.V2R2M0.SEDCLIST'    /* C/370         */ +
                         'SYS3.&SHRNAME..IOAIV410.CLIST' /* IOA  */  +
                          'GIM.SGIMCLS0')  /* SMP/E */
ERROR RETURN
MURPHY
PDF &PNL
EX 'SYS2.RACFCLST(X)'
./ ADD NAME=#ISPCOMA 0101-01016-01016-1428-00086-00086-00000-RACFCLS
PROC 0 PANEL()   /*ISPCOMA */
SET M1=&STR(               +-----------------------------------------+)
SET M2=&STR(               | IF YOU HAVE ANY PROBLEMS ADMINISTRATING |)
SET M3=&STR(               | USER IDS, PLEASE CALL                   |)
SET M4=&STR(               |                                         |)
SET M5=&STR(               | EDWARD ROSS         (012) - 4210659     |)
SET M6=&STR(               +-----------------------------------------+)
WRITE
WRITE
WRITE
WRITE
WRITE &M1
WRITE &M2
WRITE &M3
WRITE &M4
WRITE &M5
WRITE &M6
CONTROL NOFLUSH NOMSG MAIN
PROFILE MODE WTPMSG MSGID NOPREF
GETSYSN
SET SYSNUM = &LASTCC
IF &SYSNUM = 0 THEN SET SYSNAME=BIGERROR
IF &SYSNUM = 1 THEN SET SYSNAME=PRDA
IF &SYSNUM = 2 THEN SET SYSNAME=PRDB
IF &SYSNUM = 3 THEN SET SYSNAME=PRDC
IF &SYSNUM = 4 THEN SET SYSNAME=PRDD
IF &SYSNUM = 5 THEN SET SYSNAME=PRDE
IF &SYSNUM = 6 THEN SET SYSNAME=TSTF
IF &SYSNUM = 7 THEN SET SYSNAME=TSTG

SET SHRNAME = &SYSNAME
IF &SYSNUM = 4 THEN SET SHRNAME=PRDE
IF &SYSNUM = 7 THEN SET SHRNAME=PRDE

FREE FILE(ISPLLIB,ISPPLIB,ISPMLIB,ISPTLIB,ISPSLIB, +
          ISPPROF,SMPTABL)
FREE FI(SYSPROC)
ALLOC FI(SYSPROC) SHR DA('SYS2.RACFCLST'     /* RACF ADMIN  */  +
                         'ISP.V4R2M0.SISPEXEC'     /* RACF ADMIN  */ +
                         'ISP.V4R2M0.SISPCLIB')    /* RACF ADMIN  */
SET &DSNAME = &SYSUID..&SYSNAME..ISPF.ISPPROF
ALLOC FI(ISPPROF) SHR  DA('&DSNAME.')
IF &LASTCC ^= 0 THEN +
  DO
    RENAME &SYSUID..ISPF.ISPPROF &SYSUID..&SYSNAME..ISPF.ISPPROF
  END
ALLOC FI(ISPPROF) SHR  DA('&DSNAME.')
IF &LASTCC ^= 0 THEN +
  DO
    CONTROL MSG
    ALLOC DA('&DSNAME.') SP(2,1) TRACKS DIR(2)  +
          DSORG(PO) RECFM(F B) LRECL(80) BLKSIZE(6160) FI(ISPPROF)
    IF &LASTCC = 0 THEN +
      WRITE *** ISPF PROFILE DATA SET '&DSNAME.' HAS BEEN CREATED
    ELSE +
     DO
      WRITE  *** UNABLE TO ALLOCATE ISPF PROFILE DATA SET '&DSNAME.'
      EXIT CODE(12)
     END
  END
CONTROL MSG
ERROR EXIT
IF &PANEL = &STR() THEN +
  SET &PNL = PANEL(ISP@COMA)
ELSE +
  SET &PNL = PANEL(&PANEL)
ALLOC FI(ISPTABL) SHR DA('SYS2.RACFTABL') /* RACF CHECKING */
ALLOC FI(ISPPLIB) SHR DA( +
                         'SYS2.RACFPANL' /* RACF ADMIN   */ +
                         'ISF.V1R5M0.SISFPLIB')  /* SDSF          */
ALLOC FI(ISPMLIB) SHR DA( +
                         'SYS2.RACFMENU' /* RACF ISPF    */ +
                         'SYS1.HRFMSG') /* RACF ISPF    */
ALLOC FI(ISPTLIB) SHR DA( +
                         'SYS2.RACFTABL' /* RACF TABLES  */ +
                         '&DSNAME'                /* USER PROFILE  */ +
                         'ISF.V1R5M0.SISFTLIB')  /* SDSF          */
ALLOC FI(ISPSLIB) SHR DA('SYS2.RACFSLIB') /* ISPF        */
ALLOC FI(HASPINDX) SHR DA('SYS0.&SYSNAME..HASPINDX') /* ISPF        */
ERROR RETURN
MURPHY
PDF &PNL NEWAPPL(RACF)
IF &SYSUID=POLADM4 THEN +
   EX 'SYS2.RACFCLST(X1)'
ELSE +
EX 'SYS2.RACFCLST(X)'
./ ADD NAME=#ISPCTD  0101-01016-01016-1428-00071-00071-00000-RACFCLS
PROC 0 PANEL()     /* ISPCTD */
CONTROL NOFLUSH NOMSG MAIN
PROFILE MODE WTPMSG MSGID NOPREFIX
FREE FILE(ISPLLIB,ISPPLIB,ISPMLIB,ISPTLIB,ISPSLIB, +
          ISPPROF,ISPTABL,SMPTABL)
GETSYSN
SET SYSNUM = &LASTCC
IF &SYSNUM = 0 THEN SET SYSNAME=BIGERROR
IF &SYSNUM = 1 THEN SET SYSNAME=PRDA
IF &SYSNUM = 2 THEN SET SYSNAME=PRDB
IF &SYSNUM = 3 THEN SET SYSNAME=PRDC
IF &SYSNUM = 4 THEN SET SYSNAME=PRDD
IF &SYSNUM = 5 THEN SET SYSNAME=PRDE
IF &SYSNUM = 6 THEN SET SYSNAME=TSTF
IF &SYSNUM = 7 THEN SET SYSNAME=TSTG

SET SHRNAME = &SYSNAME
IF &SYSNUM = 4 THEN SET SHRNAME=PRDE
IF &SYSNUM = 7 THEN SET SHRNAME=PRDE

SET &DSNAME = &SYSUID..&SYSNAME..ISPF.ISPPROF
ALLOC FI(ISPPROF) SHR  DA('&DSNAME.')
IF &LASTCC ^= 0 THEN +
  DO
    FREE FI(ISPCRTE)
    CONTROL MSG
    ATTRIB ISPCRTE DSORG(PO) RECFM(F B) LRECL(80) BLKSIZE(6160)
    ALLOC DA('&DSNAME.') SP(2,1) TRACKS DIR(2) USING(ISPCRTE) +
        FI(ISPPROF)
    IF &LASTCC = 0 THEN +
      WRITE *** ISPF PROFILE DATA SET '&DSNAME.' HAS BEEN CREATED
    ELSE +
     DO
      WRITE  *** UNABLE TO ALLOCATE ISPF PROFILE DATA SET '&DSNAME.'
      FREE FI(ISPCRTE)
      EXIT CODE(12)
     END
    FREE FI(ISPCRTE)
  END
CONTROL MSG
ERROR EXIT
IF &PANEL = &STR() THEN +
  SET &PNL = PANEL(ISP@CTD)
ELSE +
  SET &PNL = PANEL(&PANEL)
ALLOC FI(ISPTABL) SHR DA('&DSNAME.')
ALLOC FI(SMPTABL) SHR DA('&DSNAME.')
ALLOC FI(ISPPLIB) SHR DA( +
                         'ISF.V1R5M0.SISFPLIB'     /* SDSF       */ +
                         'SYS2.RACFPANL' /*              */ +
                         'ISP.V4R2M0.SISPPENU'     /* ISPF       */ +
                         'SYS3.&SHRNAME..IOAIV410.PANEL') /* IOA   */
ALLOC FI(ISPMLIB) SHR DA( +
                         'SYS3.&SHRNAME..IOAIV410.ISMSG' /* IOA    */ +
                         'ISP.V4R2M0.SISPMENU')    /* ISPF       */
ALLOC FI(ISPTLIB) SHR DA( +
                         '&DSNAME'                                    +
                         'SYS3.&SHRNAME..IOAIV410.TLIB' /* IOA    */ +
                         'ISF.V1R5M0.SISFTLIB'     /* SDSF       */ +
                         'ISP.V4R2M0.SISPTENU')    /* ISPF       */
ALLOC FI(ISPSLIB) SHR DA( +
                         'ISP.V4R2M0.SISPSLIB')    /* ISPF      */
ALLOC FI(HASPINDX) SHR DA('SYS0.&SYSNAME..HASPINDX') /* SDSF INDEX */
FREE FI(SYSPROC)
ALLOC FI(SYSPROC) SHR DA( +
                         'SYS2.RACFCLST'     /* RACF    */ +
                         'SYS3.&SHRNAME..IOAIV410.CLIST') /* IOA */
ERROR RETURN
PDF &PNL
CONTROL NOMSG NOLIST
EX 'SYS2.RACFCLST(X)'
./ ADD NAME=#ISPDNS  0101-01016-01016-1428-00073-00073-00000-RACFCLS
PROC 0 PANEL()        /*  ISPDNS  */
CONTROL NOFLUSH NOMSG MAIN
PROFILE MODE WTPMSG MSGID NOPREFIX
FREE FILE(ISPLLIB,ISPPLIB,ISPMLIB,ISPTLIB,ISPSLIB, +
          ISPPROF,ISPTABL,SMPTABL)
GETSYSN
SET SYSNUM = &LASTCC
IF &SYSNUM = 0 THEN SET SYSNAME=BIGERROR
IF &SYSNUM = 1 THEN SET SYSNAME=PRDA
IF &SYSNUM = 2 THEN SET SYSNAME=PRDB
IF &SYSNUM = 3 THEN SET SYSNAME=PRDC
IF &SYSNUM = 4 THEN SET SYSNAME=PRDD
IF &SYSNUM = 5 THEN SET SYSNAME=PRDE
IF &SYSNUM = 6 THEN SET SYSNAME=TSTF
IF &SYSNUM = 7 THEN SET SYSNAME=TSTG

SET SHRNAME = &SYSNAME
IF &SYSNUM = 4 THEN SET SHRNAME=PRDE
IF &SYSNUM = 7 THEN SET SHRNAME=PRDE

SET &DSNAME = &SYSUID..&SYSNAME..ISPF.ISPPROF
ALLOC FI(ISPPROF) SHR  DA('&DSNAME.')
IF &LASTCC ^= 0 THEN +
  DO
    CONTROL MSG
    ALLOC DA('&DSNAME.') SP(2,1) TRACKS DIR(2)  FI(ISPPROF) +
                   DSORG(PO) RECFM(F B) LRECL(80) BLKSIZE(6160)
    IF &LASTCC = 0 THEN +
      WRITE *** ISPF PROFILE DATA SET '&DSNAME.' HAS BEEN CREATED
    ELSE +
     DO
      WRITE  *** UNABLE TO ALLOCATE ISPF PROFILE DATA SET '&DSNAME.'
      EXIT CODE(12)
     END
  END
CONTROL MSG
ERROR EXIT
IF &PANEL = &STR() THEN +
  SET &PNL = PANEL(ISP@DNS)
ELSE +
  SET &PNL = PANEL(&PANEL)
ALLOC FI(ISPTABL) SHR DA('&DSNAME.')
ALLOC FI(ISPLLIB) SHR DA( +
                         'SYS1.DGTLLIB'           /* DFP/DFDSS     */ +
                         'ISP.V4R2M0.SISPLOAD')   /* ISPF          */
ALLOC FI(ISPPLIB) SHR DA( +
                         'SYS2.RACFPANL'           /* RACF         */ +
                         'SYS1.DGTPLIB'           /* DFP/DFDSS     */ +
                         'ISF.V1R5M0.SISFPLIB'    /* SDSF          */ +
                         'ISP.V4R2M0.SISPPENU')   /* ISPF          */
ALLOC FI(ISPMLIB) SHR DA( +
                         'SYS1.DGTMLIB'           /* DFP/DFDSS     */ +
                         'ISP.V4R2M0.SISPMENU')   /* ISPF          */
ALLOC FI(ISPTLIB) SHR DA( +
                         '&DSNAME'                /*               */ +
                         'SYS1.DGTTLIB'           /* DFP/DFDSS     */ +
                         'ISF.V1R5M0.SISFTLIB'    /* SDSF          */ +
                         'ISP.V4R2M0.SISPTENU')   /* ISPF          */
ALLOC FI(ISPSLIB) SHR DA( +
                         'SYS1.DGTSLIB'           /* DFDSS         */ +
                         'ISP.V4R2M0.SISPSLIB')   /* ISPF          */
FREE FI(SYSPROC)
ALLOC FI(SYSPROC) SHR DA( +
                         'SYS2.RACFCLST'         /* RACF CHECKING */ +
                         'ISP.V4R2M0.SISPEXEC'    /* ORACLE + LMF  */ +
                         'ISP.V4R2M0.SISPCLIB'    /* ORACLE + LMF  */ +
                         'SYS1.DGTCLIB')          /* DFDSS         */
/*                       'SYS2.LINKLIB')             USER TSP      */
ALLOC FI(HASPINDX) SHR DA('SYS0.&SYSNAME..HASPINDX') /* SDSF INDEX */
ERROR RETURN
MURPHY
PDF &PNL
EX 'SYS2.RACFCLST(X)'
./ ADD NAME=#ISPDNSA 0101-01016-01016-1428-00080-00080-00000-RACFCLS
PROC 0 PANEL()
SET M1=&STR(               +-----------------------------------------+)
SET M2=&STR(               | IF YOU HAVE ANY PROBLEMS ADMINISTRATING |)
SET M3=&STR(               | USER IDS, PLEASE CALL                   |)
SET M4=&STR(               |                                         |)
SET M5=&STR(               | EDWARD ROSS         (012) - 4210656     |)
SET M6=&STR(               +-----------------------------------------+)
WRITE
WRITE
WRITE
WRITE
WRITE &M1
WRITE &M2
WRITE &M3
WRITE &M4
WRITE &M5
WRITE &M6
CONTROL NOFLUSH NOMSG MAIN
PROFILE MODE WTPMSG MSGID NOPREF
GETSYSN
SET SYSNUM = &LASTCC
IF &SYSNUM = 0 THEN SET SYSNAME=BIGERROR
IF &SYSNUM = 1 THEN SET SYSNAME=PRDA
IF &SYSNUM = 2 THEN SET SYSNAME=PRDB
IF &SYSNUM = 3 THEN SET SYSNAME=PRDC
IF &SYSNUM = 4 THEN SET SYSNAME=PRDD
IF &SYSNUM = 5 THEN SET SYSNAME=PRDE
IF &SYSNUM = 6 THEN SET SYSNAME=TSTF
IF &SYSNUM = 7 THEN SET SYSNAME=TSTG

SET SHRNAME = &SYSNAME
IF &SYSNUM = 4 THEN SET SHRNAME=PRDE
IF &SYSNUM = 7 THEN SET SHRNAME=PRDE

FREE FILE(ISPLLIB,ISPPLIB,ISPMLIB,ISPTLIB,ISPSLIB, +
          ISPPROF,SMPTABL)
FREE FI(SYSPROC)
SET &DSNAME = &SYSUID..&SYSNAME..ISPF.ISPPROF
ALLOC FI(ISPPROF) SHR  DA('&DSNAME.')
IF &LASTCC ^= 0 THEN +
  DO
    RENAME &SYSUID..ISPF.ISPPROF &SYSUID..&SYSNAME..ISPF.ISPPROF
  END
ALLOC FI(ISPPROF) SHR  DA('&DSNAME.')
IF &LASTCC ^= 0 THEN +
  DO
    CONTROL MSG
    ALLOC DA('&DSNAME.') SP(2,1) TRACKS DIR(2)  +
          DSORG(PO) RECFM(F B) LRECL(80) BLKSIZE(6160) FI(ISPPROF)
    IF &LASTCC = 0 THEN +
      WRITE *** ISPF PROFILE DATA SET '&DSNAME.' HAS BEEN CREATED
    ELSE +
     DO
      WRITE  *** UNABLE TO ALLOCATE ISPF PROFILE DATA SET '&DSNAME.'
      EXIT CODE(12)
     END
  END
CONTROL MSG
ERROR EXIT
IF &PANEL = &STR() THEN +
  SET &PNL = PANEL(ISP@ADMN)
ELSE +
  SET &PNL = PANEL(&PANEL)
ALLOC FI(ISPTABL) SHR DA('SYS2.RACFTABL')         /* RACF CHECKING */
ALLOC FI(ISPLLIB) SHR DA('ISP.V4R2M0.SISPLOAD')   /* ISPF          */
ALLOC FI(ISPPLIB) SHR DA('SYS2.RACFPANL'          /* RACF CHECKING */ +
                         'ISF.V1R5M0.SISFPLIB')   /* SDSF          */
ALLOC FI(ISPMLIB) SHR DA('SYS2.RACFMENU'          /* RACF ISPF     */ +
                         'SYS1.HRFMSG')          /* RACF ISPF     */
ALLOC FI(ISPTLIB) SHR DA('SYS2.RACFTABL'          /* RACF TABLES   */ +
                         '&DSNAME'                /* USER PROFILE  */ +
                         'ISF.V1R5M0.SISFTLIB')   /* SDSF          */
ALLOC FI(ISPSLIB) SHR DA('SYS2.RACFSLIB')         /* ISPF          */
ALLOC FI(HASPINDX) SHR DA('SYS0.&SYSNAME..HASPINDX') /* SDSF INDEX */
ALLOC FI(SYSPROC) SHR DA('SYS2.RACFCLST'          /* RACF ADMIN  */  +
                         'ISP.V4R2M0.SISPEXEC'     /* RACF ADMIN  */ +
                         'ISP.V4R2M0.SISPCLIB')    /* RACF ADMIN  */
ERROR RETURN
PDF &PNL NEWAPPL(RACF)
EX 'SYS2.RACFCLST(X)'
./ ADD NAME=#ISPGREN 0101-01016-01016-1428-00046-00046-00000-RACFCLS
PROC 0 PANEL()   /*ISPGRENS */
CONTROL NOFLUSH NOMSG MAIN
PROFILE MODE WTPMSG MSGID PREFIX(GRENS)
GETSYSN
SET SYSNUM = &LASTCC
IF &SYSNUM = 0 THEN SET SYSNAME=BIGERROR
IF &SYSNUM = 1 THEN SET SYSNAME=PRDA
IF &SYSNUM = 2 THEN SET SYSNAME=PRDB
IF &SYSNUM = 3 THEN SET SYSNAME=PRDC
IF &SYSNUM = 4 THEN SET SYSNAME=PRDD
IF &SYSNUM = 5 THEN SET SYSNAME=PRDE
IF &SYSNUM = 6 THEN SET SYSNAME=TSTF
IF &SYSNUM = 7 THEN SET SYSNAME=TSTG

SET SHRNAME = &SYSNAME
IF &SYSNUM = 4 THEN SET SHRNAME=PRDE
IF &SYSNUM = 7 THEN SET SHRNAME=PRDE

FREE FILE(ISPLLIB,ISPPLIB,ISPMLIB,ISPTLIB,ISPSLIB, +
          ISPPROF,ISPTABL,SMPTABL)
FREE FI(SYSPROC)
ALLOC FI(SYSPROC) SHR DA('SYS2.RACFCLST')
SET &DSNAME = &SYSUID..&SYSNAME..ISPF.ISPPROF
ALLOC FI(ISPPROF) SHR  DA('&DSNAME.')
IF &LASTCC ^= 0 THEN +
  DO
    FREE FI(ISPCRTE)
    CONTROL MSG
    ATTRIB ISPCRTE DSORG(PO) RECFM(F B) LRECL(80) BLKSIZE(6160)
    ALLOC DA('&DSNAME.') SP(2,1) TRACKS DIR(2) USING(ISPCRTE) +
        FI(ISPPROF)
    IF &LASTCC = 0 THEN +
      WRITE *** ISPF PROFILE DATA SET '&DSNAME.' HAS BEEN CREATED
    ELSE +
     DO
      WRITE  *** UNABLE TO ALLOCATE ISPF PROFILE DATA SET '&DSNAME.'
      FREE FI(ISPCRTE)
      EXIT CODE(12)
     END
    FREE FI(ISPCRTE)
  END
CONTROL MSG
ERROR EXIT
WRITE SEND OR RECEIVE THE FILE ... OR LOGOFF TO TERMINATE SESSION.
ERROR RETURN
/* EX 'SYS2.RACFCLST(X)' */
./ ADD NAME=#ISPKRI  0101-01016-01016-1428-00095-00095-00000-RACFCLS
PROC 0 PANEL()
/*********************************************************************/
/* KRIM     ADMIN                                                    */
/*********************************************************************/
SET M1=&STR(               +-----------------------------------------+)
SET M2=&STR(               | IF YOU HAVE ANY PROBLEMS ADMINISTRATING |)
SET M3=&STR(               | USER IDS, PLEASE CALL                   |)
SET M4=&STR(               |                                         |)
SET M5=&STR(               | EDWARD ROSS         (012) - 4210656     |)
SET M6=&STR(               +-----------------------------------------+)
WRITE
WRITE
WRITE
WRITE
WRITE &M1
WRITE &M2
WRITE &M3
WRITE &M4
WRITE &M5
WRITE &M6
CONTROL NOFLUSH NOMSG MAIN
PROFILE MODE WTPMSG MSGID NOPREF
GETSYSN
SET SYSNUM = &LASTCC
IF &SYSNUM = 0 THEN SET SYSNAME=BIGERROR
IF &SYSNUM = 1 THEN SET SYSNAME=PRDA
IF &SYSNUM = 2 THEN SET SYSNAME=PRDB
IF &SYSNUM = 3 THEN SET SYSNAME=PRDC
IF &SYSNUM = 4 THEN SET SYSNAME=PRDD
IF &SYSNUM = 5 THEN SET SYSNAME=PRDE
IF &SYSNUM = 6 THEN SET SYSNAME=TSTF
IF &SYSNUM = 7 THEN SET SYSNAME=TSTG

SET SHRNAME = &SYSNAME
IF &SYSNUM = 4 THEN SET SHRNAME=PRDE
IF &SYSNUM = 7 THEN SET SHRNAME=PRDE

FREE FILE(ISPLLIB,ISPPLIB,ISPMLIB,ISPTLIB,ISPSLIB, +
          ISPPROF,SMPTABL)
SET &DSNAME = &SYSUID..&SYSNAME..ISPF.ISPPROF
ALLOC FI(ISPPROF) SHR  DA('&DSNAME.')
IF &LASTCC ^= 0 THEN +
  DO
    RENAME &SYSUID..ISPF.ISPPROF &SYSUID..&SYSNAME..ISPF.ISPPROF
  END
ALLOC FI(ISPPROF) SHR  DA('&DSNAME.')
IF &LASTCC ^= 0 THEN +
  DO
    CONTROL MSG
    ALLOC DA('&DSNAME.') SP(2,1) TRACKS DIR(2)  +
          DSORG(PO) RECFM(F B) LRECL(80) BLKSIZE(6160) FI(ISPPROF)
    IF &LASTCC = 0 THEN +
      WRITE *** ISPF PROFILE DATA SET '&DSNAME.' HAS BEEN CREATED
    ELSE +
     DO
      WRITE  *** UNABLE TO ALLOCATE ISPF PROFILE DATA SET '&DSNAME.'
      EXIT CODE(12)
     END
  END
CONTROL MSG
ERROR EXIT
IF &PANEL = &STR() THEN +
  SET &PNL = PANEL(ISP@KRI)
ELSE +
  SET &PNL = PANEL(&PANEL)
ALLOC FI(ISPTABL) SHR DA('SYS2.RACFTABL')    /* RACF CHECKING */
ALLOC FI(ISPLLIB) SHR DA( +
                         'ISP.V4R2M0.SISPLOAD')    /* ISPF     */
ALLOC FI(ISPPLIB) SHR DA( +
                         'SYS2.RACFPANL'     /* RACF ADMIN    */ +
                         'SYS1.DGTPLIB'           /* DFP/DFDSS     */ +
                         'ISF.V1R5M0.SISFPLIB'    /* SDSF          */ +
                         'ISP.V4R2M0.SISPPENU')    /* ISPF          */
ALLOC FI(ISPMLIB) SHR DA( +
                         'SYS2.RACFMENU'     /* RACF ISPF     */ +
                         'SYS1.HRFMSG'      /* RACF ISPF     */ +
                         'SYS1.DGTMLIB'           /* DFP/DFDSS     */ +
                         'ISP.V4R2M0.SISPMENU')    /* ISPF          */
ALLOC FI(ISPTLIB) SHR DA( +
                         'SYS2.RACFTABL'     /* RACF TABLES   */ +
                         '&DSNAME'                /* USER PROFILE  */ +
                         'SYS1.DGTTLIB'           /* DFP/DFDSS     */ +
                         'ISF.V1R5M0.SISFTLIB'    /* SDSF          */ +
                         'ISP.V4R2M0.SISPTENU')    /* ISPF          */
ALLOC FI(ISPSLIB) SHR DA( +
                         'SYS2.RACFSLIB'     /* ISPF          */ +
                         'ISP.V4R2M0.SISPSLIB')    /* ISPF          */
ALLOC FI(HASPINDX) SHR DA('SYS0.&SYSNAME..HASPINDX') /* SDSF INDEX */
FREE FI(SYSPROC)
ALLOC FI(SYSPROC) SHR DA('SYS2.RACFCLST'      /* RACF ADMIN  */ +
                         'ISP.V4R2M0.SISPEXEC'     /* RACF ADMIN  */ +
                         'ISP.V4R2M0.SISPCLIB')    /* RACF ADMIN  */
ERROR RETURN
PDF &PNL NEWAPPL(RACF)
EX 'SYS2.RACFCLST(X)'
./ ADD NAME=#ISPMED  0101-01016-01016-1428-00085-00085-00000-RACFCLS
PROC 0 PANEL() /* ISPMED */
CONTROL NOFLUSH NOMSG MAIN
PROFILE MODE WTPMSG MSGID NOPREFIX
GETSYSN
SET SYSNUM = &LASTCC
IF &SYSNUM = 0 THEN SET SYSNAME=BIGERROR
IF &SYSNUM = 1 THEN SET SYSNAME=PRDA
IF &SYSNUM = 2 THEN SET SYSNAME=PRDB
IF &SYSNUM = 3 THEN SET SYSNAME=PRDC
IF &SYSNUM = 4 THEN SET SYSNAME=PRDD
IF &SYSNUM = 5 THEN SET SYSNAME=PRDE
IF &SYSNUM = 6 THEN SET SYSNAME=TSTF
IF &SYSNUM = 7 THEN SET SYSNAME=TSTG

SET SHRNAME = &SYSNAME
IF &SYSNUM = 4 THEN SET SHRNAME=PRDE
IF &SYSNUM = 7 THEN SET SHRNAME=PRDE

FREE FILE(ISPLLIB,ISPPLIB,ISPMLIB,ISPTLIB,ISPSLIB, +
          ISPPROF,ISPTABL,SMPTABL)
SET &DSNAME = &SYSUID..&SYSNAME..ISPF.ISPPROF
ALLOC FI(ISPPROF) SHR  DA('&DSNAME.')
IF &LASTCC ^= 0 THEN +
  DO
    RENAME &SYSUID..ISPF.ISPPROF &SYSUID..&SYSNAME..ISPF.ISPPROF
  END
ALLOC FI(ISPPROF) SHR  DA('&DSNAME.')
IF &LASTCC ^= 0 THEN +
  DO
    CONTROL MSG
    ALLOC DA('&DSNAME.') SP(2,1) TRACKS DIR(2) +
    DSORG(PO) RECFM(F B) LRECL(80) BLKSIZE(6160) FI(ISPPROF)
    IF &LASTCC = 0 THEN +
      WRITE *** ISPF PROFILE DATA SET '&DSNAME.' HAS BEEN CREATED
    ELSE +
     DO
      WRITE  *** UNABLE TO ALLOCATE ISPF PROFILE DATA SET '&DSNAME.'
      EXIT CODE(12)
     END
  END
CONTROL MSG
ERROR EXIT
IF &PANEL = &STR() THEN +
  SET &PNL = PANEL(ISP@MED)
ELSE +
  SET &PNL = PANEL(&PANEL)
ALLOC FI(ISPTABL) SHR DA('&DSNAME.')
ALLOC FI(ISPLLIB) SHR DA( +
                         'SYS1.ICEISPL')
ALLOC FI(ISPPLIB) SHR DA( +
                         'SYS2.RACFPANL' /* RACF CHECKING */ +
                         'SYS1.ICEISPP'           /* DFSORT        */ +
                         'EOY.SEOYPENU' /* RACF CHECKING */ +
                         'ISF.V1R5M0.SISFPLIB'  /* SDSF          */ +
                         'SYS3.&SYSNAME..IOAIV410.PANEL' /* CONTROL */ +
                         'SYS2.ISP.OPSPENU')   /* ISPF          */
ALLOC FI(ISPMLIB) SHR DA( +
                         'SYS1.ICEISPM'           /* DFSORT        */ +
                         'EOY.SEOYMENU' /* RACF CHECKING */ +
                         'SYS3.&SYSNAME..IOAIV410.ISMSG' /* CONTROL */ +
                         'ISP.V4R2M0.SISPMENU')   /* ISPF          */
ALLOC FI(ISPTLIB) SHR DA( +
                         '&DSNAME'                /*               */ +
                         'SYS1.ICEISPT'           /* DFSORT        */ +
                         'ISF.V1R5M0.SISFTLIB'  /* SDSF          */ +
                         'EOY.SEOYTENU' /* RACF CHECKING */ +
                         'SYS3.&SYSNAME..IOAIV410.PANEL' /* CONTROL */ +
                         'ISP.V4R2M0.SISPTENU')   /* ISPF          */
ALLOC FI(ISPSLIB) SHR DA( +
                         'SYS1.ICEISPS'           /* DFSORT        */ +
                         'ISP.V4R2M0.SISPSLIB')   /* ISPF          */
ALLOC FI(HASPINDX) SHR DA('SYS0.&SYSNAME..HASPINDX') /* ISPF        */
FREE FI(SYSPROC)
ALLOC FI(SYSPROC) SHR DA( +
                         'SYS2.RACFCLST' /*              */ +
                         'SYS2.CMDPROC' /* RACF CHECKING */ +
                         'EOY.SEOYCLIB' /* RACF CHECKING */ +
                         'ISP.V4R2M0.SISPEXEC'     /* RACF ADMIN  */ +
                         'ISP.V4R2M0.SISPCLIB'     /* RACF ADMIN  */ +
                         'SYS1.ICEISPC'           /* DFSORT        */ +
                         'SYS3.&SYSNAME..IOAIV410.CLIST') /* CONTROL */
ERROR RETURN
MURPHY
PDF &PNL
EX 'SYS2.RACFCLST(X1)'
./ ADD NAME=#ISPMEDA 0101-01016-01016-1428-00080-00080-00000-RACFCLS
PROC 0 PANEL()
SET M1=&STR(               +-----------------------------------------+)
SET M2=&STR(               | IF YOU HAVE ANY PROBLEMS ADMINISTRATING |)
SET M3=&STR(               | USER IDS, PLEASE CALL                   |)
SET M4=&STR(               |                                         |)
SET M5=&STR(               | EDWARD ROSS         (012) - 4210656     |)
SET M6=&STR(               +-----------------------------------------+)
WRITE
WRITE
WRITE
WRITE
WRITE &M1
WRITE &M2
WRITE &M3
WRITE &M4
WRITE &M5
WRITE &M6
CONTROL NOFLUSH NOMSG MAIN
PROFILE MODE WTPMSG MSGID NOPREF
GETSYSN
SET SYSNUM = &LASTCC
IF &SYSNUM = 0 THEN SET SYSNAME=BIGERROR
IF &SYSNUM = 1 THEN SET SYSNAME=PRDA
IF &SYSNUM = 2 THEN SET SYSNAME=PRDB
IF &SYSNUM = 3 THEN SET SYSNAME=PRDC
IF &SYSNUM = 4 THEN SET SYSNAME=PRDD
IF &SYSNUM = 5 THEN SET SYSNAME=PRDE
IF &SYSNUM = 6 THEN SET SYSNAME=TSTF
IF &SYSNUM = 7 THEN SET SYSNAME=TSTG

SET SHRNAME = &SYSNAME
IF &SYSNUM = 4 THEN SET SHRNAME=PRDE
IF &SYSNUM = 7 THEN SET SHRNAME=PRDE

FREE FILE(ISPLLIB,ISPPLIB,ISPMLIB,ISPTLIB,ISPSLIB, +
          ISPPROF,SMPTABL)
FREE FI(SYSPROC)
SET &DSNAME = &SYSUID..&SYSNAME..ISPF.ISPPROF
ALLOC FI(ISPPROF) SHR  DA('&DSNAME.')
IF &LASTCC ^= 0 THEN +
  DO
    RENAME &SYSUID..ISPF.ISPPROF &SYSUID..&SYSNAME..ISPF.ISPPROF
  END
ALLOC FI(ISPPROF) SHR  DA('&DSNAME.')
IF &LASTCC ^= 0 THEN +
  DO
    CONTROL MSG
    ALLOC DA('&DSNAME.') SP(2,1) TRACKS DIR(2)  +
          DSORG(PO) RECFM(F B) LRECL(80) BLKSIZE(6160) FI(ISPPROF)
    IF &LASTCC = 0 THEN +
      WRITE *** ISPF PROFILE DATA SET '&DSNAME.' HAS BEEN CREATED
    ELSE +
     DO
      WRITE  *** UNABLE TO ALLOCATE ISPF PROFILE DATA SET '&DSNAME.'
      EXIT CODE(12)
     END
  END
CONTROL MSG
ERROR EXIT
IF &PANEL = &STR() THEN +
  SET &PNL = PANEL(ISP@ADMN)
ELSE +
  SET &PNL = PANEL(&PANEL)
ALLOC FI(ISPTABL) SHR DA('SYS2.RACFTABL')         /* RACF CHECKING */
ALLOC FI(ISPLLIB) SHR DA('ISP.V4R2M0.SISPLOAD')   /* ISPF          */
ALLOC FI(ISPPLIB) SHR DA('SYS2.RACFPANL'          /* RACF CHECKING */ +
                         'ISF.V1R5M0.SISFPLIB')   /* SDSF          */
ALLOC FI(ISPMLIB) SHR DA('SYS2.RACFMENU'          /* RACF ISPF     */ +
                         'SYS1.HRFMSG')          /* RACF ISPF     */
ALLOC FI(ISPTLIB) SHR DA('SYS2.RACFTABL'          /* RACF TABLES   */ +
                         '&DSNAME'                /* USER PROFILE  */ +
                         'ISF.V1R5M0.SISFTLIB')   /* SDSF          */
ALLOC FI(ISPSLIB) SHR DA('SYS2.RACFSLIB')         /* ISPF          */
ALLOC FI(HASPINDX) SHR DA('SYS0.&SYSNAME..HASPINDX') /* SDSF INDEX */
ALLOC FI(SYSPROC) SHR DA('SYS2.RACFCLST'          /* RACF ADMIN  */  +
                         'ISP.V4R2M0.SISPEXEC'     /* RACF ADMIN  */ +
                         'ISP.V4R2M0.SISPCLIB')    /* RACF ADMIN  */
ERROR RETURN
PDF &PNL NEWAPPL(RACF)
EX 'SYS2.RACFCLST(X)'
./ ADD NAME=#ISPNET  0101-01016-01016-1428-00078-00078-00000-RACFCLS
PROC 0 PANEL()
CONTROL NOFLUSH NOMSG MAIN
PROFILE MODE WTPMSG MSGID NOPREFIX
GETSYSN
SET SYSNUM = &LASTCC
IF &SYSNUM = 0 THEN SET SYSNAME=BIGERROR
IF &SYSNUM = 1 THEN SET SYSNAME=PRDA
IF &SYSNUM = 2 THEN SET SYSNAME=PRDB
IF &SYSNUM = 3 THEN SET SYSNAME=PRDC
IF &SYSNUM = 4 THEN SET SYSNAME=PRDD
IF &SYSNUM = 5 THEN SET SYSNAME=PRDE
IF &SYSNUM = 6 THEN SET SYSNAME=TSTF
IF &SYSNUM = 7 THEN SET SYSNAME=TSTG

SET SHRNAME = &SYSNAME
IF &SYSNUM = 4 THEN SET SHRNAME=PRDE
IF &SYSNUM = 7 THEN SET SHRNAME=PRDE

FREE FILE(ISPLLIB,ISPPLIB,ISPMLIB,ISPTLIB,ISPSLIB, +
          ISPPROF,ISPTABL,SMPTABL,ISRCFIL)
SET &DSNAME = &SYSUID..&SYSNAME..ISPF.ISPPROF
ALLOC FI(ISPPROF) SHR  DA('&DSNAME.')
IF &LASTCC ^= 0 THEN +
  DO
    CONTROL MSG
    ALLOC DA('&DSNAME.') SP(2,1) TRACKS DIR(2) +
     FI(ISPPROF)   DSORG(PO) RECFM(F B) LRECL(80) BLKSIZE(6160)
    IF &LASTCC = 0 THEN +
      WRITE *** ISPF PROFILE DATA SET '&DSNAME.' HAS BEEN CREATED
    ELSE +
     DO
      WRITE  *** UNABLE TO ALLOCATE ISPF PROFILE DATA SET '&DSNAME.'
      EXIT CODE(12)
     END
  END
CONTROL MSG
ERROR EXIT
IF &PANEL = &STR() THEN +
  SET &PNL = PANEL(ISP@NET)
ELSE +
  SET &PNL = PANEL(&PANEL)
ALLOC FI(ISPTABL) SHR DA('&DSNAME.')
ALLOC FI(ISPLLIB) SHR DA( +
                         'SYS1.ICEISPL'           /* DFSORT        */ +
                         'SYS2.TSPRINT.APFLIB'    /* TSP    */ +
                         'SYS1.DGTLLIB'           /* DFP/DFDSS     */ +
                         'ISP.V4R2M0.SISPLOAD')    /* ISPF      */
ALLOC FI(ISPPLIB) SHR DA(                         /* SPFNET        */ +
                         'SYS2.RACFPANL'     /* CUSTOM        */ +
                         'SYS2.ISP.NETPENU'      /* CUSTOM        */ +
                         'SYS1.ICEISPP'           /* DFSORT        */ +
                         'SYS1.DGTPLIB'           /* DFP/DFDSS     */ +
                         'ISF.V1R5M0.SISFPLIB')    /* SDSF      */
ALLOC FI(ISPMLIB) SHR DA( +
                         'SYS1.ICEISPM'           /* DFSORT        */ +
                         'SYS1.DGTMLIB'           /* DFP/DFDSS     */ +
                         'ISP.V4R2M0.SISPMENU')    /* ISPF      */
ALLOC FI(ISPTLIB) SHR DA( +
                         '&DSNAME'                                    +
                         'SYS1.ICEISPT'           /* DFSORT        */ +
                         'SYS1.DGTTLIB'           /* DFP/DFDSS     */ +
                         'ISF.V1R5M0.SISFTLIB'     /* SDSF     */ +
                         'ISP.V4R2M0.SISPTENU')    /* ISPF      */
ALLOC FI(ISPSLIB) SHR DA( +
                         'SYS1.ICEISPS'           /* DFSORT        */ +
                         'SYS1.DGTSLIB'           /* DFDSS         */ +
                         'ISP.V4R2M0.SISPSLIB')    /* ISPF      */
ALLOC FI(HASPINDX) SHR DA('SYS0.&SYSNAME..HASPINDX') /* SDSF INDEX */
FREE FI(SYSPROC)
ALLOC FI(SYSPROC) SHR DA( +
                         'SYS2.RACFCLST'     /* RACF CHECKING */ +
      /*                 'SYS2.CMDPROC'                       */ +
                         'SYS1.ICEISPC'           /* DFSORT        */ +
                         'SYS1.DGTCLIB')          /* DFDSS         */
ERROR RETURN
MURPHY
PDF &PNL
EX 'SYS2.RACFCLST(X)'
./ ADD NAME=#ISPNETA 0101-01016-01016-1428-00080-00080-00000-RACFCLS
PROC 0 PANEL()
SET M1=&STR(               +-----------------------------------------+)
SET M2=&STR(               | IF YOU HAVE ANY PROBLEMS ADMINISTRATING |)
SET M3=&STR(               | USER IDS, PLEASE CALL                   |)
SET M4=&STR(               |                                         |)
SET M5=&STR(               | EDWARD ROSS         (012) - 4210656     |)
SET M6=&STR(               +-----------------------------------------+)
WRITE
WRITE
WRITE
WRITE
WRITE &M1
WRITE &M2
WRITE &M3
WRITE &M4
WRITE &M5
WRITE &M6
CONTROL NOFLUSH NOMSG MAIN
PROFILE MODE WTPMSG MSGID NOPREF
GETSYSN
SET SYSNUM = &LASTCC
IF &SYSNUM = 0 THEN SET SYSNAME=BIGERROR
IF &SYSNUM = 1 THEN SET SYSNAME=PRDA
IF &SYSNUM = 2 THEN SET SYSNAME=PRDB
IF &SYSNUM = 3 THEN SET SYSNAME=PRDC
IF &SYSNUM = 4 THEN SET SYSNAME=PRDD
IF &SYSNUM = 5 THEN SET SYSNAME=PRDE
IF &SYSNUM = 6 THEN SET SYSNAME=TSTF
IF &SYSNUM = 7 THEN SET SYSNAME=TSTG

SET SHRNAME = &SYSNAME
IF &SYSNUM = 4 THEN SET SHRNAME=PRDE
IF &SYSNUM = 7 THEN SET SHRNAME=PRDE

FREE FILE(ISPLLIB,ISPPLIB,ISPMLIB,ISPTLIB,ISPSLIB, +
          ISPPROF,SMPTABL)
FREE FI(SYSPROC)
SET &DSNAME = &SYSUID..&SYSNAME..ISPF.ISPPROF
ALLOC FI(ISPPROF) SHR  DA('&DSNAME.')
IF &LASTCC ^= 0 THEN +
  DO
    RENAME &SYSUID..ISPF.ISPPROF &SYSUID..&SYSNAME..ISPF.ISPPROF
  END
ALLOC FI(ISPPROF) SHR  DA('&DSNAME.')
IF &LASTCC ^= 0 THEN +
  DO
    CONTROL MSG
    ALLOC DA('&DSNAME.') SP(2,1) TRACKS DIR(2)  +
          DSORG(PO) RECFM(F B) LRECL(80) BLKSIZE(6160) FI(ISPPROF)
    IF &LASTCC = 0 THEN +
      WRITE *** ISPF PROFILE DATA SET '&DSNAME.' HAS BEEN CREATED
    ELSE +
     DO
      WRITE  *** UNABLE TO ALLOCATE ISPF PROFILE DATA SET '&DSNAME.'
      EXIT CODE(12)
     END
  END
CONTROL MSG
ERROR EXIT
IF &PANEL = &STR() THEN +
  SET &PNL = PANEL(ISP@ADMN)
ELSE +
  SET &PNL = PANEL(&PANEL)
ALLOC FI(ISPTABL) SHR DA('SYS2.RACFTABL')         /* RACF CHECKING */
ALLOC FI(ISPLLIB) SHR DA('ISP.V4R2M0.SISPLOAD')   /* ISPF          */
ALLOC FI(ISPPLIB) SHR DA('SYS2.RACFPANL'          /* RACF CHECKING */ +
                         'ISF.V1R5M0.SISFPLIB')   /* SDSF          */
ALLOC FI(ISPMLIB) SHR DA('SYS2.RACFMENU'          /* RACF ISPF     */ +
                         'SYS1.HRFMSG')          /* RACF ISPF     */
ALLOC FI(ISPTLIB) SHR DA('SYS2.RACFTABL'          /* RACF TABLES   */ +
                         '&DSNAME'                /* USER PROFILE  */ +
                         'ISF.V1R5M0.SISFTLIB')   /* SDSF          */
ALLOC FI(ISPSLIB) SHR DA('SYS2.RACFSLIB')         /* ISPF          */
ALLOC FI(HASPINDX) SHR DA('SYS0.&SYSNAME..HASPINDX') /* SDSF INDEX */
ALLOC FI(SYSPROC) SHR DA('SYS2.RACFCLST'          /* RACF ADMIN  */  +
                         'ISP.V4R2M0.SISPEXEC'     /* RACF ADMIN  */ +
                         'ISP.V4R2M0.SISPCLIB')    /* RACF ADMIN  */
ERROR RETURN
PDF &PNL NEWAPPL(RACF)
EX 'SYS2.RACFCLST(X)'
./ ADD NAME=#ISPOPS  0101-01016-01016-1428-00119-00119-00000-RACFCLS
PROC 0 PANEL()   /* ISPOPS */
CONTROL NOFLUSH NOMSG MAIN
PROFILE MODE WTPMSG MSGID
GETSYSN
SET SYSNUM = &LASTCC
IF &SYSNUM = 0 THEN SET SYSNAME=BIGERROR
IF &SYSNUM = 1 THEN SET SYSNAME=PRDA
IF &SYSNUM = 2 THEN SET SYSNAME=PRDB
IF &SYSNUM = 3 THEN SET SYSNAME=PRDC
IF &SYSNUM = 4 THEN SET SYSNAME=PRDD
IF &SYSNUM = 5 THEN SET SYSNAME=PRDE
IF &SYSNUM = 6 THEN SET SYSNAME=TSTF
IF &SYSNUM = 7 THEN SET SYSNAME=TSTG

SET SHRNAME = &SYSNAME
IF &SYSNUM = 4 THEN SET SHRNAME=PRDE
IF &SYSNUM = 7 THEN SET SHRNAME=PRDE

FREE FILE(ISPLLIB,ISPPLIB,ISPMLIB,ISPTLIB,ISPSLIB, +
          ISPPROF,ISPTABL,SMPTABL)
SET &DSNAME = &SYSUID..&SYSNAME..ISPF.ISPPROF
ALLOC FI(ISPPROF) SHR  DA('&DSNAME.')
IF &LASTCC ^= 0 THEN +
  DO
    FREE FI(ISPCRTE)
    CONTROL MSG
    ATTRIB ISPCRTE DSORG(PO) RECFM(F B) LRECL(80) BLKSIZE(6160)
    ALLOC DA('&DSNAME.') SP(2,1) TRACKS DIR(2) USING(ISPCRTE) +
        FI(ISPPROF)
    IF &LASTCC = 0 THEN +
      WRITE *** ISPF PROFILE DATA SET '&DSNAME.' HAS BEEN CREATED
    ELSE +
     DO
      WRITE  *** UNABLE TO ALLOCATE ISPF PROFILE DATA SET '&DSNAME.'
      FREE FI(ISPCRTE)
      EXIT CODE(12)
     END
    FREE FI(ISPCRTE)
  END
CONTROL MSG
IF &PANEL = &STR() THEN +
  SET &PNL = PANEL(ISP@OPS)
ELSE +
  SET &PNL = PANEL(&PANEL)
ERROR RETURN
ALLOC FI(ISPTABL) SHR DA('&DSNAME.')
/* ALLOC FI(SMPTABL) SHR DA('&DSNAME.')  */
ALLOC FI(ISPLLIB) SHR DA( +
/*  'SYS1.DFQLLIB'                                   DFHSM       */  +
    'SYS1.ICEISPL'                                /* DFSORT      */  +
    'SYS1.DGTLLIB'                                /* DFP/DFDSS   */  +
/*  'DIT.V1R1M0.SDITLOAD'                            DITTO       */  +
/*  'DELPHI.V221.CMDLOAD'                            DELPHI      */  +
    'SYS2.TSPRINT.APFLIB'               /* DELPHI      */ +
/*  'SDF150.SDFLOAD')                                DELPHI      */ +
/*  'SYS2.VPS.VPS.R62.TSO.LOAD')                 /*  VPS         */
ALLOC FI(ISPPLIB) SHR DA( +
    'ISF.V1R5M0.SISFPLIB'                         /* SDSF        */  +
    'SYS2.RACFPANL'                               /* CUSTOM      */  +
    'SYS2.ISP.OPSPENU'                         /* ISPF        */  +
    'SYS3.&SHRNAME..IOAIV410.PANEL'               /* IOA         */  +
/*  'SYS2.ISPPLIB'                                   CUSTOM      */  +
/*  'SYS1.DFQPLIB'                                   DFHSM       */  +
    'SYS1.SERBPENU'                              /*  RMFIII      */  +
/*  'SYS1.SBPXPENU'                                  OMVS        */  +
    'SYS1.ICEISPP'                                /* DFSORT      */  +
    'SYS1.DGTPLIB'                                /* DFP/DFDSS   */  +
/*  'SYS1.SBLSPNL0'                                  IPCS        */  +
    'EOY.SEOYPENU')                               /* BOOKMANAGER */
ALLOC FI(ISPMLIB) SHR DA( +
    'ISP.V4R2M0.SISPMENU'                         /* ISPF        */  +
    'ISF.V1R5M0.SISFMLIB'                         /* SDSF        */  +
/*  'SYS1.DFQMLIB'                                   DFHSM       */  +
/*  'SYS1.SBPXMENU'                                  OMVS        */  +
    'SYS1.SERBMENU'                               /* RMFIII      */  +
    'SYS1.ICEISPM'                                /* DFSORT      */  +
    'SYS1.DGTMLIB'                                /* DFP/DFDSS   */  +
/*  'SYS1.SBLSMSG0'                                  IPCS        */  +
/*  'SYS2.ISPMENU'                                   CUSTOM      */  +
    'EDC.V2R2M0.SEDCMSGP'                         /* C/370       */  +
    'EOY.SEOYMENU'                                /* BOOKMANAGER */  +
/*  'DELPHI.V221.MLIB'                               DELPHI      */  +
    'SYS3.&SHRNAME..IOAIV410.ISMSG')              /* IOA         */
ALLOC FI(ISPTLIB) SHR DA('&DSNAME' +
    'ISF.V1R5M0.SISFTLIB'                         /* SDSF        */  +
    'SYS1.SERBTENU'                               /* RMFIII      */  +
/*  'SYS1.SBPXTENU'                                  OMVS        */  +
    'SYS1.ICEISPT'                                /* DFSORT      */  +
    'SYS1.DGTTLIB'                                /* DFP/DFDSS   */  +
/*  'SYS1.SBLSTBL0'                                  IPCS        */  +
    'EOY.SEOYTENU'                                /* BOOKMANAGER */  +
/*  'DELPHI.V221.CMDTAB'                             DELPHI      */  +
    'SYS3.&SHRNAME..IOAIV410.TLIB'                /* IOA         */  +
    'ISP.V4R2M0.SISPTENU')                        /* ISPF        */
ALLOC FI(ISPSLIB) SHR DA( +
/*  'SYS1.SBLSKEL0'                                  IPCS        */  +
    'SYS1.ICEISPS'                                /* DFSORT      */  +
    'SYS1.DGTSLIB'                                /* DFDSS       */  +
    'ISP.V4R2M0.SISPSLIB')                        /* ISPF        */
FREE FI(SYSPROC)
ALLOC FI(SYSPROC) SHR DA( +
    'ISP.V4R2M0.SISPEXEC'                         /* RACF ADMIN  */ +
    'ISP.V4R2M0.SISPCLIB'                         /* RACF ADMIN  */ +
    'SYS2.RACFCLST'                              /* CUSTOMIZED  */  +
    'SYS2.CMDPROC'                               /* CUSTOMIZED  */  +
/*  'SYS1.SBLSCLI0'                                 IPCS        */  +
/*  'SYS1.SBPXEXEC'                                 OMVS        */  +
    'SYS1.ICEISPC'                               /* DFSORT      */  +
    'SYS1.DGTCLIB'                               /* DFDSS       */  +
    'SYS1.SERBCLS'                               /* RMFIII      */  +
    'EDC.V2R2M0.SEDCLIST'                        /* C/370       */  +
    'EOY.SEOYCLIB'                               /* BOOKMANAGER */  +
    'SYS3.&SHRNAME..IOAIV410.CLIST')             /* IOA         */
/*  'SDF2.V1R4M0.SDGICMD') */
ALLOC FI(HASPINDX) SHR DA('SYS0.&SYSNAME..HASPINDX') /* SDSF INDEX */
ERROR RETURN
MURPHY
PDF &PNL
EX 'SYS2.RACFCLST(X)'
./ ADD NAME=#ISPOPSA 0101-01016-01016-1428-00080-00080-00000-RACFCLS
PROC 0 PANEL()
SET M1=&STR(               +-----------------------------------------+)
SET M2=&STR(               | IF YOU HAVE ANY PROBLEMS ADMINISTRATING |)
SET M3=&STR(               | USER IDS, PLEASE CALL                   |)
SET M4=&STR(               |                                         |)
SET M5=&STR(               | EDWARD ROSS         (012) - 4210656     |)
SET M6=&STR(               +-----------------------------------------+)
WRITE
WRITE
WRITE
WRITE
WRITE &M1
WRITE &M2
WRITE &M3
WRITE &M4
WRITE &M5
WRITE &M6
CONTROL NOFLUSH NOMSG MAIN
PROFILE MODE WTPMSG MSGID NOPREF
GETSYSN
SET SYSNUM = &LASTCC
IF &SYSNUM = 0 THEN SET SYSNAME=BIGERROR
IF &SYSNUM = 1 THEN SET SYSNAME=PRDA
IF &SYSNUM = 2 THEN SET SYSNAME=PRDB
IF &SYSNUM = 3 THEN SET SYSNAME=PRDC
IF &SYSNUM = 4 THEN SET SYSNAME=PRDD
IF &SYSNUM = 5 THEN SET SYSNAME=PRDE
IF &SYSNUM = 6 THEN SET SYSNAME=TSTF
IF &SYSNUM = 7 THEN SET SYSNAME=TSTG

SET SHRNAME = &SYSNAME
IF &SYSNUM = 4 THEN SET SHRNAME=PRDE
IF &SYSNUM = 7 THEN SET SHRNAME=PRDE

FREE FILE(ISPLLIB,ISPPLIB,ISPMLIB,ISPTLIB,ISPSLIB, +
          ISPPROF,SMPTABL)
FREE FI(SYSPROC)
SET &DSNAME = &SYSUID..&SYSNAME..ISPF.ISPPROF
ALLOC FI(ISPPROF) SHR  DA('&DSNAME.')
IF &LASTCC ^= 0 THEN +
  DO
    RENAME &SYSUID..ISPF.ISPPROF &SYSUID..&SYSNAME..ISPF.ISPPROF
  END
ALLOC FI(ISPPROF) SHR  DA('&DSNAME.')
IF &LASTCC ^= 0 THEN +
  DO
    CONTROL MSG
    ALLOC DA('&DSNAME.') SP(2,1) TRACKS DIR(2)  +
          DSORG(PO) RECFM(F B) LRECL(80) BLKSIZE(6160) FI(ISPPROF)
    IF &LASTCC = 0 THEN +
      WRITE *** ISPF PROFILE DATA SET '&DSNAME.' HAS BEEN CREATED
    ELSE +
     DO
      WRITE  *** UNABLE TO ALLOCATE ISPF PROFILE DATA SET '&DSNAME.'
      EXIT CODE(12)
     END
  END
CONTROL MSG
ERROR EXIT
IF &PANEL = &STR() THEN +
  SET &PNL = PANEL(ISP@ADMN)
ELSE +
  SET &PNL = PANEL(&PANEL)
ALLOC FI(ISPTABL) SHR DA('SYS2.RACFTABL') /* RACFCHECKING */
ALLOC FI(ISPLLIB) SHR DA('ISP.V4R2M0.SISPLOAD')   /* ISPF          */
ALLOC FI(ISPPLIB) SHR DA('SYS2.RACFPANL' /* RACFCHECKING */ +
                         'ISF.V1R5M0.SISFPLIB')   /* SDSF          */
ALLOC FI(ISPMLIB) SHR DA('SYS2.RACFMENU' /* RACFISPF     */ +
                         'SYS1.HRFMSG') /* RACFISPF     */
ALLOC FI(ISPTLIB) SHR DA('SYS2.RACFTABL' /* RACFTABLES   */ +
                         '&DSNAME'                /* USER PROFILE  */ +
                         'ISF.V1R5M0.SISFTLIB')   /* SDSF          */
ALLOC FI(ISPSLIB) SHR DA('SYS2.RACFSLIB') /* ISPF        */
ALLOC FI(HASPINDX) SHR DA('SYS0.&SYSNAME..HASPINDX') /* SDSF INDEX */
ALLOC FI(SYSPROC) SHR DA('SYS2.RACFCLST' /* RACF ADMIN */  +
                         'ISP.V4R2M0.SISPEXEC'     /* RACF ADMIN  */ +
                         'ISP.V4R2M0.SISPCLIB')    /* RACF ADMIN  */
ERROR RETURN
PDF &PNL NEWAPPL(RACF)
EX 'SYS2.RACFCLST(X)'
./ ADD NAME=#ISPPOL  0101-01016-01016-1428-00085-00085-00000-RACFCLS
PROC 0 PANEL()    /* ISPPOL */
SET M1=&STR(               +-----------------------------------------+)
SET M2=&STR(               | IF YOU EXPERIENCE ANY PROBLEMS WITH THIS|)
SET M3=&STR(               | USERIS, PLEASE CALL (012) 4210000       |)
SET M4=&STR(               |                                         |)
SET M5=&STR(               | EDWARD ROSS         EXT - 120656        |)
SET M6=&STR(               +-----------------------------------------+)
WRITE
WRITE
WRITE
WRITE
WRITE &M1
WRITE &M2
WRITE &M3
WRITE &M4
WRITE &M5
WRITE &M6
CONTROL NOFLUSH NOMSG MAIN
PROFILE MODE WTPMSG MSGID NOPREFIX
GETSYSN
SET SYSNUM = &LASTCC
IF &SYSNUM = 0 THEN SET SYSNAME=BIGERROR
IF &SYSNUM = 1 THEN SET SYSNAME=PRDA
IF &SYSNUM = 2 THEN SET SYSNAME=PRDB
IF &SYSNUM = 3 THEN SET SYSNAME=PRDC
IF &SYSNUM = 4 THEN SET SYSNAME=PRDD
IF &SYSNUM = 5 THEN SET SYSNAME=PRDE
IF &SYSNUM = 6 THEN SET SYSNAME=TSTF
IF &SYSNUM = 7 THEN SET SYSNAME=TSTG

SET SHRNAME = &SYSNAME
IF &SYSNUM = 4 THEN SET SHRNAME=PRDE
IF &SYSNUM = 7 THEN SET SHRNAME=PRDE

FREE FILE(ISPLLIB,ISPPLIB,ISPMLIB,ISPTLIB,ISPSLIB, +
          ISPPROF,ISPTABL,SMPTABL)
SET &DSNAME = &SYSUID..&SYSNAME..ISPF.ISPPROF
ALLOC FI(ISPPROF) SHR  DA('&DSNAME.')
IF &LASTCC ^= 0 THEN +
  DO
    RENAME &SYSUID..ISPF.ISPPROF &SYSUID..&SYSNAME..ISPF.ISPPROF
  END
ALLOC FI(ISPPROF) SHR  DA('&DSNAME.')
IF &LASTCC ^= 0 THEN +
  DO
    CONTROL MSG
    ALLOC DA('&DSNAME.') SP(2,1) TRACKS DIR(2) +
    DSORG(PO) RECFM(F B) LRECL(80) BLKSIZE(6160) FI(ISPPROF)
    IF &LASTCC = 0 THEN +
      WRITE *** ISPF PROFILE DATA SET '&DSNAME.' HAS BEEN CREATED
    ELSE +
     DO
      WRITE  *** UNABLE TO ALLOCATE ISPF PROFILE DATA SET '&DSNAME.'
      EXIT CODE(12)
     END
  END
CONTROL MSG
ERROR EXIT
IF &PANEL = &STR() THEN +
  SET &PNL = PANEL(ISP@POL)
ELSE +
  SET &PNL = PANEL(&PANEL)
ALLOC FI(ISPTABL) SHR DA('&DSNAME.')
ALLOC FI(ISPPLIB) SHR DA( +
                         'SYS2.RACFPANL'     /* RACF CHECKING */ +
                         'ISF.V1R5M0.SISFPLIB'   /* SDSF          */ +
                         'ISP.V4R2M0.SISPPENU')   /* ISPF          */
ALLOC FI(ISPMLIB) SHR DA( +
                         'ISP.V4R2M0.SISPMENU')   /* ISPF          */
ALLOC FI(ISPTLIB) SHR DA( +
                         '&DSNAME'                /*               */ +
                         'ISF.V1R5M0.SISFTLIB'   /* SDSF          */ +
                         'ISP.V4R2M0.SISPTENU')   /* ISPF          */
ALLOC FI(ISPSLIB) SHR DA( +
                         'ISP.V4R2M0.SISPSLIB')   /* ISPF          */
ALLOC FI(HASPINDX) SHR DA('SYS0.&SYSNAME..HASPINDX') /* ISPF        */
FREE FI(SYSPROC)
ALLOC FI(SYSPROC) SHR DA( +
     'SYS2.RACFCLST' +
     'ISP.V4R2M0.SISPEXEC'     /* RACF ADMIN  */ +
     'ISP.V4R2M0.SISPCLIB')    /* RACF ADMIN  */
ERROR RETURN
MURPHY
PDF &PNL
EX 'SYS2.RACFCLST(X1)'
./ ADD NAME=#ISPPRG  0101-01016-01016-1428-00134-00134-00000-RACFCLS
PROC 0 PANEL()   /*ISPPRG */
CONTROL NOFLUSH NOMSG MAIN
PROFILE MODE WTPMSG MSGID
GETSYSN
SET SYSNUM = &LASTCC
IF &SYSNUM = 0 THEN SET SYSNAME=BIGERROR
IF &SYSNUM = 1 THEN SET SYSNAME=PRDA
IF &SYSNUM = 2 THEN SET SYSNAME=PRDB
IF &SYSNUM = 3 THEN SET SYSNAME=PRDC
IF &SYSNUM = 4 THEN SET SYSNAME=PRDD
IF &SYSNUM = 5 THEN SET SYSNAME=PRDE
IF &SYSNUM = 6 THEN SET SYSNAME=TSTF
IF &SYSNUM = 7 THEN SET SYSNAME=TSTG

SET SHRNAME = &SYSNAME
IF &SYSNUM = 4 THEN SET SHRNAME=PRDE
IF &SYSNUM = 7 THEN SET SHRNAME=PRDE

FREE FILE(ISPLLIB,ISPPLIB,ISPMLIB,ISPTLIB,ISPSLIB, +
          ISPPROF,ISPTABL,SMPTABL)

SET &DSNAME = &SYSUID..&SYSNAME..ISPF.ISPPROF
ALLOC FI(ISPPROF) SHR  DA('&DSNAME.')
IF &LASTCC ^= 0 THEN +
  DO
    RENAME &SYSUID..ISPF.ISPPROF &SYSUID..&SYSNAME..ISPF.ISPPROF
  END
ALLOC FI(ISPPROF) SHR  DA('&DSNAME.')
IF &LASTCC ^= 0 THEN +
  DO
    FREE FI(ISPCRTE)
    CONTROL MSG
    ATTRIB ISPCRTE DSORG(PO) RECFM(F B) LRECL(80) BLKSIZE(6160)
    ALLOC DA('&DSNAME.') SP(2,1) TRACKS DIR(2) USING(ISPCRTE) +
        FI(ISPPROF)
    IF &LASTCC = 0 THEN +
      WRITE *** ISPF PROFILE DATA SET '&DSNAME.' HAS BEEN CREATED
    ELSE +
     DO
      WRITE  *** UNABLE TO ALLOCATE ISPF PROFILE DATA SET '&DSNAME.'
      FREE FI(ISPCRTE)
      EXIT CODE(12)
     END
    FREE FI(ISPCRTE)
  END
CONTROL MSG
ERROR EXIT
IF &PANEL = &STR() THEN +
  SET &PNL = PANEL(ISP@PRG)
ELSE +
  SET &PNL = PANEL(&PANEL)
ALLOC FI(ISPTABL) SHR DA('&DSNAME.')
ALLOC FI(ISPLLIB) SHR DA( +
                         'MAINT.&SHRNAME..LIVE.LOAD' /* IN HOUSE   */ +
                         'SYS1.ICEISPL'           /* DFSORT        */ +
                         'SYS1.DGTLLIB'           /* DFP/DFDSS     */ +
                      /* 'SDF150.SDFLOAD'            SDF           */ +
                         'DELPHI.V221.CMDLOAD'    /* DELPHI        */ +
                         'SYS2.TSPRINT.APFLIB'    /* DELPHI        */ +
/*                       'SYS2.VPS.VPS.R62.TSO.LOAD' /*  VPS       */ +
                         'ORA.V71C.CMDLOAD')      /* ORACLE        */
ALLOC FI(ISPPLIB) SHR DA( +
                         'SYS2.LMF.PLIB'          /* IN HOUSE LMF  */ +
                         'SYS2.ISP.PRGPENU'       /* ISPF          */ +
                         'SYS2.RACFPANL'     /*               */ +
                         'MAINT.LIVE.PLIB'        /* IN HOUSE      */ +
                         'SYS1.ICEISPP'           /* DFSORT        */ +
                         'SYS1.DGTPLIB'           /* DFP/DFDSS     */ +
                         'ISF.V1R5M0.SISFPLIB'    /* SDSF          */ +
                         'DELPHI.V221.PLIB'       /* DELPHI        */ +
                         'SYS3.&SHRNAME..IOAIV410.PANEL' /* IOA    */ +
                         'EOY.SEOYPENU')          /* BOOKMANAGER   */
ALLOC FI(ISPMLIB) SHR DA( +
                         'MAINT.LIVE.MLIB'        /* INHOUSE       */ +
                         'ISP.V4R2M0.SISPMENU'    /* INHOUSE       */ +
                         'SYS1.ICEISPM'           /* DFSORT        */ +
                         'SYS1.DGTMLIB'           /* DFP/DFDSS     */ +
                         'DELPHI.V221.MLIB'       /* DELPHI        */ +
                         'EDC.V2R2M0.SEDCMSGP'    /* C/370         */ +
                         'EOY.SEOYMENU'           /* BOOKMANAGER   */ +
                         'SYS3.&SHRNAME..IOAIV410.ISMSG' /* IOA    */ +
                         'ISP.V4R2M0.SISPMENU')   /* ISPF          */
ALLOC FI(ISPTLIB) SHR DA( +
                         '&DSNAME'                /*               */ +
                         'SYS1.ICEISPT'           /* DFSORT        */ +
                         'SYS1.DGTTLIB'           /* DFP/DFDSS     */ +
                         'ISF.V1R5M0.SISFTLIB'    /* SDSF          */ +
                         'DELPHI.V221.CMDTAB'     /* DELPHI        */ +
                         'EOY.SEOYTENU'           /* BOOKMANAGER   */ +
                         'SYS3.&SHRNAME..IOAIV410.TLIB' /* IOA     */ +
                         'ISP.V4R2M0.SISPTENU')   /* ISPF          */
ALLOC FI(ISPSLIB) SHR DA( +
                         'MAINT.LIVE.SLIB'        /* IN-HOUSE      */ +
                         'SYS1.ICEISPS'           /* DFSORT        */ +
                         'SYS1.DGTSLIB'           /* DFDSS         */ +
                         'ISP.V4R2M0.SISPSLIB')   /* ISPF          */
ALLOC FI(ISRCFIL) SHR DA('SYSA.SPF.CFIL')         /* ISPFLMF       */
 /* ALLOC FI(DVDMSL)  SHR DA('SDF150.MSL')           SDF 150 */
 /* ALLOC FI(DVDMSLP) SHR DA('SDF150.MSLP')          SDF 150 */
 /* ALLOC FI(DVDMSLT) SHR DA('SDF150.MSLT')          SDF 150 */
 /* ALLOC FI(DVDTML)  SHR DA('SDF150.TML')           SDF 150 */
 /* ALLOC FI(DVDITF)  SHR DA('SDF150.ITF')           SDF 150 */
FREE FI(SYSPROC)
ALLOC FI(SYSPROC) SHR DA( +
                         'SYS2.RACFCLST'          /* RACF CHECKING */ +
                         'SYS2.CMDPROC'           /* ORACLE + LMF  */ +
                         'ISP.V4R2M0.SISPEXEC'     /* RACF ADMIN  */ +
                         'ISP.V4R2M0.SISPCLIB'     /* RACF ADMIN  */ +
                         'SYS1.ICEISPC'           /* DFSORT        */ +
                         'SYS1.DGTCLIB'           /* DFDSS         */ +
                         'SDF2.V1R4M0.SDGICMD'    /* SDF2          */ +
                         'EDC.V2R2M0.SEDCLIST'    /* C/370         */ +
                         'EOY.SEOYCLIB'           /* BOOKMANAGER   */ +
                         'SYS3.&SHRNAME..IOAIV410.CLIST') /* IOA   */
ALLOC FI(HASPINDX) SHR DA('SYS0.&SYSNAME..HASPINDX') /* SDSF INDEX */
ERROR RETURN
MURPHY
WRITE
WRITE
WRITE NB NB NB NB NB
WRITE VAN JULLE DATASTELLE SE NAME HET VERANDER AGV NUWE MVS WEERGAWE
WRITE
WRITE DIE NUWE NAME SAL WEES :
WRITE
WRITE USERID.<<PRDC>>.JCL.LIB
WRITE
IF &SYSUID = PRG2053 THEN +
DO
  PDF PANEL(ISP@NAV)
  EX 'SYS2.RACFCLST(X)'
END
ELSE +
 PDF &PNL
EX 'SYS2.RACFCLST(X1)'
./ ADD NAME=#ISPPRGA 0101-01016-01016-1428-00080-00080-00000-RACFCLS
PROC 0 PANEL()
SET M1=&STR(               +-----------------------------------------+)
SET M2=&STR(               | IF YOU HAVE ANY PROBLEMS ADMINISTRATING |)
SET M3=&STR(               | USER IDS, PLEASE CALL                   |)
SET M4=&STR(               |                                         |)
SET M5=&STR(               | EDWARD ROSS         (012) - 4210656     |)
SET M6=&STR(               +-----------------------------------------+)
WRITE
WRITE
WRITE
WRITE
WRITE &M1
WRITE &M2
WRITE &M3
WRITE &M4
WRITE &M5
WRITE &M6
CONTROL NOFLUSH NOMSG MAIN
PROFILE MODE WTPMSG MSGID NOPREF
GETSYSN
SET SYSNUM = &LASTCC
IF &SYSNUM = 0 THEN SET SYSNAME=BIGERROR
IF &SYSNUM = 1 THEN SET SYSNAME=PRDA
IF &SYSNUM = 2 THEN SET SYSNAME=PRDB
IF &SYSNUM = 3 THEN SET SYSNAME=PRDC
IF &SYSNUM = 4 THEN SET SYSNAME=PRDD
IF &SYSNUM = 5 THEN SET SYSNAME=PRDE
IF &SYSNUM = 6 THEN SET SYSNAME=TSTF
IF &SYSNUM = 7 THEN SET SYSNAME=TSTG

SET SHRNAME = &SYSNAME
IF &SYSNUM = 4 THEN SET SHRNAME=PRDE
IF &SYSNUM = 7 THEN SET SHRNAME=PRDE

FREE FILE(ISPLLIB,ISPPLIB,ISPMLIB,ISPTLIB,ISPSLIB, +
          ISPPROF,SMPTABL)
FREE FI(SYSPROC)
SET &DSNAME = &SYSUID..&SYSNAME..ISPF.ISPPROF
ALLOC FI(ISPPROF) SHR  DA('&DSNAME.')
IF &LASTCC ^= 0 THEN +
  DO
    RENAME &SYSUID..ISPF.ISPPROF &SYSUID..&SYSNAME..ISPF.ISPPROF
  END
ALLOC FI(ISPPROF) SHR  DA('&DSNAME.')
IF &LASTCC ^= 0 THEN +
  DO
    CONTROL MSG
    ALLOC DA('&DSNAME.') SP(2,1) TRACKS DIR(2)  +
          DSORG(PO) RECFM(F B) LRECL(80) BLKSIZE(6160) FI(ISPPROF)
    IF &LASTCC = 0 THEN +
      WRITE *** ISPF PROFILE DATA SET '&DSNAME.' HAS BEEN CREATED
    ELSE +
     DO
      WRITE  *** UNABLE TO ALLOCATE ISPF PROFILE DATA SET '&DSNAME.'
      EXIT CODE(12)
     END
  END
CONTROL MSG
ERROR EXIT
IF &PANEL = &STR() THEN +
  SET &PNL = PANEL(ISP@PRGA)
ELSE +
  SET &PNL = PANEL(&PANEL)
ALLOC FI(ISPTABL) SHR DA('SYS2.RACFTABL')         /* RACF CHECKING */
ALLOC FI(ISPLLIB) SHR DA('ISP.V4R2M0.SISPLOAD')   /* ISPF          */
ALLOC FI(ISPPLIB) SHR DA('SYS2.RACFPANL'          /* RACF CHECKING */ +
                         'ISF.V1R5M0.SISFPLIB')   /* SDSF          */
ALLOC FI(ISPMLIB) SHR DA('SYS2.RACFMENU'          /* RACF ISPF     */ +
                         'SYS1.HRFMSG')          /* RACF ISPF     */
ALLOC FI(ISPTLIB) SHR DA('SYS2.RACFTABL'          /* RACF TABLES   */ +
                         '&DSNAME'                /* USER PROFILE  */ +
                         'ISF.V1R5M0.SISFTLIB')   /* SDSF          */
ALLOC FI(ISPSLIB) SHR DA('SYS2.RACFSLIB')         /* ISPF          */
ALLOC FI(HASPINDX) SHR DA('SYS0.&SYSNAME..HASPINDX') /* SDSF INDEX */
ALLOC FI(SYSPROC) SHR DA('SYS2.RACFCLST'          /* RACF ADMIN  */  +
                         'ISP.V4R2M0.SISPEXEC'     /* RACF ADMIN  */ +
                         'ISP.V4R2M0.SISPCLIB')    /* RACF ADMIN  */
ERROR RETURN
PDF &PNL NEWAPPL(RACF)
EX 'SYS2.RACFCLST(X)'
./ ADD NAME=#ISPRADA 0101-01016-01016-1428-00080-00080-00000-RACFCLS
PROC 0 PANEL()
SET M1=&STR(               +-----------------------------------------+)
SET M2=&STR(               | IF YOU HAVE ANY PROBLEMS ADMINISTRATING |)
SET M3=&STR(               | USER IDS, PLEASE CALL                   |)
SET M4=&STR(               |                                         |)
SET M5=&STR(               | EDWARD ROSS         (012) - 4210656     |)
SET M6=&STR(               +-----------------------------------------+)
WRITE
WRITE
WRITE
WRITE
WRITE &M1
WRITE &M2
WRITE &M3
WRITE &M4
WRITE &M5
WRITE &M6
CONTROL NOFLUSH NOMSG MAIN
PROFILE MODE WTPMSG MSGID NOPREF
GETSYSN
SET SYSNUM = &LASTCC
IF &SYSNUM = 0 THEN SET SYSNAME=BIGERROR
IF &SYSNUM = 1 THEN SET SYSNAME=PRDA
IF &SYSNUM = 2 THEN SET SYSNAME=PRDB
IF &SYSNUM = 3 THEN SET SYSNAME=PRDC
IF &SYSNUM = 4 THEN SET SYSNAME=PRDD
IF &SYSNUM = 5 THEN SET SYSNAME=PRDE
IF &SYSNUM = 6 THEN SET SYSNAME=TSTF
IF &SYSNUM = 7 THEN SET SYSNAME=TSTG

SET SHRNAME = &SYSNAME
IF &SYSNUM = 4 THEN SET SHRNAME=PRDE
IF &SYSNUM = 7 THEN SET SHRNAME=PRDE

FREE FILE(ISPLLIB,ISPPLIB,ISPMLIB,ISPTLIB,ISPSLIB, +
          ISPPROF,SMPTABL)
FREE FI(SYSPROC)
SET &DSNAME = &SYSUID..&SYSNAME..ISPF.ISPPROF
ALLOC FI(ISPPROF) SHR  DA('&DSNAME.')
IF &LASTCC ^= 0 THEN +
  DO
    RENAME &SYSUID..ISPF.ISPPROF &SYSUID..&SYSNAME..ISPF.ISPPROF
  END
ALLOC FI(ISPPROF) SHR  DA('&DSNAME.')
IF &LASTCC ^= 0 THEN +
  DO
    CONTROL MSG
    ALLOC DA('&DSNAME.') SP(2,1) TRACKS DIR(2)  +
          DSORG(PO) RECFM(F B) LRECL(80) BLKSIZE(6160) FI(ISPPROF)
    IF &LASTCC = 0 THEN +
      WRITE *** ISPF PROFILE DATA SET '&DSNAME.' HAS BEEN CREATED
    ELSE +
     DO
      WRITE  *** UNABLE TO ALLOCATE ISPF PROFILE DATA SET '&DSNAME.'
      EXIT CODE(12)
     END
  END
CONTROL MSG
ERROR EXIT
IF &PANEL = &STR() THEN +
  SET &PNL = PANEL(ISP@ADMN)
ELSE +
  SET &PNL = PANEL(&PANEL)
ALLOC FI(ISPTABL) SHR DA('SYS2.RACFTABL')         /* RACF CHECKING */
ALLOC FI(ISPLLIB) SHR DA('ISP.V4R2M0.SISPLOAD')   /* ISPF          */
ALLOC FI(ISPPLIB) SHR DA('SYS2.RACFPANL'          /* RACF CHECKING */ +
                         'ISF.V1R5M0.SISFPLIB')   /* SDSF          */
ALLOC FI(ISPMLIB) SHR DA('SYS2.RACFMENU'          /* RACF ISPF     */ +
                         'SYS1.HRFMSG')          /* RACF ISPF     */
ALLOC FI(ISPTLIB) SHR DA('SYS2.RACFTABL'          /* RACF TABLES   */ +
                         '&DSNAME'                /* USER PROFILE  */ +
                         'ISF.V1R5M0.SISFTLIB')   /* SDSF          */
ALLOC FI(ISPSLIB) SHR DA('SYS2.RACFSLIB')         /* ISPF          */
ALLOC FI(HASPINDX) SHR DA('SYS0.&SYSNAME..HASPINDX') /* SDSF INDEX */
ALLOC FI(SYSPROC) SHR DA('SYS2.RACFCLST'          /* RACF ADMIN  */  +
                         'ISP.V4R2M0.SISPEXEC'     /* RACF ADMIN  */ +
                         'ISP.V4R2M0.SISPCLIB')    /* RACF ADMIN  */
ERROR RETURN
PDF &PNL NEWAPPL(RACF)
EX 'SYS2.RACFCLST(X)'
./ ADD NAME=#ISPTHE  0101-01016-01016-1428-00095-00095-00000-RACFCLS
PROC 0 PANEL()   /* ISPTHE */
/*********************************************************************/
/* VHK @JST ADMIN                                                    */
/*********************************************************************/
SET M1=&STR(               +-----------------------------------------+)
SET M2=&STR(               | IF YOU HAVE ANY PROBLEMS ADMINISTRATING |)
SET M3=&STR(               | USER IDS, PLEASE CALL                   |)
SET M4=&STR(               |                                         |)
SET M5=&STR(               | EDWARD ROSS         (012) - 4210656     |)
SET M6=&STR(               +-----------------------------------------+)
WRITE
WRITE
WRITE
WRITE
WRITE &M1
WRITE &M2
WRITE &M3
WRITE &M4
WRITE &M5
WRITE &M6
CONTROL NOFLUSH NOMSG MAIN
PROFILE MODE WTPMSG MSGID NOPREF
GETSYSN
SET SYSNUM = &LASTCC
IF &SYSNUM = 0 THEN SET SYSNAME=BIGERROR
IF &SYSNUM = 1 THEN SET SYSNAME=PRDA
IF &SYSNUM = 2 THEN SET SYSNAME=PRDB
IF &SYSNUM = 3 THEN SET SYSNAME=PRDC
IF &SYSNUM = 4 THEN SET SYSNAME=PRDD
IF &SYSNUM = 5 THEN SET SYSNAME=PRDE
IF &SYSNUM = 6 THEN SET SYSNAME=TSTF
IF &SYSNUM = 7 THEN SET SYSNAME=TSTG

SET SHRNAME = &SYSNAME
IF &SYSNUM = 4 THEN SET SHRNAME=PRDE
IF &SYSNUM = 7 THEN SET SHRNAME=PRDE

FREE FILE(ISPLLIB,ISPPLIB,ISPMLIB,ISPTLIB,ISPSLIB, +
          ISPPROF,SMPTABL)
SET &DSNAME = &SYSUID..&SYSNAME..ISPF.ISPPROF
ALLOC FI(ISPPROF) SHR  DA('&DSNAME.')
IF &LASTCC ^= 0 THEN +
  DO
    RENAME &SYSUID..ISPF.ISPPROF &SYSUID..&SYSNAME..ISPF.ISPPROF
  END
ALLOC FI(ISPPROF) SHR  DA('&DSNAME.')
IF &LASTCC ^= 0 THEN +
  DO
    CONTROL MSG
    ALLOC DA('&DSNAME.') SP(2,1) TRACKS DIR(2)  +
          DSORG(PO) RECFM(F B) LRECL(80) BLKSIZE(6160) FI(ISPPROF)
    IF &LASTCC = 0 THEN +
      WRITE *** ISPF PROFILE DATA SET '&DSNAME.' HAS BEEN CREATED
    ELSE +
     DO
      WRITE  *** UNABLE TO ALLOCATE ISPF PROFILE DATA SET '&DSNAME.'
      EXIT CODE(12)
     END
  END
CONTROL MSG
ERROR EXIT
IF &PANEL = &STR() THEN +
  SET &PNL = PANEL(ISP@THE)
ELSE +
  SET &PNL = PANEL(&PANEL)
ALLOC FI(ISPTABL) SHR DA('SYS2.RACFTABL')    /* RACF CHECKING */
ALLOC FI(ISPLLIB) SHR DA( +
                         'ISP.V4R2M0.SISPLOAD')   /* ISPF/PDF      */
ALLOC FI(ISPPLIB) SHR DA( +
                         'SYS2.RACFPANL'     /* RACF ADMIN    */ +
                         'SYS1.DGTPLIB'           /* DFP/DFDSS     */ +
                         'ISF.V1R5M0.SISFPLIB'    /* SDSF          */ +
                         'ISP.V4R2M0.SISPPENU')    /* ISPF          */
ALLOC FI(ISPMLIB) SHR DA( +
                         'SYS2.RACFMENU'     /* RACF ISPF     */ +
                         'SYS1.HRFMSG'      /* RACF ISPF     */ +
                         'SYS1.DGTMLIB'           /* DFP/DFDSS     */ +
                         'ISP.V4R2M0.SISPMENU')   /* ISPF/PDF      */
ALLOC FI(ISPTLIB) SHR DA( +
                         'SYS2.RACFTABL'     /* RACF TABLES   */ +
                         '&DSNAME'                /* USER PROFILE  */ +
                         'SYS1.DGTTLIB'           /* DFP/DFDSS     */ +
                         'ISF.V1R5M0.SISFTLIB')   /* SDSF          */
ALLOC FI(ISPSLIB) SHR DA( +
                         'SYS2.RACFSLIB'     /* ISPF          */ +
                         'ISP.V4R2M0.SISPSENU'    /* ISPF/PDF      */ +
                         'ISP.V4R2M0.SISPSLIB')   /* ISPF          */
ALLOC FI(HASPINDX) SHR DA('SYS0.&SYSNAME..HASPINDX') /* SDSF INDEX */
FREE FI(SYSPROC)
ALLOC FI(SYSPROC) SHR DA('SYS2.RACFCLST'     /* RACF ADMIN  */  +
                         'ISP.V4R2M0.SISPEXEC'     /* RACF ADMIN  */ +
                         'ISP.V4R2M0.SISPCLIB')    /* RACF ADMIN  */
ERROR RETURN
PDF &PNL NEWAPPL(RACF)
EX 'SYS2.RACFCLST(X)'
./ ADD NAME=BLSCDDIR 0101-01016-01016-1428-00108-00108-00000-RACFCLS
        /*** Start of specifications for BLSCDDIR ********************/
        /*                                                           */
        /* $MAC(BLSCDDIR) COMP(SC132) PROD(HBB4410): Dump directory  */
        /*                allocation CLIST for IPCS                  */
        /*                                                           */
        /* PROPRIETARY STATEMENT:                                    */
        /*                                                           */
        /* LICENSED MATERIALS - PROPERTY OF IBM                      */
        /* THIS MACRO IS "RESTRICTED MATERIALS OF IBM"               */
        /* 5685-001 (C) COPYRIGHT IBM CORP. 1988,1990                */
        /* SEE COPYRIGHT INSTRUCTIONS                                */
        /*                                                           */
        /* STATUS = HBB4410                                          */
        /*                                                           */
        /* EXTERNAL CLASSIFICATION: NONE                             */
        /* END OF EXTERNAL CLASSIFICATION:                           */
        /*                                                           */
        /* --------------------------------------------------------- */
        /*                                                           */
        /* CHANGE ACTIVITY =                                         */
        /*                                                           */
        /*   Products = none                                         */
        /*                                                           */
        /* --------------------------------------------------------- */
        /*                                                           */
        /*   Design changes =                                        */
        /* $D0=DC40302,HBB3310,87210,PDE1: Simplify dynamic creation */
        /*     of an IPCS dump directory.                            */
        /* $D1=DC40302,HBB3310,87210,PDE1: Same as D0, copied code   */
        /*                                                           */
        /* --------------------------------------------------------- */
        /*                                                           */
        /*   PTMs =                                                  */
        /*    =PEO3797,HBB4410,900404,PDAX: Qualify "I" and "D" as a */
        /*     separate qualifier.                                   */
        /*                                                           */
        /* --------------------------------------------------------- */
        /*                                                           */
        /*   Maintenance =                                           */
        /* $01=OY62871,HBB3310,93209,PDE1: Do not specify control    */
        /*     interval size to the VSAM DEFINE command.             */
        /* $02=OW13537,HBB4430,95150,PDE1: Unfortunately, VSAM       */
        /*     DEFINE does not choose well when given free rein for  */
        /*     IPCS dump directory index CISIZE                      */
        /* $03=OW13537,HBB4430,95150,PDE1: Support strategic DFSMS   */
        /*     classes:  DATACLAS, MGMTCLAS and STORCLAS             */
        /*                                                           */
        /*** End of specifications for BLSCDDIR **********************/
        PROC 0 DATACLAS() DSNAME() FILE() MGMTCLAS() NDXCISZ(4096) +
            RECORDS() STORCLAS() VOLUME() /*                     @02C*/
        CONTROL LIST ASIS           /*                           @D1P*/
        IF &LENGTH(&DSNAME)=0 THEN +
          IF &LENGTH(&SYSPREF)=0 THEN SET DSNAME=&SYSUID..DDIR
          ELSE SET DSNAME=&SYSPREF..DDIR
        IF &LENGTH(&FILE)=0 THEN SET FILE=IPCSDDIR
        WRITE Dump directory name '&DSNAME.' will be used
        SET DSNSTATUS=&SYSDSN('&DSNAME.')
        IF &DSNSTATUS=&STR(DATASET NOT FOUND) THEN DO /* No directory*/
          /*=========================================================*/
          /* Define a new dump directory                             */
          /*=========================================================*/
          IF &LENGTH(&RECORDS)=0 THEN SET RECORDS=5000
          WRITE Dump directory space will be allocated in units of +
                &RECORDS records
          IF &LENGTH(&DATACLAS)>0 THEN /* Data class specified   @03A*/+
            SET CLASS=DATACLASS(&DATACLAS) /*                    @03A*/
          IF &LENGTH(&MGMTCLAS)>0 THEN /* Management class       @03A*/+
            SET CLASS=&CLASS MANAGEMENTCLASS(&MGMTCLAS) /*       @03A*/
          IF &LENGTH(&STORCLAS)>0 THEN /* Storage class          @03A*/+
            SET CLASS=&CLASS STORAGECLASS(&STORCLAS) /*          @03A*/
          IF &LENGTH(&CLASS)=0 AND &LENGTH(&VOLUME)=0 THEN /*    @03C*/+
            SET VOLUME=MVSF05
          IF &LENGTH(&VOLUME)>0 THEN DO /*                       @03A*/
            SET CLASS=&CLASS VOLUME(&VOLUME) /*                  @03A*/
            WRITE Dump directory space will be allocated on volume +
                  &VOLUME
            END                     /*                           @03A*/
          DEFINE CLUSTER(NAME('&DSNAME.') &CLASS INDEXED +
              REUSE SHAREOPTIONS(1,3)) +
              INDEX(NAME('&DSNAME..I') RECORDS(10,10) +
              CONTROLINTERVALSIZE(&NDXCISZ)) +
              DATA(NAME('&DSNAME..D') RECORDS(&RECORDS,&RECORDS) +
              KEYS(128,0) RECORDSIZE(384 3072)) /*               @02C*/
          IF &LASTCC>=12 THEN DO    /* Dump directory not defined    */
            WRITE DEFINE failed for dump directory '&DSNAME.'
            EXIT                    /*                           @D1P*/
            END                     /* Dump directory not defined    */
          /*=========================================================*/
          /* Initialize the dump directory just defined              */
          /*=========================================================*/
          IPCSDDIR '&DSNAME'
          IF &LASTCC>=12 THEN DO    /* Dump directory not usable     */
            WRITE Initialization failed for dump directory '&DSNAME.'
            EXIT                    /*                           @D1P*/
            END                     /* Dump directory not usable     */
          SET DSNSTATUS=OK
          END                       /* No directory                  */
        IF &DSNSTATUS^=OK THEN DO   /* Do not attempt allocation     */
          WRITE Dump directory '&DSNAME.' is not usable - &DSNSTATUS
          EXIT CODE(16)
          END                       /* Do not attempt allocation     */
        /*===========================================================*/
        /* Allocate the dump directory for use by IPCS               */
        /*===========================================================*/
        ALLOCATE FILE(&FILE) REUSE DSNAME('&DSNAME.') SHR
        IF &LASTCC>=12 THEN WRITE Unable to allocate dump directory +
              '&DSNAME.'
        ELSE WRITE Dump directory '&DSNAME.' allocated to FILE(&FILE)
./ ADD NAME=BM       0101-01016-01016-1428-00005-00005-00000-RACFCLS
ISREDIT MACRO
   ISREDIT C X'B4' X'40' ALL
   ISREDIT C X'CA' X'60' ALL
   ISREDIT C P'.' ' ' ALL
EXIT CODE(0)
./ ADD NAME=COMALST  0101-01016-01016-1428-00027-00027-00000-RACFCLS
PROC 0 PRINTER() OUTCLASS()
WRITE
WRITE
WRITE
WRITE
WRITE LIST ALL RACF USERS IN YOUR GROUP
SET LYN = &STR(---------------------------------)
WRITE &LYN
WRITE
WRITE JOBNAME            : &SYSUID.N
WRITE OUTPUT DIRECTED TO : &PRINTER
WRITE PRINTCLASS         : &OUTCLASS
WRITE
SET SLSPRNT = &STR(/*ROUTE PRINT )
SUBMIT * END($$)
//&SYSUID.L JOB (1,REOPS,OPS,01),'USERID LIST',MSGCLASS=Z,
//             NOTIFY=&SYSUID,CLASS=B
//*************************************
//*  PRINTS A LISTING OF ALL USERIDS  *
//*************************************
&SLSPRNT.&PRINTER
//LISTING  EXEC PGM=IKJEFT01,DYNAMNBR=20,PARM=LSTALL
//SYSEXEC  DD  DSN=SYS2.RACFCLST,DISP=SHR
//SYSTSPRT DD  SYSOUT=&OUTCLASS
//SYSTSIN  DD  DUMMY
$$
XXX:WRITE
./ ADD NAME=COMPRESS 0101-01016-01016-1428-00014-00014-00000-RACFCLS
//XXXXXXXC JOB (1,YYYYY,YYY,01),'COMPRESS',
//             CLASS=A,MSGCLASS=V,NOTIFY=XXXXXXX
//****************************************
//** REPLACE "XXXXXXX" WITH YOUR USERID **
//** REPLACE "YYYYY" WITH YOUR ACCT     **
//** AND SUBMIT JOB TO COMPRESS YOUR    **
//** OWN DATASET                        **
//****************************************
//STEP1    EXEC PGM=IEBCOPY
//IN       DD DSN=XXXXXXX.JCL.LIB,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSUT3   DD SPACE=(CYL,(2,1)),UNIT=SYSDA
//SYSUT4   DD SPACE=(CYL,(2,1)),UNIT=SYSDA
  COPY INDD=IN,OUTDD=IN
./ ADD NAME=COMRES   0101-01016-01016-1428-00229-00229-00000-RACFCLS
/* REXX */
/* TO RACF USERID FOR USE BY COMPLETE  */
/* TO RACF USERID FOR USE BY COMPLETE  */
/* TO RACF USERID FOR USE BY COMPLETE  */

 ARG INPUT
 PARSE VALUE INPUT WITH ID ':' NAME ':' PSW ':' TERM
 PARSE VALUE ID WITH ID2 3 DUMMY
 PARSE VALUE ID WITH ID3 4 DUMMY
 PARSE VALUE ID WITH ID4 5 DUMMY
 PARSE VALUE ID WITH DUMMY 3 IDNR1
 PARSE VALUE ID WITH DUMMY 4 IDNR2
 PARSE VALUE ID WITH DUMMY 5 IDNR3
 "ALLOC DA (MAINT.RACF.USER) F(OUSR) MOD"
 SAY ""
 SAY ""
 SAY ""
 SAY ""
 SAY ""
 SAY ""
 SAY ""

 UID = SYSVAR(SYSUID)
 PARSE VALUE UID WITH AD2 3 DUMMY
 IDNR = "XXX"
 IF DATATYPE(IDNR1,'N') = 1 THEN IDNR = IDNR1
 ELSE
  IF DATATYPE(IDNR2,'N') = 1 THEN IDNR = IDNR2
  ELSE
   IF DATATYPE(IDNR3,'N') = 1 THEN IDNR = IDNR3

 IF DATATYPE(IDNR,'N') = 0 THEN CALL MSG2

 IF NAME <> '' THEN NM = "'"NAME"'"

 IF TERM = '' THEN CALL TERM_ERR


 /**********/
 /* GROUP  */
 /**********/
 PR. =''
 PR.DBA = "SYS2"
 PR.SYS = "SYS2"
 PR.PEN = "PERSAL"
 PR.PE1 = "PERSAL1"
 PR.PE2 = "PERSAL2"
 PR.PE3 = "PERSAL3"
 PR.PE4 = "PERSAL4"
 PR.PE5 = "PERSAL5"
 PR.PE6 = "PERSAL6"
 PR.PE7 = "PERSAL7"
 PR.PE8 = "PERSAL8"
 PR.PE9 = "PERSAL9"
 PR.NET = "PERSAL"
 PR.VAS = "VAS"
 PR.VA1 = "VAS1"
 PR.VA2 = "VAS2"
 PR.ASS = "ASSUPOL"
 PR.SR0 = "SPESREK"
 PR.PF0 = "POLFIN"
 PR.PF1 = "POLFIN"
 PR.PF2 = "POLFIN"
 PR.PF3 = "POLFIN"
 PR.POL = "POLFIN"
 PR.PRG = "PROGRAMR"
 PR.PER = "PERSAL1"
 PR.RAD = "RADIOB"

 /*************************************************************/
 /* MAXIMUM USERS FOR EVERY ADMINISTRATOR                     */
 /* THE FOURTH CHARACTER IS THE TEST CAHARACTER FOR EVERY ADM */
 /*************************************************************/
 MAX. = 0
 MAX.DBA = 10
 MAX.PEN = 9999
 MAX.PE1 = 9999
 MAX.PE2 = 9999
 MAX.PE3 = 9999
 MAX.PE4 = 9999
 MAX.PE5 = 9999
 MAX.PE6 = 9999
 MAX.PE7 = 9999
 MAX.PE8 = 9999
 MAX.PE9 = 9999
 MAX.NET = 9999
 MAX.VAS = 9999
 MAX.VA1 = 9999
 MAX.VA2 = 9999
 MAX.ASS = 9999
 MAX.SR0 = 9999
 MAX.PF0 = 9999
 MAX.PF1 = 9999
 MAX.PF2 = 9999
 MAX.PF3 = 9999
 MAX.POL = 9999
 MAX.PRG = 100
 MAX.PER = 200
 MAX.SYS = 5
 MAX.RAD = 20


 FLAG = Y
 IF IDNR <= 0 OR IDNR >= 9999 THEN CALL MSG1
 IF (AD2 <> "SY") | (AD2 <> "DB") | (AD2 <> "PR") THEN FLAG = N
 IF (AD2 = "PE") & ((ID2 = "NE") | (ID2 = "PE")) THEN FLAG = N
 ELSE
  IF (AD2 = "PO") & ((ID2 = "PO") | (ID2 = "PF") | (ID2= "SR")) THEN
   FLAG = N
  ELSE
   IF (AD2 <> ID2) THEN
    IF FLAG = Y THEN CALL MSG2

 SELECT
  WHEN ID3 = "DBA" THEN NOP
  WHEN ID3 = "PEN" THEN NOP
  WHEN ID3 = "PE1" THEN NOP
  WHEN ID3 = "PE2" THEN NOP
  WHEN ID3 = "PE3" THEN NOP
  WHEN ID3 = "PE4" THEN NOP
  WHEN ID3 = "PE5" THEN NOP
  WHEN ID3 = "PE6" THEN NOP
  WHEN ID3 = "PE7" THEN NOP
  WHEN ID3 = "PE8" THEN NOP
  WHEN ID3 = "PE9" THEN NOP
  WHEN ID3 = "NET" THEN NOP
  WHEN ID3 = "VAS" THEN NOP
  WHEN ID3 = "VA1" THEN NOP
  WHEN ID3 = "VA2" THEN NOP
  WHEN ID3 = "ASS" THEN NOP
  WHEN ID3 = "SR0" THEN NOP
  WHEN ID3 = "PF0" THEN NOP
  WHEN ID3 = "PF1" THEN NOP
  WHEN ID3 = "PF2" THEN NOP
  WHEN ID3 = "PF3" THEN NOP
  WHEN ID3 = "POL" THEN NOP
  WHEN ID3 = "PRG" THEN NOP
  WHEN ID3 = "PER" THEN NOP
  WHEN ID3 = "SYS" THEN NOP
  WHEN ID3 = "RAD" THEN NOP
 OTHERWISE
  CALL MSG1
 END

 IF IDNR > MAX.ID3 THEN CALL MSG3

 IF NAME <> '' THEN
  ALT = '"ALTUSER ('ID') NAME('NM') PASSWORD('PSW') RESUME"'
 ELSE
  ALT = '"ALTUSER ('ID') PASSWORD('PSW') RESUME"'

 IF IDNR <= MAX.ID3 THEN
 DO
  MS = MSG('OFF')
  INTERPRET ALT
  IF RC = 0 THEN
  DO
   SAY ""
   SAY "                       RETURN CODE :" RC
   SAY "                       USERID      :" ID
   IF NAME <> '' THEN
   SAY "                       NAME        :" NAME
   SAY "                       PASSWORD    :" PSW
   SAY "                       TERMINAL    :" TERM
   SAY "                       SUCCESSFULLY CHANGED"
  END
  ELSE
  DO
   SAY ""
   SAY "                       RETURN CODE :" RC
   SAY ""
   SAY "                       "ID "NOT CHANGED DUE TO CONDITION CODE"
   SAY "                       IT IS POSSIBLE THAT "ID" DOES NOT EXIST"
  END
 EXIT
 CALL WRITE_TER

  /***********/
  /* MESAGES */
  /***********/

 WRITE_TER:
 S1 = ID
 S2 = TERM
 OUT.="   " S1 " " S2
 "EXECIO 1 DISKW OUSR (STEM OUT."
 "FREE FI(OUSR)"

  TERM_ERR: SAY ""
  SAY "                       +----------------+ "
  SAY "                       ø SPECIFY THE    ø "
  SAY "                       ø TERMINAL ID    ø "
  SAY "                       ø (T00?????) ... ø "
  SAY "                       +----------------+ "
  SAY ""
  EXIT

  MSG1: SAY ""
  SAY "                       +----------------+ "
  SAY "                       ø INVALID USERID ø "
  SAY "                       ø                ø "
  SAY "                       ø RESPECIFY .... ø "
  SAY "                       +----------------+ "
  SAY ""
  EXIT

  MSG2: SAY ""
  SAY "              +------------------------------------------+"
  SAY "              ø YOU ARE NOT AUTHORIZED TO CHANGE THIS ID ø"
  SAY "              ø                                          ø"
  IF AD2 = "PO" THEN
   SAY "              ø ONLY PF**** OR POL*** ALLOWED            ø"
  ELSE
  IF AD2 = "PE" THEN
   SAY "              ø ONLY PE**** OR NET*** ALLOWED            ø"
  ELSE
   SAY "              ø ONLY "AD2"**** ALLOWED                      ø"
  SAY "              +------------------------------------------+"
  SAY ""
  EXIT

  MSG3: SAY ""
  SAY "               +-----------------------------------------+ "
  SAY "               ø INVALID USERID - NUMERIC VALUE TO LARGE ø"
  SAY "               ø                                         ø"
  SAY "               ø   PLEASE CALL YOUR SYSTEM PROGRAMMER    ø"
  SAY "               +-----------------------------------------+ "
  SAY ""
  EXIT
./ ADD NAME=COMUADD  0101-01016-01016-1428-00234-00234-00000-RACFCLS
/* REXX */
/* TO RACF USERID FOR USE BY COMPLETE  */
/* TO RACF USERID FOR USE BY COMPLETE  */
/* TO RACF USERID FOR USE BY COMPLETE  */

 ARG INPUT
 PARSE VALUE INPUT WITH ID ':' NAME ':' PSW
 PARSE VALUE ID WITH ID2 3 DUMMY
 PARSE VALUE ID WITH ID3 4 DUMMY
 PARSE VALUE ID WITH ID4 5 DUMMY
 PARSE VALUE ID WITH DUMMY 3 IDNR1
 PARSE VALUE ID WITH DUMMY 4 IDNR2
 PARSE VALUE ID WITH DUMMY 5 IDNR3
 SAY ""
 SAY ""
 SAY ""
 SAY ""
 SAY ""
 SAY ""
 SAY ""

 UID = SYSVAR(SYSUID)
 PARSE VALUE UID WITH AD2 3 DUMMY
 IDNR = "XXX"
 IF DATATYPE(IDNR1,'N') = 1 THEN IDNR = IDNR1
 ELSE
  IF DATATYPE(IDNR2,'N') = 1 THEN IDNR = IDNR2
  ELSE
   IF DATATYPE(IDNR3,'N') = 1 THEN IDNR = IDNR3

 IF DATATYPE(IDNR,'N') = 0 THEN CALL MSG2

 NM = "'"NAME"'"


 /**********/
 /* GROUP  */
 /**********/
 PR. =''
 PR.DBA = "SYS2"
 PR.PEN = "PERSAL"
 PR.PE1 = "PERSAL1"
 PR.PE2 = "PERSAL2"
 PR.PE3 = "PERSAL3"
 PR.PE4 = "PERSAL4"
 PR.PE5 = "PERSAL5"
 PR.PE6 = "PERSAL6"
 PR.PE7 = "PERSAL7"
 PR.PE8 = "PERSAL8"
 PR.PE9 = "PERSAL9"
 PR.NET = "PERSAL"
 PR.VAS = "VAS"
 PR.VA1 = "VAS1"
 PR.VA2 = "VAS2"
 PR.ASS = "ASSUPOL"
 PR.SR0 = "SPESREK"
 PR.PF0 = "POLFIN"
 PR.PF1 = "POLFIN"
 PR.PF2 = "POLFIN"
 PR.PF3 = "POLFIN"
 PR.POL = "POLFIN"
 PR.PRG = "PROGRAMR"
 PR.PER = "PERSAL1"
 PR.RAD = "RADIOB"


 /**********/
 /* OWNER  */
 /**********/
 OW. =''
 OW.DBA = "SYS2"
 OW.PEN = "PERSAL"
 OW.PE1 = "PERSAL"
 OW.PE2 = "PERSAL"
 OW.PE3 = "PERSAL"
 OW.PE4 = "PERSAL"
 OW.PE5 = "PERSAL"
 OW.PE6 = "PERSAL"
 OW.PE7 = "PERSAL"
 OW.PE8 = "PERSAL"
 OW.PE9 = "PERSAL"
 OW.NET = "PERSAL"
 OW.VAS = "VAS"
 OW.VA1 = "VAS"
 OW.VA2 = "VAS"
 OW.ASS = "ASSUPOL"
 OW.SR0 = "SPESREK"
 OW.PF0 = "POLFIN"
 OW.PF1 = "POLFIN"
 OW.PF2 = "POLFIN"
 OW.PF3 = "POLFIN"
 OW.POL = "POLFIN"
 OW.PRG = "PROGRAMR"
 OW.PER = "PERSAL"
 OW.RAD = "RADIOB"

 /*************************************************************/
 /* MAXIMUM USERS FOR EVERY ADMINISTRATOR                     */
 /* THE FOURTH CHARACTER IS THE TEST CAHARACTER FOR EVERY ADM */
 /*************************************************************/
 MAX. = 0
 MAX.DBA = 10
 MAX.PEN = 9999
 MAX.PE1 = 9999
 MAX.PE2 = 9999
 MAX.PE3 = 9999
 MAX.PE4 = 9999
 MAX.PE5 = 9999
 MAX.PE6 = 9999
 MAX.PE7 = 9999
 MAX.PE8 = 9999
 MAX.PE9 = 9999
 MAX.NET = 9999
 MAX.VAS = 9999
 MAX.VA1 = 9999
 MAX.VA2 = 9999
 MAX.ASS = 9999
 MAX.SR0 = 9999
 MAX.PF0 = 9999
 MAX.PF1 = 9999
 MAX.PF2 = 9999
 MAX.PF3 = 9999
 MAX.POL = 9999
 MAX.PRG = 100
 MAX.PER = 500
 MAX.RAD = 20

 FLAG = Y
 IF IDNR <= 0 OR IDNR >= 9999 THEN CALL MSG1
 IF (AD2 <> "SY") | (AD2 <> "DB") | (AD2 <> "PR") THEN FLAG = N
 IF (AD2 = "PE") & ((ID2 = "NE") | (ID2 = "PE")) THEN FLAG = N
 ELSE
  IF (AD2 = "PO") & ((ID2 = "PO") | (ID2 = "PF") | (ID2= "SR")) THEN
   FLAG = N
  ELSE
   IF (AD2 <> ID2) THEN
    IF FLAG = Y THEN CALL MSG2

 SELECT
  WHEN ID3 = "DBA" THEN NOP
  WHEN ID3 = "PEN" THEN NOP
  WHEN ID3 = "PE1" THEN NOP
  WHEN ID3 = "PE2" THEN NOP
  WHEN ID3 = "PE3" THEN NOP
  WHEN ID3 = "PE4" THEN NOP
  WHEN ID3 = "PE5" THEN NOP
  WHEN ID3 = "PE6" THEN NOP
  WHEN ID3 = "PE7" THEN NOP
  WHEN ID3 = "PE8" THEN NOP
  WHEN ID3 = "PE9" THEN NOP
  WHEN ID3 = "NET" THEN NOP
  WHEN ID3 = "ASS" THEN NOP
  WHEN ID3 = "SR0" THEN NOP
  WHEN ID3 = "PF0" THEN NOP
  WHEN ID3 = "PF1" THEN NOP
  WHEN ID3 = "PF2" THEN NOP
  WHEN ID3 = "PF3" THEN NOP
  WHEN ID3 = "POL" THEN NOP
  WHEN ID3 = "PRG" THEN NOP
  WHEN ID3 = "VAS" THEN NOP
  WHEN ID3 = "VA1" THEN NOP
  WHEN ID3 = "VA2" THEN NOP
  WHEN ID3 = "PER" THEN NOP
  WHEN ID3 = "RAD" THEN NOP
 OTHERWISE
  CALL MSG1
 END

 IF IDNR > MAX.ID3 THEN CALL MSG3

 ADD = '"ADDUSER ('ID') NAME('NM') DFLTGRP('PR.ID3')',
        'PASSWORD('PSW')',
        'OWNER('OW.ID3')"'

 IF IDNR <= MAX.ID3 THEN
 DO
  MS = MSG('OFF')
  INTERPRET ADD
  IF RC = 0 THEN
  DO
   SAY ""
   SAY "                       RETURN CODE :" RC
   SAY "                       USERID      :" ID
   SAY "                       NAME        :" NAME
   SAY "                       PASSWORD    :" PSW
   SAY ""
   SAY "                       SUCCESSFULLY ADDED"
  END
  ELSE
  DO
   SAY ""
   SAY "                       RETURN CODE :" RC
   SAY ""
   SAY "                       "ID "NOT ADDED DUE TO CONDITION CODE"
   SAY "                       IT IS POSSIBLE THAT "ID" ALREADY EXIST"
  END
 EXIT

  /***********/
  /* MESAGES */
  /***********/

  MSG1: SAY ""
  SAY "                         +----------------+ "
  SAY "                         ø INVALID USERID ø "
  SAY "                         ø                ø "
  SAY "                         ø RESPECIFY .... ø "
  SAY "                         +----------------+ "
  SAY ""
  EXIT

  MSG2: SAY ""
  SAY "               +---------------------------------------+"
  SAY "               ø YOU ARE NOT AUTHORIZED TO ADD THIS ID ø"
  SAY "               ø                                       ø"
  IF AD2 = "PO" THEN
   SAY "               ø ONLY PF**** OR POL*** ALLOWED         ø"
  ELSE
  IF AD2 = "PE" THEN
   SAY "               ø ONLY PE**** OR NET*** ALLOWED         ø"
  ELSE
   SAY "               ø ONLY "AD2"**** ALLOWED                   ø"
  SAY "               +---------------------------------------+"
  SAY ""
  EXIT

  MSG3: SAY ""
  SAY "               +-----------------------------------------+ "
  SAY "               ø INVALID USERID - NUMERIC VALUE TO LARGE ø"
  SAY "               ø                                         ø"
  SAY "               ø   PLEASE CALL YOUR SYSTEM PROGRAMMER    ø"
  SAY "               +-----------------------------------------+ "
  SAY ""
  EXIT
./ ADD NAME=COMUDEL  0101-01016-01016-1428-00201-00201-00000-RACFCLS
/* REXX */
/* TO RACF USERID FOR USE BY COMPLETE  */
/* TO RACF USERID FOR USE BY COMPLETE  */
/* TO RACF USERID FOR USE BY COMPLETE  */

 ARG INPUT
 PARSE VALUE INPUT WITH ID ':' NAME ':' PSW
 PARSE VALUE ID WITH ID2 3 DUMMY
 PARSE VALUE ID WITH ID3 4 DUMMY
 PARSE VALUE ID WITH ID4 5 DUMMY
 PARSE VALUE ID WITH DUMMY 3 IDNR1
 PARSE VALUE ID WITH DUMMY 4 IDNR2
 PARSE VALUE ID WITH DUMMY 5 IDNR3
 SAY ""
 SAY ""
 SAY ""
 SAY ""
 SAY ""
 SAY ""
 SAY ""

 UID = SYSVAR(SYSUID)
 PARSE VALUE UID WITH AD2 3 DUMMY
 IDNR = "XXX"
 IF DATATYPE(IDNR1,'N') = 1 THEN IDNR = IDNR1
 ELSE
  IF DATATYPE(IDNR2,'N') = 1 THEN IDNR = IDNR2
  ELSE
   IF DATATYPE(IDNR3,'N') = 1 THEN IDNR = IDNR3

 IF DATATYPE(IDNR,'N') = 0 THEN CALL MSG2

 IF NAME <> '' THEN NM = "'"NAME"'"


 /**********/
 /* GROUP  */
 /**********/
 PR. =''
 PR.DBA = "SYS2"
 PR.PEN = "PERSAL"
 PR.PE1 = "PERSAL1"
 PR.PE2 = "PERSAL2"
 PR.PE3 = "PERSAL3"
 PR.PE4 = "PERSAL4"
 PR.PE5 = "PERSAL5"
 PR.PE6 = "PERSAL6"
 PR.PE7 = "PERSAL7"
 PR.PE8 = "PERSAL8"
 PR.PE9 = "PERSAL9"
 PR.NET = "PERSAL"
 PR.VAS = "VAS"
 PR.VA1 = "VAS1"
 PR.VA2 = "VAS2"
 PR.ASS = "ASSUPOL"
 PR.SR0 = "SPESREK"
 PR.PF0 = "POLFIN"
 PR.PF1 = "POLFIN"
 PR.PF2 = "POLFIN"
 PR.PF3 = "POLFIN"
 PR.POL = "POLFIN"
 PR.PRG = "PROGRAMR"
 PR.PER = "PERSAL1"
 PR.RAD = "RADIOB"

 /*************************************************************/
 /* MAXIMUM USERS FOR EVERY ADMINISTRATOR                     */
 /* THE FOURTH CHARACTER IS THE TEST CAHARACTER FOR EVERY ADM */
 /*************************************************************/
 MAX. = 0
 MAX.DBA = 10
 MAX.PEN = 9999
 MAX.PE1 = 9999
 MAX.PE2 = 9999
 MAX.PE3 = 9999
 MAX.PE4 = 9999
 MAX.PE5 = 9999
 MAX.PE6 = 9999
 MAX.PE7 = 9999
 MAX.PE8 = 9999
 MAX.PE9 = 9999
 MAX.NET = 9999
 MAX.VAS = 9999
 MAX.VA1 = 9999
 MAX.VA2 = 9999
 MAX.ASS = 9999
 MAX.SR0 = 9999
 MAX.PF0 = 9999
 MAX.PF1 = 9999
 MAX.PF2 = 9999
 MAX.PF3 = 9999
 MAX.POL = 9999
 MAX.PRG = 50
 MAX.PER = 200
 MAX.RAD = 20



 FLAG = Y
 IF IDNR <= 0 OR IDNR >= 9999 THEN CALL MSG1
 IF (AD2 <> "SY") | (AD2 <> "DB") | (AD2 <> "PR") THEN FLAG = N
 IF (AD2 = "PE") & ((ID2 = "NE") | (ID2 = "PE")) THEN FLAG = N
 ELSE
  IF (AD2 = "PO") & ((ID2 = "PO") | (ID2 = "PF") | (ID2= "SR")) THEN
   FLAG = N
  ELSE
   IF (AD2 <> ID2) THEN
    IF FLAG = Y THEN CALL MSG2

 SELECT
  WHEN ID3 = "DBA" THEN NOP
  WHEN ID3 = "PEN" THEN NOP
  WHEN ID3 = "PE1" THEN NOP
  WHEN ID3 = "PE2" THEN NOP
  WHEN ID3 = "PE3" THEN NOP
  WHEN ID3 = "PE4" THEN NOP
  WHEN ID3 = "PE5" THEN NOP
  WHEN ID3 = "PE6" THEN NOP
  WHEN ID3 = "PE7" THEN NOP
  WHEN ID3 = "PE8" THEN NOP
  WHEN ID3 = "PE9" THEN NOP
  WHEN ID3 = "NET" THEN NOP
  WHEN ID3 = "VAS" THEN NOP
  WHEN ID3 = "VA1" THEN NOP
  WHEN ID3 = "VA2" THEN NOP
  WHEN ID3 = "ASS" THEN NOP
  WHEN ID3 = "SR0" THEN NOP
  WHEN ID3 = "PF0" THEN NOP
  WHEN ID3 = "PF1" THEN NOP
  WHEN ID3 = "PF2" THEN NOP
  WHEN ID3 = "PF3" THEN NOP
  WHEN ID3 = "POL" THEN NOP
  WHEN ID3 = "PRG" THEN NOP
  WHEN ID3 = "PER" THEN NOP
  WHEN ID3 = "RAD" THEN NOP
 OTHERWISE
  CALL MSG1
 END

 IF IDNR > MAX.ID3 THEN CALL MSG3

  DEL = '"DELUSER ('ID')"'

 IF IDNR <= MAX.ID3 THEN
 DO
  MS = MSG('OFF')
  INTERPRET DEL
  IF RC = 0 THEN
  DO
   SAY ""
   SAY "                       RETURN CODE :" RC
   SAY "                       USERID      :" ID
   SAY ""
   SAY "                       SUCCESSFULLY DELETED"
  END
  ELSE
  DO
   SAY ""
   SAY "                       RETURN CODE :" RC
   SAY ""
   SAY "                       "ID "NOT DELETED DUE TO CONDITION CODE"
   SAY "                       IT IS POSSIBLE THAT "ID" DOES NOT EXIST"
  END
 EXIT

  /***********/
  /* MESAGES */
  /***********/

  MSG1: SAY ""
  SAY "                       +----------------+ "
  SAY "                       ø INVALID USERID ø "
  SAY "                       ø                ø "
  SAY "                       ø RESPECIFY .... ø "
  SAY "                       +----------------+ "
  SAY ""
  EXIT

  MSG2: SAY ""
  SAY "              +------------------------------------------+"
  SAY "              ø YOU ARE NOT AUTHORIZED TO DELETE THIS ID ø"
  SAY "              ø                                          ø"
  IF AD2 = "PO" THEN
   SAY "              ø ONLY PF**** OR POL*** ALLOWED            ø"
  ELSE
  IF AD2 = "PE" THEN
   SAY "              ø ONLY PE**** OR NET*** ALLOWED            ø"
  ELSE
   SAY "              ø ONLY "AD2"**** ALLOWED                      ø"
  SAY "              +------------------------------------------+"
  SAY ""
  EXIT

  MSG3: SAY ""
  SAY "               +-----------------------------------------+ "
  SAY "               ø INVALID USERID - NUMERIC VALUE TO LARGE ø"
  SAY "               ø                                         ø"
  SAY "               ø   PLEASE CALL YOUR SYSTEM PROGRAMMER    ø"
  SAY "               +-----------------------------------------+ "
  SAY ""
  EXIT
./ ADD NAME=COMULST  0101-01016-01016-1428-00181-00181-00000-RACFCLS
/* REXX */
/* TO RACF USERID FOR USE BY COMPLETE  */
/* TO RACF USERID FOR USE BY COMPLETE  */
/* TO RACF USERID FOR USE BY COMPLETE  */

 ARG INPUT
 PARSE VALUE INPUT WITH ID ':' NAME ':' PSW
 PARSE VALUE ID WITH ID2 3 DUMMY
 PARSE VALUE ID WITH ID3 4 DUMMY
 PARSE VALUE ID WITH ID4 5 DUMMY
 PARSE VALUE ID WITH DUMMY 3 IDNR1
 PARSE VALUE ID WITH DUMMY 4 IDNR2
 PARSE VALUE ID WITH DUMMY 5 IDNR3

 UID = SYSVAR(SYSUID)
 PARSE VALUE UID WITH AD2 3 DUMMY
 IDNR = "XXX"
 IF DATATYPE(IDNR1,'N') = 1 THEN IDNR = IDNR1
 ELSE
  IF DATATYPE(IDNR2,'N') = 1 THEN IDNR = IDNR2
  ELSE
   IF DATATYPE(IDNR3,'N') = 1 THEN IDNR = IDNR3

 IF DATATYPE(IDNR,'N') = 0 THEN CALL MSG2

 IF NAME <> '' THEN NM = "'"NAME"'"


 /**********/
 /* GROUP  */
 /**********/
 PR. =''
 PR.DBA = "SYS2"
 PR.PEN = "PERSAL"
 PR.PE1 = "PERSAL1"
 PR.PE2 = "PERSAL2"
 PR.PE3 = "PERSAL3"
 PR.PE4 = "PERSAL4"
 PR.PE5 = "PERSAL5"
 PR.PE6 = "PERSAL6"
 PR.PE7 = "PERSAL7"
 PR.PE8 = "PERSAL8"
 PR.PE9 = "PERSAL9"
 PR.NET = "PERSAL"
 PR.VAS = "VAS"
 PR.VA1 = "VAS1"
 PR.VA2 = "VAS2"
 PR.ASS = "ASSUPOL"
 PR.SR0 = "SPESREK"
 PR.PF0 = "POLFIN"
 PR.PF1 = "POLFIN"
 PR.PF2 = "POLFIN"
 PR.PF3 = "POLFIN"
 PR.POL = "POLFIN"
 PR.PRG = "PROGRAMR"
 PR.PER = "PERSAL1"
 PR.RAD = "RADIOB"

 /*************************************************************/
 /* MAXIMUM USERS FOR EVERY ADMINISTRATOR                     */
 /* THE FOURTH CHARACTER IS THE TEST CAHARACTER FOR EVERY ADM */
 /*************************************************************/
 MAX. = 0
 MAX.DBA = 10
 MAX.PEN = 9999
 MAX.PE1 = 9999
 MAX.PE2 = 9999
 MAX.PE3 = 9999
 MAX.PE4 = 9999
 MAX.PE5 = 9999
 MAX.PE6 = 9999
 MAX.PE7 = 9999
 MAX.PE8 = 9999
 MAX.PE9 = 9999
 MAX.NET = 9999
 MAX.VAS = 9999
 MAX.VA1 = 9999
 MAX.VA2 = 9999
 MAX.ASS = 9999
 MAX.SR0 = 9999
 MAX.PF0 = 9999
 MAX.PF1 = 9999
 MAX.PF2 = 9999
 MAX.PF3 = 9999
 MAX.POL = 9999
 MAX.PRG = 50
 MAX.PER = 200
 MAX.RAD = 20


 FLAG = Y
 IF IDNR <= 0 OR IDNR >= 9999 THEN CALL MSG1
 IF (AD2 <> "SY") | (AD2 <> "DB") | (AD2 <> "PR") THEN FLAG = N
 IF (AD2 = "PE") & ((ID2 = "NE") | (ID2 = "PE")) THEN FLAG = N
 ELSE
  IF (AD2 = "PO") & ((ID2 = "PO") | (ID2 = "PF") | (ID2= "SR")) THEN
   FLAG = N
  ELSE
   IF (AD2 <> ID2) THEN
    IF FLAG = Y THEN CALL MSG2

 SELECT
  WHEN ID3 = "DBA" THEN NOP
  WHEN ID3 = "PEN" THEN NOP
  WHEN ID3 = "PE1" THEN NOP
  WHEN ID3 = "PE2" THEN NOP
  WHEN ID3 = "PE3" THEN NOP
  WHEN ID3 = "PE4" THEN NOP
  WHEN ID3 = "PE5" THEN NOP
  WHEN ID3 = "PE6" THEN NOP
  WHEN ID3 = "PE7" THEN NOP
  WHEN ID3 = "PE8" THEN NOP
  WHEN ID3 = "PE9" THEN NOP
  WHEN ID3 = "NET" THEN NOP
  WHEN ID3 = "VAS" THEN NOP
  WHEN ID3 = "VA1" THEN NOP
  WHEN ID3 = "VA2" THEN NOP
  WHEN ID3 = "ASS" THEN NOP
  WHEN ID3 = "SR0" THEN NOP
  WHEN ID3 = "PF0" THEN NOP
  WHEN ID3 = "PF1" THEN NOP
  WHEN ID3 = "PF2" THEN NOP
  WHEN ID3 = "PF3" THEN NOP
  WHEN ID3 = "POL" THEN NOP
  WHEN ID3 = "PRG" THEN NOP
  WHEN ID3 = "PER" THEN NOP
  WHEN ID3 = "RAD" THEN NOP
 OTHERWISE
  CALL MSG1
 END

 IF IDNR > MAX.ID3 THEN CALL MSG3

  LST = '"LU ('ID')"'
  X = MSG('OFF')
  INTERPRET LST
  IF RC <> 0 THEN
  DO
   SAY ""
   SAY "                       RETURN CODE :" RC
   SAY ""
   SAY "                       "ID "DOES NOT EXIST"
  END
 EXIT

  /***********/
  /* MESAGES */
  /***********/

  MSG1: SAY ""
  SAY "                       +----------------+ "
  SAY "                       ø INVALID USERID ø "
  SAY "                       ø                ø "
  SAY "                       ø RESPECIFY .... ø "
  SAY "                       +----------------+ "
  SAY ""
  EXIT

  MSG2: SAY ""
  SAY "              +----------------------------------------+"
  SAY "              ø YOU ARE NOT AUTHORIZED TO LIST THIS ID ø"
  SAY "              ø                                        ø"
  IF AD2 = "PO" THEN
   SAY "              ø ONLY PF**** OR POL*** ALLOWED          ø"
  ELSE
  IF AD2 = "PE" THEN
   SAY "              ø ONLY PE**** OR NET*** ALLOWED          ø"
  ELSE
   SAY "              ø ONLY "AD2"**** ALLOWED                    ø"
  SAY "              +----------------------------------------+"
  SAY ""
  EXIT

  MSG3: SAY ""
  SAY "               +-----------------------------------------+ "
  SAY "               ø INVALID USERID - NUMERIC VALUE TO LARGE ø"
  SAY "               ø                                         ø"
  SAY "               ø   PLEASE CALL YOUR SYSTEM PROGRAMMER    ø"
  SAY "               +-----------------------------------------+ "
  SAY ""
  EXIT
./ ADD NAME=COMURES  0101-01016-01016-1428-00203-00203-00000-RACFCLS
/* REXX */
/* TO RACF USERID FOR USE BY COMPLETE  */
/* TO RACF USERID FOR USE BY COMPLETE  */
/* TO RACF USERID FOR USE BY COMPLETE  */

 ARG INPUT
 PARSE VALUE INPUT WITH ID ':' NAME ':' PSW
 PARSE VALUE ID WITH ID2 3 DUMMY
 PARSE VALUE ID WITH ID3 4 DUMMY
 PARSE VALUE ID WITH ID4 5 DUMMY
 PARSE VALUE ID WITH DUMMY 3 IDNR1
 PARSE VALUE ID WITH DUMMY 4 IDNR2
 PARSE VALUE ID WITH DUMMY 5 IDNR3
 SAY ""
 SAY ""
 SAY ""
 SAY ""
 SAY ""
 SAY ""
 SAY ""

 UID = SYSVAR(SYSUID)
 PARSE VALUE UID WITH AD2 3 DUMMY
 IDNR = "XXX"
 IF DATATYPE(IDNR1,'N') = 1 THEN IDNR = IDNR1
 ELSE
  IF DATATYPE(IDNR2,'N') = 1 THEN IDNR = IDNR2
  ELSE
   IF DATATYPE(IDNR3,'N') = 1 THEN IDNR = IDNR3

 IF DATATYPE(IDNR,'N') = 0 THEN CALL MSG2

 IF NAME <> '' THEN NM = "'"NAME"'"


 /**********/
 /* GROUP  */
 /**********/
 PR. =''
 PR.DBA = "SYS2"
 PR.PEN = "PERSAL"
 PR.PE1 = "PERSAL1"
 PR.PE2 = "PERSAL2"
 PR.PE3 = "PERSAL3"
 PR.PE4 = "PERSAL4"
 PR.PE5 = "PERSAL5"
 PR.PE6 = "PERSAL6"
 PR.PE7 = "PERSAL7"
 PR.PE8 = "PERSAL8"
 PR.PE9 = "PERSAL9"
 PR.NET = "PERSAL"
 PR.VAS = "VAS"
 PR.VA1 = "VAS1"
 PR.VA2 = "VAS2"
 PR.ASS = "ASSUPOL"
 PR.SR0 = "SPESREK"
 PR.PF0 = "POLFIN"
 PR.PF1 = "POLFIN"
 PR.PF2 = "POLFIN"
 PR.PF3 = "POLFIN"
 PR.POL = "POLFIN"
 PR.PRG = "PROGRAMR"
 PR.PER = "PERSAL1"

 /*************************************************************/
 /* MAXIMUM USERS FOR EVERY ADMINISTRATOR                     */
 /* THE FOURTH CHARACTER IS THE TEST CAHARACTER FOR EVERY ADM */
 /*************************************************************/
 MAX. = 0
 MAX.DBA = 10
 MAX.PEN = 9999
 MAX.PE1 = 9999
 MAX.PE2 = 9999
 MAX.PE3 = 9999
 MAX.PE4 = 9999
 MAX.PE5 = 9999
 MAX.PE6 = 9999
 MAX.PE7 = 9999
 MAX.PE8 = 9999
 MAX.PE9 = 9999
 MAX.NET = 9999
 MAX.VAS = 9999
 MAX.VA1 = 9999
 MAX.VA2 = 9999
 MAX.ASS = 9999
 MAX.SR0 = 9999
 MAX.PF0 = 9999
 MAX.PF1 = 9999
 MAX.PF2 = 9999
 MAX.PF3 = 9999
 MAX.POL = 9999
 MAX.PRG = 100
 MAX.PER = 200


 FLAG = Y
 IF IDNR <= 0 OR IDNR >= 9999 THEN CALL MSG1
 IF (AD2 <> "SY") | (AD2 <> "DB") | (AD2 <> "PR") THEN FLAG = N
 IF (AD2 = "PE") & ((ID2 = "NE") | (ID2 = "PE")) THEN FLAG = N
 ELSE
  IF (AD2 = "PO") & ((ID2 = "PO") | (ID2 = "PF") | (ID2= "SR")) THEN
   FLAG = N
  ELSE
   IF (AD2 <> ID2) THEN
    IF FLAG = Y THEN CALL MSG2

 SELECT
  WHEN ID3 = "DBA" THEN NOP
  WHEN ID3 = "PEN" THEN NOP
  WHEN ID3 = "PE1" THEN NOP
  WHEN ID3 = "PE2" THEN NOP
  WHEN ID3 = "PE3" THEN NOP
  WHEN ID3 = "PE4" THEN NOP
  WHEN ID3 = "PE5" THEN NOP
  WHEN ID3 = "PE6" THEN NOP
  WHEN ID3 = "PE7" THEN NOP
  WHEN ID3 = "PE8" THEN NOP
  WHEN ID3 = "PE9" THEN NOP
  WHEN ID3 = "NET" THEN NOP
  WHEN ID3 = "VAS" THEN NOP
  WHEN ID3 = "VA1" THEN NOP
  WHEN ID3 = "VA2" THEN NOP
  WHEN ID3 = "ASS" THEN NOP
  WHEN ID3 = "SR0" THEN NOP
  WHEN ID3 = "PF0" THEN NOP
  WHEN ID3 = "PF1" THEN NOP
  WHEN ID3 = "PF2" THEN NOP
  WHEN ID3 = "PF3" THEN NOP
  WHEN ID3 = "POL" THEN NOP
  WHEN ID3 = "PRG" THEN NOP
  WHEN ID3 = "PER" THEN NOP
 OTHERWISE
  CALL MSG1
 END

 IF IDNR > MAX.ID3 THEN CALL MSG3

 IF NAME <> '' THEN
  ALT = '"ALTUSER ('ID') NAME('NM') PASSWORD('PSW') RESUME"'
 ELSE
  ALT = '"ALTUSER ('ID') PASSWORD('PSW') RESUME"'

 IF IDNR <= MAX.ID3 THEN
 DO
  MS = MSG('OFF')
  INTERPRET ALT
  IF RC = 0 THEN
  DO
   SAY ""
   SAY "                       RETURN CODE :" RC
   SAY "                       USERID      :" ID
   IF NAME <> '' THEN
   SAY "                       NAME        :" NAME
   SAY "                       PASSWORD    :" PSW
   SAY ""
   SAY "                       SUCCESSFULLY CHANGED"
  END
  ELSE
  DO
   SAY ""
   SAY "                       RETURN CODE :" RC
   SAY ""
   SAY "                       "ID "NOT CHANGED DUE TO CONDITION CODE"
   SAY "                       IT IS POSSIBLE THAT "ID" DOES NOT EXIST"
  END
 EXIT

  /***********/
  /* MESAGES */
  /***********/

  MSG1: SAY ""
  SAY "                       +----------------+ "
  SAY "                       ø INVALID USERID ø "
  SAY "                       ø                ø "
  SAY "                       ø RESPECIFY .... ø "
  SAY "                       +----------------+ "
  SAY ""
  EXIT

  MSG2: SAY ""
  SAY "              +------------------------------------------+"
  SAY "              ø YOU ARE NOT AUTHORIZED TO CHANGE THIS ID ø"
  SAY "              ø                                          ø"
  IF AD2 = "PO" THEN
   SAY "              ø ONLY PF**** OR POL*** ALLOWED            ø"
  ELSE
  IF AD2 = "PE" THEN
   SAY "              ø ONLY PE**** OR NET*** ALLOWED            ø"
  ELSE
   SAY "              ø ONLY "AD2"**** ALLOWED                      ø"
  SAY "              +------------------------------------------+"
  SAY ""
  EXIT

  MSG3: SAY ""
  SAY "               +-----------------------------------------+ "
  SAY "               ø INVALID USERID - NUMERIC VALUE TO LARGE ø"
  SAY "               ø                                         ø"
  SAY "               ø   PLEASE CALL YOUR SYSTEM PROGRAMMER    ø"
  SAY "               +-----------------------------------------+ "
  SAY ""
  EXIT
./ ADD NAME=EDITLU   0101-01016-01016-1428-00027-00027-00000-RACFCLS
/* REXX */
/* **************************************************************** */
/* ** EDIT RACF LISTUSER LISTING                                  ** */
/* **************************************************************** */
SAY "SEARCHING ..."
"PROFILE NOPREFIX"

"EXECIO * DISKR INPUT (FINIS STEM IN."
TEL = 0
DO WHILE TEL < IN.0
 TEL = TEL + 1
 PS = POS('USER=',IN.TEL)
 IF PS <> 0 THEN
 DO
 OUT. = IN.TEL
 "EXECIO 1 DISKW OUTPUT (STEM OUT."
  TEL = TEL + 2
 OUT. = IN.TEL
 "EXECIO 1 DISKW OUTPUT (STEM OUT."
  TEL = TEL + 2
 OUT. = IN.TEL
 "EXECIO 1 DISKW OUTPUT (STEM OUT."
END
END
 "EXECIO 0 DISKW OUTPUT (FINIS"
EXIT

./ ADD NAME=GETSYSN  0101-01016-01016-1428-00016-00016-00000-RACFCLS
/* REXX   */
CVTADDR = STORAGE(00000010,4)
CVTSNAME@=D2X(X2D(C2X(CVTADDR))+X2D(154))
SNAME=STORAGE(CVTSNAME@,4)
SAY " "
SAY "*** YOU ARE LOGGED ON TO SYSTEM" SNAME "***"
SAY " "
IF SNAME = "PRDA" THEN EXIT(1)
IF SNAME = "PRDB" THEN EXIT(2)
IF SNAME = "PRDC" THEN EXIT(3)
IF SNAME = "PRDD" THEN EXIT(4)
IF SNAME = "PRDE" THEN EXIT(5)
IF SNAME = "TSTF" THEN EXIT(6)
IF SNAME = "TSTG" THEN EXIT(7)
IF SNAME = "TST1" THEN EXIT(8)
EXIT(0)
./ ADD NAME=GETUID   0101-01016-01016-1428-00015-00015-00000-RACFCLS
/* REXX */
X = SUBSTR(SYSVAR(SYSUID),1,3)

SELECT
  WHEN X = 'SYS' THEN DO
    "EXEC 'SYS2.RACFCLST(ISPSYS)'"
  END
  WHEN X = 'MED' THEN
    "EXEC 'SYS2.RACFCLST(ISPMED)'"
  OTHERWISE DO
    "EXEC 'SYS2.RACFCLST(ISPMED)'"
  END
END

EXIT
./ ADD NAME=HSMCMD   0101-01016-01016-1428-00037-00037-00000-RACFCLS
/* REXX */
ARG INPUT
PARSE VALUE INPUT WITH TYPE ':' DSN ':' GEN ':' VOL ':' UNIT ':' ANS,
':' DSN2
UID = SYSVAR(SYSUID)
IF TYPE = "LIST" THEN
DO
 X = MSG('OFF')
 DEL = '"DEL 'UID'.HSMLIST"'
 INTERPRET DEL
 LIST = '"HLIST DATASET('DSN') BACKUPCONTROLDATASET',
 'OUTDATASET('UID'.HSMLIST)"'
 INTERPRET LIST
 BR = '"ISPEXEC BROWSE DATASET('UID'.HSMLIST)"'
 INTERPRET BR
 X = MSG('ON')
 EXIT
END

 IF TYPE = "RECOVER" THEN
 DO
  IF ANS = "Y" THEN
   IF (UNIT = '') & (VOL = '') THEN
     REC = '"HRECOVER 'DSN' GEN('GEN') REPLACE"'
   ELSE
     REC = '"HRECOVER 'DSN' GEN('GEN') TOVOLUME('VOL') UNIT('UNIT')',
     'REPLACE"'
  ELSE
   IF (UNIT = '') & (VOL = '') THEN
     REC = '"HRECOVER 'DSN' GEN('GEN') NEWNAME('DSN2')"'
   ELSE
     REC = '"HRECOVER 'DSN' GEN('GEN') TOVOLUME('VOL') UNIT('UNIT')',
     'NEWNAME('DSN2')"'
  INTERPRET REC
 DEL = '"DEL 'UID'.HSMLIST"'
 INTERPRET DEL
 END
./ ADD NAME=ISP      0101-01016-01016-1428-00001-00001-00000-RACFCLS
PROFILE NOPREFIX
./ ADD NAME=ISPBOOL  0101-01016-01016-1428-00166-00166-00000-RACFCLS
PROC 0 PANEL()   /* ISPBOOL */
CONTROL NOFLUSH NOMSG MAIN
PROFILE MODE WTPMSG MSGID
GETSYSN
SET SYSNUM = &LASTCC
IF &SYSNUM = 0 THEN SET SYSNAME=BIGERROR
IF &SYSNUM = 1 THEN SET SYSNAME=PRDA
IF &SYSNUM = 2 THEN SET SYSNAME=PRDB
IF &SYSNUM = 3 THEN SET SYSNAME=PRDC
IF &SYSNUM = 4 THEN SET SYSNAME=PRDD
IF &SYSNUM = 5 THEN SET SYSNAME=PRDE
IF &SYSNUM = 6 THEN SET SYSNAME=TSTF
IF &SYSNUM = 7 THEN SET SYSNAME=TSTG
IF &SYSNUM = 8 THEN SET SYSNAME=TST1

SET SHRNAME = &SYSNAME
IF &SYSNUM = 4 THEN SET SHRNAME=PRDE
IF &SYSNUM = 7 THEN SET SHRNAME=PRDE
IF &SYSNUM = 8 THEN SET SHRNAME=PRDE

FREE FILE(ISPLLIB,ISPPLIB,ISPMLIB,ISPTLIB,ISPSLIB, +
          ISPPROF,ISPTABL,SMPTABL)
SET &DSNAME = &SYSUID..&SYSNAME..ISPF.ISPPROF
ALLOC FI(ISPPROF) SHR  DA('&DSNAME.')
IF &LASTCC ^= 0 THEN +
  DO
    FREE FI(ISPCRTE)
    CONTROL MSG
    ATTRIB ISPCRTE DSORG(PO) RECFM(F B) LRECL(80) BLKSIZE(6160)
    ALLOC DA('&DSNAME.') SP(2,1) TRACKS DIR(2) USING(ISPCRTE) +
        FI(ISPPROF)
    IF &LASTCC = 0 THEN +
      WRITE *** ISPF PROFILE DATA SET '&DSNAME.' HAS BEEN CREATED
    ELSE +
     DO
      WRITE  *** UNABLE TO ALLOCATE ISPF PROFILE DATA SET '&DSNAME.'
      FREE FI(ISPCRTE)
      EXIT CODE(12)
     END
    FREE FI(ISPCRTE)
  END
CONTROL MSG
IF &PANEL = &STR() THEN +
  SET &PNL = PANEL(ISP@BOOL)
ELSE +
  SET &PNL = PANEL(&PANEL)
ERROR RETURN
ALLOC FI(ISPTABL) SHR DA('&DSNAME.')
ALLOC FI(SMPTABL) SHR DA('&DSNAME.')
MURPHY
ALLOC FI(ISPLLIB) SHR DA( +
    'GIM.SGIMLMD0'                                /* SMP/E       */  +
    'SYS1.SCBDHENU'                               /* HCD         */  +
    'SYS1.DFQLLIB'                                /* DFHSM       */  +
    'SYS1.ICEISPL'                                /* DFSORT      */  +
    'SYS1.DGTLLIB'                                /* DFP/DFDSS   */  +
    'CDCU.DCZDLOD'                                /* CDCU        */  +
    'DIT.V1R1M0.SDITLOAD'                         /* DITTO       */  +
    'DELPHI.V221.CMDLOAD'                         /* DELPHI      */  +
    'SYS2.TSPRINT.APFLIB')                        /* DELPHI      */
/*  'SDF150.SDFLOAD'                                 SDF150      */
/*  'SYS3.ZHC240.ISPLOAD',                           HACC        */
/*  'SYS3.ZHC240.LOAD',                              HACC        */
/*  'VPS.VPS.R62.TSO.LOAD')                          VPS         */
ALLOC FI(ISPPLIB) SHR DA( +
    'ISF.V1R5M0.SISFPLIB'                         /* SDSF        */  +
    'SYS3.&SHRNAME..IOAIV410.PANEL'               /* IOA         */  +
    'SYS3.IOA.PANEL'                              /* IOA SHARED  */  +
    'SYS2.ISPPLIB'                                /* CUSTOM      */  +
    'ISP.V4R2M0.SISPPENU'                         /* ISPF        */  +
    'SYS2.RACFPANL'                               /* CUSTOM      */  +
    'GIM.SGIMPENU'                                /* SMP/E       */  +
    'SYS1.DFQPLIB'                                /* DFHSM       */  +
    'SYS1.SCBDPENU'                               /* HCD         */  +
    'SYS1.SERBPENU'                               /* RMFIII      */  +
    'SYS1.SBPXPENU'                               /* OMVS        */  +
    'SYS1.ICEISPP'                                /* DFSORT      */  +
    'SYS1.DGTPLIB'                                /* DFP/DFDSS   */  +
    'SYS1.HRFPANL'                                /* RACF        */  +
    'SYS1.SBLSPNL0'                               /* IPCS        */  +
    'EOY.SEOYPENU'                                /* BOOKMANAGER */  +
    'DELPHI.V221.PLIB'                            /* DELPHI      */  +
    'CDCU.DCZDPLB'                                /* CDCU        */  +
    'SYS3.ZHC240.ISPPLIB',                        /* HACC        */  +
    'ICQ.ICQPLIB')                                /* ICQ         */
ALLOC FI(ISPMLIB) SHR DA( +
    'ISP.V4R2M0.SISPMENU'                         /* ISPF        */  +
    'ISF.V1R5M0.SISFMLIB'                         /* SDSF        */  +
    'GIM.SGIMMENU'                                /* SMP/E       */  +
    'SYS1.DFQMLIB'                                /* DFHSM       */  +
    'SYS1.SCBDMENU'                               /* HCD         */  +
    'SYS1.SBPXMENU'                               /* OMVS        */  +
    'SYS1.SERBMENU'                               /* RMFIII      */  +
    'SYS1.ICEISPM'                                /* DFSORT      */  +
    'SYS1.DGTMLIB'                                /* DFP/DFDSS   */  +
    'SYS1.HRFMSG'                                 /* RACF        */  +
    'SYS1.SBLSMSG0'                               /* IPCS        */  +
    'SYS2.ISPMENU'                                /* CUSTOM      */  +
    'EDC.V2R2M0.SEDCMSGP'                         /* C/370       */  +
    'EOY.SEOYMENU'                                /* BOOKMANAGER */  +
    'DELPHI.V221.MLIB'                            /* DELPHI      */  +
    'CDCU.DCZDMLB'                                /* CDCU        */  +
    'SYS3.&SHRNAME..IOAIV410.ISMSG'               /* IOA         */  +
    'SYS3.IOA.ISMSG'                              /* IOA SHARED  */  +
    'SYS3.ZHC240.ISPMLIB',                        /* HACC        */  +
    'ICQ.ICQMLIB')                                /* ICQ         */
ALLOC FI(ISPTLIB) SHR DA('&DSNAME' +
    'ISF.V1R5M0.SISFTLIB'                         /* SDSF        */  +
    'GIM.SGIMTENU'                                /* SMP/E       */  +
    'SYS1.SCBDTENU'                               /* HCD         */  +
    'SYS1.SERBTENU'                               /* RMFIII      */  +
    'SYS1.SBPXTENU'                               /* OMVS        */  +
    'SYS1.ICEISPT'                                /* DFSORT      */  +
    'SYS1.DGTTLIB'                                /* DFP/DFDSS   */  +
    'SYS1.SBLSTBL0'                               /* IPCS        */  +
    'EOY.SEOYTENU'                                /* BOOKMANAGER */  +
    'DELPHI.V221.CMDTAB'                          /* DELPHI      */  +
    'ICQ.ICQTLIB'                                 /* ICQ         */  +
    'CDCU.DCZDTLB'                                /* CDCU        */  +
    'SYS3.&SHRNAME..IOAIV410.TLIB'                /* IOA         */  +
    'SYS3.IOA.TLIB'                               /* IOA         */  +
    'SYS3.ZHC240.ISPTLIB',                        /* HACC        */  +
    'ISP.V4R2M0.SISPTENU')                        /* ISPF        */
ALLOC FI(ISPSLIB) SHR DA( +
    'GIM.SGIMSENU'                                /* SMP/E       */  +
    'SYS1.SBLSKEL0'                               /* IPCS        */  +
    'SYS1.ICEISPS'                                /* DFSORT      */  +
    'SYS1.DGTSLIB'                                /* DFDSS       */  +
    'SYS1.HRFSKEL'                                /* RACF        */  +
    'ICQ.ICQSLIB'                                 /* TSO/E       */  +
    'CDCU.DCZDSLB'                                /* CDCU        */  +
    'MAINT.LIVE.SLIB'                             /* MAKE        */  +
    'ISP.V4R2M0.SISPSLIB')                        /* ISPF        */
FREE FI(SYSPROC)
ALLOC FI(SYSPROC) SHR DA( +
    'ISP.V4R2M0.SISPEXEC'                         /* RACF ADMIN  */ +
    'ISP.V4R2M0.SISPCLIB'                         /* RACF ADMIN  */ +
    'SYS1.HRFCLST'                               /* RACF        */  +
    'SYS2.CMDPROC'                               /* CUSTOMIZED  */  +
    'SYS2.RACFCLST'                              /* CUSTOMIZED  */  +
    'GIM.SGIMCLS0'                               /* SMP/E CLISTS*/  +
    'SYS1.SBLSCLI0'                              /* IPCS        */  +
    'SYS1.SBPXEXEC'                              /* OMVS        */  +
    'SYS1.SCBDCLST'                              /* HCD         */  +
    'SYS1.ICEISPC'                               /* DFSORT      */  +
    'SYS1.DGTCLIB'                               /* DFDSS       */  +
    'SYS1.SERBCLS'                               /* RMFIII      */  +
    'ICQ.ICQCCLIB'                               /* TSO/E ENU   */  +
    'EDC.V2R2M0.SEDCLIST'                        /* C/370       */  +
    'EOY.SEOYCLIB'                               /* BOOKMANAGER */  +
    'CDCU.DCZDEXE'                                /* CDCU       */  +
    'SYS3.&SHRNAME..IOAIV410.CLIST'              /* IOA         */  +
    'SYS3.IOA.CLIST'                             /* IOA SHARED  */  +
    'SYS3.ZHC240.ISPCLIB'                        /* HACC        */  +
    'SDF2.V1R4M0.SDGICMD')
ALLOC FI(ICQAATAB) SHR DA('ICQ.ICQAATAB')         /* TSO/E       */
ALLOC FI(ICQABTAB) SHR DA('ICQ.ICQABTAB')         /* TSO/E       */
ALLOC FI(ICQANTAB) SHR DA('ICQ.ICQANTAB')         /* TSO/E       */
ALLOC FI(ICQAPTAB) SHR DA('ICQ.ICQAPTAB')         /* TSO/E       */
ALLOC FI(ICQAMTAB) SHR DA('ICQ.ICQAMTAB')         /* TSO/E       */
ALLOC FI(ICQCMTAB) SHR DA('ICQ.ICQCMTAB')         /* TSO/E       */
ALLOC FI(ISRCFIL)  SHR DA('SYSA.SPF.CFIL')        /* LMF         */
ALLOC FI(CISTABL)  SHR DA('SYS2.CIDTABL')         /* SMPE        */
ALLOC FI(HASPINDX) SHR DA('SYS0.&SYSNAME..HASPINDX') /* SDSF INDEX */
ERROR RETURN
PDF &PNL
./ ADD NAME=ISPKHH   0101-01016-01016-1428-00755-00755-00000-RACFCLS
/* ****************************Rexx**********************************/
/* SAPD SHARED LOGON PROC */

"PROFILE NOPREF MODE WTPMSG MSGID"
X = MSG('OFF')
UID = SYSVAR(SYSUID)
PROC = SYSVAR(SYSPROC)
GETSYSN
IF RC = 0 THEN SYSNAME=BIGERROR
IF RC = 1 THEN SYSNAME=PRDA
IF RC = 2 THEN SYSNAME=PRDB
IF RC = 3 THEN SYSNAME=PRDC
IF RC = 4 THEN SYSNAME=PRDD
IF RC = 5 THEN SYSNAME=PRDE
IF RC = 6 THEN SYSNAME=TSTF
IF RC = 7 THEN SYSNAME=TSTG
IF RC = 8 THEN SYSNAME=TST1
SHRNAME = SYSNAME
IF RC = 4 THEN SHRNAME=PRDE
IF RC = 7 THEN SHRNAME=PRDE
IF RC = 8 THEN SHRNAME=PRDE

SAY 'HAVE A NICE DAY !!!'
SAY 'BUSY ALLOCATING FILES, PLEASE WAIT .....'
SAY ''
MURPHY
IF (PROC = "DIENADMN") |,
   (PROC = "NETADMN") |,
   (PROC = "OPERADMN") |,
   (PROC = "MEDADMN") |,
   (PROC = "COMADMN") |,
   (PROC = "COMRESU") |,
   (PROC = "SPFTHE") |,
   (PROC = "PROGADMN")
THEN DO
   SAY ' '
   SAY '                 If you have any problems'
   SAY '                 with administering USERIDs'
   SAY '                 please phone'
   SAY ' '
   SAY '                 EDWARD ROSS ext 120656 or'
   SAY '                             (012) 4210656'
   SAY '                 FAX ===>>   ext 120606 or <<==='
   SAY '                             (012) 4210606 <<==='
END

/*****************************************/
/* ALLOC ISPFPROF                        */
/*****************************************/
DSNAME = "'"UID"."SYSNAME".ISPF.ISPPROF'"
"FREE FI(ISPPROF)"
RC = LISTDSI(DSNAME)
IF RC > 4 THEN
DO
 X = MSG('ON')
 "FREE FI(ISPCRTE)"
 "ATTRIB ISPCRTE DSORG(PO) RECFM(F B) LRECL(80) BLKSIZE(18400)"
 A1='"ALLOC DA(' || DSNAME || ') SP(10,1) TRACKS DIR(10)',
 || 'USING(ISPCRTE) FI(ISPPROF)"'
 SAY A1
 INTERPRET A1
 IF RC = 0 THEN
  SAY  "ISPF PROFILE DATA SET" DSNAME "HAS BEEN CREATED"
 ELSE
 DO
   SAY  "UNABLE TO ALLOCATE ISPF PROFILE DATA SET" DSNAME
   "FREE FI(ISPCRTE)"
   EXIT 12
 END
 "FREE FI(ISPCRTE)"
END
A1 = '"ALLOC FI(ISPPROF) SHR DA('||DSNAME||')"'
A2 = '"ALLOC FI(ISPTABL) SHR DA('||DSNAME||')"'
A3 = '"ALLOC FI(ISPTLIB) SHR DA('||DSNAME||')"'
INTERPRET A1
INTERPRET A2
INTERPRET A3

/********************************/
/* SPECIFY DATASETS FOR SYSEXEC */
/********************************/
E_ISP = 'ISP.V4R2M0.SISPEXEC'

/********************************/
/* SPECIFY DATASETS FOR SYSPROC */
/********************************/
C_ISP2 = 'ISP.V4R2M0.SISPCLIB'
C_RAC3 = 'SYS1.HRFCLST'
C_CUS1 = 'SYS2.CMDPROC'
C_CUS2 = "'SYS2."SHRNAME".CMDPROC'"
C_CUS3 = 'SYS2.PRDC.CMDPROC'
C_OPS1 = 'OPS.CMDPROC'
C_OPS2 = "'OPS."SHRNAME".CMDPROC'"
C_RAC1 = 'SYS2.RACFCLST'
C_RAC2 = "'SYS2."SHRNAME".RACFCLST'"
C_SMPE = 'GIM.SGIMCLS0'
C_IPCS = 'SYS1.SBLSCLI0'
C_HCD  = 'SYS1.SCBDCLST'
C_DFSRT = 'SYS1.ICEISPC'
C_DFDSS = 'SYS1.DGTCLIB'
C_RMF  = 'SYS1.SERBCLS'
C_ICQ  = 'ICQ.ICQCCLIB'
C_EDC  = 'EDC.V2R2M0.SEDCLIST'
C_BKM  = 'EOY.SEOYCLIB'
C_IOA1 = "'SYS3."SHRNAME".IOAIV410.CLIST'"
C_IOA2 = 'SYS3.IOA.CLIST'
C_IOA3 = 'SYS3.IOA500.CLIST'
C_HACC = 'SYS3.ZHC240.ISPCLIB'
C_SDF  = 'SDF2.V1R4M0.SDGICMD'
C_OMVS = 'SYS1.SBPXEXEC'
C_CDCU = 'CDCU.DCZDEXE'

/********************************/
/* SPECIFY DATASETS FOR ISPLLIB */
/********************************/
L_SMP  = 'GIM.SGIMLMD0'
L_HCD  = 'SYS1.SCBDHENU'
L_HSM = 'SYS1.DFQLLIB'
L_DFSRT = 'SYS1.ICEISPL'
L_DFDSS = 'SYS1.DGTLLIB'
L_CDCU  = 'CDCU.DCZDLOD'
L_DITTO = 'DIT.V1R1M0.SDITLOAD'
L_DELP = 'DELPHI.V221.CMDLOAD'
L_TSP1 = 'SYS2.TSPRINT.APFLIB'
L_HACC1 = 'SYS3.ZHC240.ISPLOAD'
L_HACC2 = 'SYS3.ZHC240.LOAD'
L_SDF = 'SDF150.SDFLOAD'
L_ISP = 'ISP.V4R2M0.SISPLOAD'
L_MAIN = "'MAINT."SHRNAME".LIVE.LOAD'"

/********************************/
/* SPECIFY DATASETS FOR ISPPLIB */
/********************************/
P_SDSF = 'ISF.V1R5M0.SISFPLIB'
P_IOA = "'SYS3."SHRNAME".IOAIV410.PANEL'"
P_IOA1 = 'SYS3.IOA.PANEL'
P_IOA2 = 'SYS3.IOA500.PANEL'
P_CUS1 = 'SYS2.ISPPLIB'
P_CUS2 = "'SYS2."SHRNAME".ISPPLIB'"
P_ISPF = 'ISP.V4R2M0.SISPPENU'
P_CUS3 = 'SYS2.RACFPANL'
P_CUS4 = "'SYS2."SHRNAME".RACFPANL'"
P_CUS5 = 'SYS2.ISP.OPSPENU'
P_CUS6 = 'SYS2.ISP.PRGPENU'
P_CUS7 = 'SYS2.ISP.NETPENU'
P_SMP = 'GIM.SGIMPENU'
P_HSM = 'SYS1.DFQPLIB'
P_HCD = 'SYS1.SCBDPENU'
P_RMF3 = 'SYS1.SERBPENU'
P_OMVS = 'SYS1.SBPXPENU'
P_DFSRT = 'SYS1.ICEISPP'
P_DFDSS = 'SYS1.DGTPLIB'
P_RACF  = 'SYS1.HRFPANL'
P_IPCS = 'SYS1.SBLSPNL0'
P_BKM = 'EOY.SEOYPENU'
P_DELP = 'DELPHI.V221.PLIB'
P_CDCU = 'CDCU.DCZDPLB'
P_HACC = 'SYS3.ZHC240.ISPPLIB'
P_ICQ = 'ICQ.ICQPLIB'
P_LMF = 'SYS2.LMF.PLIB'
P_MAIN = 'MAINT.LIVE.PLIB'

/********************************/
/* SPECIFY DATASETS FOR ISPMLIB */
/********************************/
M_ISPF = 'ISP.V4R2M0.SISPMENU'
M_SDSF = 'ISF.V1R5M0.SISFMLIB'
M_SMP  = 'GIM.SGIMMENU'
M_HSM = 'SYS1.DFQMLIB'
M_HCD = 'SYS1.SCBDMENU'
M_OMVS = 'SYS1.SBPXMENU'
M_RMF3 = 'SYS1.SERBMENU'
M_DFSRT = 'SYS1.ICEISPM'
M_DFDSS = 'SYS1.DGTMLIB'
M_RACF = 'SYS1.HRFMSG'
M_IPCS = 'SYS1.SBLSMSG0'
M_CUS1 = 'SYS2.ISPMENU'
M_C370 = 'EDC.V2R2M0.SEDCMSGP'
M_BKM = 'EOY.SEOYMENU'
M_DELP = 'DELPHI.V221.MLIB'
M_CDCU = 'CDCU.DCZDMLB'
M_IOA1 = "'SYS3."SHRNAME".IOAIV410.ISMSG'"
M_IOA2 = 'SYS3.IOA.ISMSG'
M_IOA3 = 'SYS3.IOA500.ISMSG'
M_HACC = 'SYS3.ZHC240.ISPMLIB'
M_ICQ = 'ICQ.ICQMLIB'
M_MAIN = 'MAINT.LIVE.MLIB'
M_RAC1 = 'SYS2.RACFMENU'

/********************************/
/* SPECIFY DATASETS FOR ISPTLIB */
/********************************/
T_SDSF = 'ISF.V1R5M0.SISFTLIB'
T_SMP  = 'GIM.SGIMTENU' DSNAME
T_HCD  = 'SYS1.SCBDTENU'
T_RMF3 = 'SYS1.SERBTENU'
T_OMVS = 'SYS1.SBPXTENU'
T_DFSRT = 'SYS1.ICEISPT'
T_DFDSS = 'SYS1.DGTTLIB'
T_IPCS  = 'SYS1.SBLSTBL0'
T_BKM  = 'EOY.SEOYTENU'
T_DELP = 'DELPHI.V221.CMDTAB'
T_ICQ = 'ICQ.ICQTLIB'
T_CDCU  = 'CDCU.DCZDTLB'
T_IOA1  = "'SYS3."||SHRNAME||".IOAIV410.TLIB'"
T_IOA2  = 'SYS3.IOA.TLIB'
T_HACC  = 'SYS3.ZHC240.ISPTLIB'
T_ISPF  = 'ISP.V4R2M0.SISPTENU'
T_RAC1  = 'SYS2.RACFTABL'

/********************************/
/* SPECIFY DATASETS FOR ISPSLIB */
/********************************/
S_SMP  = 'GIM.SGIMSENU'
S_IPCS = 'SYS1.SBLSKEL0'
S_DFSRT = 'SYS1.ICEISPS'
S_DFDSS = 'SYS1.DGTSLIB'
S_RACF = 'SYS1.HRFSKEL'
S_ICQ  = 'ICQ.ICQSLIB'
S_CDCU = 'CDCU.DCZDSLB'
S_CUS1 = 'MAINT.LIVE.SLIB'
S_ISPF = 'ISP.V4R2M0.SISPSLIB'
S_ISP2 = 'ISP.V4R2M0.SISPSENU'
S_RAC1 = 'SYS2.RACFSLIB'

/*******************************/
/* SPECIFY DATASETS FOR SYSLOG */
/*******************************/
H_ISF  = "'SYS0."SYSNAME".HASPINDX'"

/*********************************/
/*  SYSTEMS USERS                */
/*********************************/
IF (PROC = "SPFBOOL") THEN
DO
 IF SYSNAME = 'PRDD' THEN
    SYSPROC = C_ISP2 C_RAC3 C_CUS1 C_RAC1,
    C_SMPE C_IPCS C_HCD C_DFSRT C_DFDSS C_RMF C_ICQ,
    C_EDC C_BKM C_IOA3 C_IOA2 C_IOA1 C_HACC C_SDF C_OMVS C_CDCU
 ELSE
    SYSPROC = C_ISP2 C_RAC3 C_CUS1 C_RAC1,
    C_SMPE C_IPCS C_HCD C_DFSRT C_DFDSS C_RMF C_ICQ,
    C_EDC C_BKM C_IOA1 C_IOA2 C_HACC C_SDF C_OMVS C_CDCU
 SYSEXEC = E_ISP
 IF SUBSTR(UID,1,4) = 'SYS0' THEN
    ISPLLIB = L_SMP L_HCD L_HSM L_DFSRT L_DFDSS L_CDCU L_DITTO L_DELP,
    L_TSP1 L_HACC1 L_HACC2 L_MAIN
 ELSE
    ISPLLIB = L_SMP L_HCD L_HSM L_DFSRT L_DFDSS L_CDCU L_DITTO L_DELP,
    L_TSP1 L_HACC1 L_HACC2 L_MAIN
 IF SYSNAME = 'PRDD' THEN
    ISPPLIB = P_SDSF P_LMF P_IOA2 P_IOA1 P_IOA P_CUS1 P_CUS3,
    P_ISPF P_SMP P_HSM P_HCD P_RMF3 P_OMVS P_DFSRT P_DFDSS,
    P_RACF P_IPCS P_BKM P_DELP P_CDCU P_HACC P_ICQ
 ELSE
    ISPPLIB = P_DFDSS P_SDSF P_LMF P_IOA P_IOA1 P_CUS1,
    P_CUS3 P_ISPF P_SMP P_HSM P_HCD P_RMF3 P_OMVS P_DFSRT,
    P_RACF P_IPCS P_BKM P_DELP P_CDCU P_HACC P_ICQ
 IF SYSNAME = 'PRDD' THEN
    ISPMLIB = M_ISPF M_SDSF M_SMP M_HSM M_HCD M_OMVS M_RMF3 M_DFSRT,
    M_DFDSS M_RACF M_IPCS M_CUS1 M_C370 M_BKM M_DELP M_CDCU M_IOA3,
    M_IOA2 M_IOA1 M_HACC M_ICQ
 ELSE
    ISPMLIB = M_ISPF M_SDSF M_SMP M_HSM M_HCD M_OMVS M_RMF3 M_DFSRT,
    M_DFDSS M_RACF M_IPCS M_CUS1 M_C370 M_BKM M_DELP M_CDCU,
    M_IOA1 M_IOA2 M_HACC M_ICQ
 IF SYSNAME = 'PRDD' THEN
    ISPTLIB = T_SDSF T_SMP T_HCD T_RMF3 T_OMVS T_DFSRT M_DFDSS,
    T_IPCS T_BKM T_DELP T_ICQ T_CDCU T_IOA2 T_IOA1 T_HACC,
    T_ISPF T_RAC1
 ELSE
    ISPTLIB = T_SDSF T_SMP T_HCD T_RMF3 T_OMVS T_DFSRT M_DFDSS,
    T_IPCS T_BKM T_DELP T_ICQ T_CDCU T_IOA1 T_IOA2 T_HACC,
    T_ISPF T_RAC1
 ISPSLIB = S_SMP S_IPCS S_DFSRT S_DFDSS S_RACF S_ICQ S_CDCU,
    S_CUS1 S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@BOOL)'
 JOBTRAC = 'YES'
END

/*********************************/
/*  PROGRAMMERS                  */
/*********************************/
IF (PROC = "PROGRAMR") |,
   (PROC = "UNIXUSER")
THEN DO
 IF SYSNAME = 'PRDD' THEN
    SYSPROC = C_RAC1 C_CUS1 C_CUS3 C_ISP2,
    C_DFSRT C_DFDSS C_SDF C_EDC C_BKM C_IOA3 C_IOA2
 ELSE
    SYSPROC = C_RAC1 C_CUS1 C_CUS3 C_ISP2,
    C_DFSRT C_DFDSS C_SDF C_EDC C_BKM C_IOA1
 SYSEXEC = E_ISP
 IF SYSNAME = 'PRDD' THEN
    ISPLLIB = L_MAIN L_DFSRT L_DFDSS L_DELP L_TSP1 L_SDF
 ELSE
    ISPLLIB = L_MAIN L_DFSRT L_DFDSS L_DELP L_TSP1 L_SDF
 IF SYSNAME = 'PRDD' THEN
    ISPPLIB = P_LMF P_CUS6 P_CUS3 P_MAIN P_DFSRT P_DFDSS,
    P_SDSF P_DELP P_IOA2 P_IOA1 P_BKM
 ELSE
    ISPPLIB = P_LMF P_CUS6 P_CUS3 P_MAIN P_DFSRT P_DFDSS,
    P_SDSF P_DELP P_IOA P_BKM
 IF SYSNAME = 'PRDD' THEN
    ISPMLIB = M_MAIN M_ISPF M_DFSRT M_DFDSS M_DELP M_C370 M_BKM,
    M_IOA3 M_IOA2 M_SDSF
 ELSE
    ISPMLIB = M_MAIN M_ISPF M_DFSRT M_DFDSS M_DELP M_C370 M_BKM,
    M_IOA1 M_SDSF
 IF SYSNAME = 'PRDD' THEN
    ISPTLIB = T_DFSRT T_DFDSS T_SDSF T_DELP T_BKM T_IOA2 T_ISPF
 ELSE
    ISPTLIB = T_DFSRT T_DFDSS T_SDSF T_DELP T_BKM T_IOA2 T_ISPF
 ISPSLIB = S_CUS1 S_DFSRT S_DFDSS S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@PRG)'
 JOBTRAC1 = 'YES'
END

/**********************************/
/*  OPERATORS USERS               */
/**********************************/
IF (PROC = "OPERATOR")
THEN DO
 IF SYSNAME = 'PRDD' THEN
    SYSPROC = C_ISP2 C_RAC1 C_CUS1 C_DFSRT C_DFDSS,
    C_RMF C_EDC C_BKM C_IOA3 C_IOA1
 ELSE
    SYSPROC = C_ISP2 C_RAC1 C_CUS1 C_DFSRT C_DFDSS,
    C_RMF C_EDC C_BKM C_IOA1
 SYSEXEC = E_ISP
 IF SYSNAME = 'PRDD' THEN
    ISPLLIB = L_DFSRT L_DFDSS L_TSP1
 ELSE
    ISPLLIB = L_DFSRT L_DFDSS L_TSP1
 IF SYSNAME = 'PRDD' THEN
    ISPPLIB = P_SDSF P_CUS3 P_CUS5 P_IOA2 P_IOA P_RMF3 P_DFSRT,
    P_DFDSS P_BKM
 ELSE
    ISPPLIB = P_SDSF P_CUS3 P_CUS5 P_IOA P_RMF3 P_DFSRT,
    P_DFDSS P_BKM
 ISPMLIB = M_ISPF M_SDSF M_RMF3 M_DFSRT M_DFDSS M_C370 M_BKM,
    M_IOA1
 ISPTLIB = T_SDSF T_RMF3 T_DFSRT T_DFDSS T_BKM T_IOA1 T_ISPF
 ISPSLIB = S_DFSRT S_DFDSS S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@OPS)'
 JOBTRAC = 'NO'
END

/*********************************/
/*  DIENS KONTROLE               */
/*********************************/
IF (PROC = "DIENSKRL")
THEN DO
 SYSPROC = C_RAC1 C_ISP2 C_DFDSS
 SYSEXEC = E_ISP
 ISPLLIB = L_DFDSS L_ISP L_TSP1
 ISPPLIB = P_CUS3 P_DFDSS P_SDSF P_ISPF
 ISPMLIB = M_DFDSS M_ISPF
 ISPTLIB = T_DFDSS T_SDSF T_ISPF
 ISPSLIB = S_DFDSS S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@DNS)'
 JOBTRAC = 'NO'
END

/********************************/
/*  NETWORK USERS               */
/********************************/
IF (PROC = "NETWORK")
THEN DO
 SYSPROC = C_RAC1 C_CUS1 C_DFSRT C_DFDSS C_ISP2
 SYSEXEC = E_ISP
 ISPLLIB = L_DFSRT L_DFDSS L_TSP1 L_ISP
 ISPPLIB = P_CUS3 P_CUS7 P_DFSRT P_DFDSS P_SDSF
 ISPMLIB = M_DFSRT M_DFDSS M_ISPF
 ISPTLIB = T_DFSRT T_DFDSS T_SDSF T_ISPF
 ISPSLIB = S_DFSRT S_DFDSS S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@NET)'
 JOBTRAC = 'NO'
END

/********************************/
/*  CONTROL USERS               */
/********************************/
IF (PROC = "AUTOMATE")
THEN DO
 IF SYSNAME = 'PRDD' THEN
    SYSPROC = C_ISP2 C_CUS1 C_RAC1,
    C_SMPE C_IPCS C_HCD C_DFSRT C_DFDSS C_RMF C_ICQ,
    C_EDC C_BKM C_IOA3 C_IOA2 C_IOA1 C_HACC C_SDF C_OMVS C_CDCU
 ELSE
    SYSPROC = C_ISP2 C_CUS1 C_RAC1,
    C_SMPE C_IPCS C_HCD C_DFSRT C_DFDSS C_RMF C_ICQ,
    C_EDC C_BKM C_IOA1 C_IOA2 C_HACC C_SDF C_OMVS C_CDCU
 SYSEXEC = E_ISP
 IF SUBSTR(UID,1,4) = 'SYS0' THEN
    ISPLLIB = L_SMP L_HCD L_HSM L_DFSRT L_DFDSS L_CDCU L_DITTO L_DELP,
    L_TSP1 L_HACC1 L_HACC2 L_MAIN
 ELSE
    ISPLLIB = L_SMP L_HCD L_HSM L_DFSRT L_DFDSS L_CDCU L_DITTO L_DELP,
    L_TSP1 L_HACC1 L_HACC2 L_MAIN
 IF SYSNAME = 'PRDD' THEN
    ISPPLIB = P_SDSF P_LMF P_IOA2 P_IOA1 P_IOA P_CUS1 P_CUS3,
    P_ISPF P_SMP P_HSM P_HCD P_RMF3 P_OMVS P_DFSRT P_DFDSS,
    P_IPCS P_BKM P_DELP P_CDCU P_HACC P_ICQ
 ELSE
    ISPPLIB = P_DFDSS P_SDSF P_LMF P_IOA P_IOA1 P_CUS1,
    P_CUS3 P_ISPF P_SMP P_HSM P_HCD P_RMF3 P_OMVS P_DFSRT,
    P_IPCS P_BKM P_DELP P_CDCU P_HACC P_ICQ
 IF SYSNAME = 'PRDD' THEN
    ISPMLIB = M_ISPF M_SDSF M_SMP M_HSM M_HCD M_OMVS M_RMF3 M_DFSRT,
    M_DFDSS M_IPCS M_CUS1 M_C370 M_BKM M_DELP M_CDCU M_IOA3,
    M_IOA2 M_IOA1 M_HACC M_ICQ
 ELSE
    ISPMLIB = M_ISPF M_SDSF M_SMP M_HSM M_HCD M_OMVS M_RMF3 M_DFSRT,
    M_DFDSS M_IPCS M_CUS1 M_C370 M_BKM M_DELP M_CDCU,
    M_IOA1 M_IOA2 M_HACC M_ICQ
 IF SYSNAME = 'PRDD' THEN
    ISPTLIB = T_SDSF T_SMP T_HCD T_RMF3 T_OMVS T_DFSRT M_DFDSS,
    T_IPCS T_BKM T_DELP T_ICQ T_CDCU T_IOA2 T_IOA1 T_HACC,
    T_ISPF T_RAC1
 ELSE
    ISPTLIB = T_SDSF T_SMP T_HCD T_RMF3 T_OMVS T_DFSRT M_DFDSS,
    T_IPCS T_BKM T_DELP T_ICQ T_CDCU T_IOA1 T_IOA2 T_HACC,
    T_ISPF T_RAC1
 ISPSLIB = S_SMP S_IPCS S_DFSRT S_DFDSS S_ICQ S_CDCU,
    S_CUS1 S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@MVS)'
 JOBTRAC = 'YES'
END

/******************************/
/*  MEDIA USERS               */
/******************************/
IF (PROC = "MEDIA")
THEN DO
 IF SYSNAME = 'PRDD' THEN
    SYSPROC = C_RAC1 C_CUS1 C_OPS1 C_DFSRT,
    C_DFDSS C_BKM C_EDC C_IOA3 C_IOA2 C_IOA1 C_ISP2
 ELSE
    SYSPROC = C_RAC1 C_CUS1 C_OPS1 C_DFSRT,
    C_DFDSS C_BKM C_EDC C_IOA1 C_ISP2
 SYSEXEC = E_ISP
 ISPLLIB = L_DFSRT L_DFDSS L_TSP1
 IF SYSNAME = 'PRDD' THEN
    ISPPLIB = P_SDSF P_CUS5 P_CUS3 P_CUS1,
    P_DFSRT P_DFDSS P_BKM P_IOA2 P_IOA P_IOA1
 ELSE
    ISPPLIB = P_SDSF P_CUS5 P_CUS3 P_CUS1,
    P_DFSRT P_DFDSS P_BKM P_IOA P_IOA1
 IF SYSNAME = 'PRDD' THEN
    ISPMLIB = M_DFSRT M_DFDSS M_BKM M_IOA3 M_IOA2 M_ISPF
 ELSE
    ISPMLIB = M_DFSRT M_DFDSS M_BKM M_IOA1 M_ISPF
 IF SYSNAME = 'PRDD' THEN
    ISPTLIB = T_DFSRT T_DFDSS T_BKM T_IOA2 T_SDSF T_ISPF
 ELSE
    ISPTLIB = T_DFSRT T_DFDSS T_BKM T_IOA1 T_SDSF T_ISPF
 ISPSLIB = S_DFSRT S_DFDSS S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@MED)'
 JOBTRAC = 'NO'
END

/*********************************/
/*  ADMINISTRATOR                */
/*********************************/
IF (PROC = "DIENADMN") |,
   (PROC = "NETADMN") |,
   (PROC = "OPERADMN") |,
   (PROC = "MEDADMN") |,
   (PROC = "PROGADMN")
THEN DO
 SYSPROC = C_RAC1
 SYSEXEC = E_ISP
 ISPLLIB = L_ISP
 ISPPLIB = P_CUS3 P_SDSF
 ISPMLIB = M_RAC1
 ISPTLIB = T_RAC1 T_SDSF
 ISPSLIB = S_RAC1
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@ADMN)'
 JOBTRAC = 'NO'
END

/*********************************/
/*  VEILIGHEID ADMINISTRATOR     */
/*********************************/
IF (PROC = "SPFTHE")
THEN DO
 SYSPROC = C_RAC1 C_ISP2
 SYSEXEC = E_ISP
 ISPLLIB = L_ISP L_TSP1
 ISPPLIB = P_CUS3 P_DFDSS P_SDSF P_ISPF
 ISPMLIB = M_RAC1 M_RACF M_DFDSS M_ISPF
 ISPTLIB = T_RAC1 T_DFDSS T_SDSF
 ISPSLIB = S_RAC1 S_ISP2 S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@THE)'
 JOBTRAC = 'NO'
END

/*******************************/
/*  POLFIN USERS               */
/*******************************/
IF (PROC = "SPFPOL") THEN
DO
 SYSPROC = C_RAC1 C_ISP2
 SYSEXEC = E_ISP
 ISPLLIB = L_TSP1
 ISPPLIB = P_CUS3 P_SDSF P_ISPF
 ISPMLIB = M_ISPF
 ISPTLIB = T_SDSF T_ISPF
 ISPSLIB = S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@POL)'
 JOBTRAC = 'NO'
END

/****************************/
/*  KRS USERS               */
/****************************/
IF (PROC = "SPFKRI") THEN
DO
 SYSPROC = C_RAC1 C_ISP2
 SYSEXEC = E_ISP
 ISPLLIB = L_ISP L_TSP1
 ISPPLIB = P_CUS3 P_DFDSS P_SDSF P_ISPF
 ISPMLIB = M_RAC1 M_RACF M_DFDSS M_ISPF
 ISPTLIB = T_RAC1 T_DFDSS T_SDSF T_ISPF
 ISPSLIB = S_RAC1 S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@KRI)'
 JOBTRAC = 'NO'
END

/*********************************/
/*  READY PROMPT USERS           */
/*********************************/
IF (PROC = "READY") |,
   (PROC = "PDF") THEN
DO
 SYSPROC = C_RAC1
 SYSEXEC = E_ISP
 ISPLLIB = L_ISP
 ISPPLIB = P_CUS3
 ISPMLIB = M_ISPF
 ISPTLIB = T_ISPF
 ISPSLIB = S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL()'
 JOBTRAC = 'NO'
END

/*********************************/
/*  COMPLETE ADMINISTRATORS      */
/*********************************/
IF (PROC = "COMADMN") THEN
DO
 SYSPROC = C_RAC1 C_ISP2
 SYSEXEC = E_ISP
 ISPLLIB = L_ISP
 ISPPLIB = P_CUS3 P_SDSF
 ISPMLIB = M_RAC1 M_RACF
 ISPTLIB = T_RAC1 T_SDSF
 ISPSLIB = S_RAC1
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@COMA)'
 JOBTRAC = 'NO'
END

/*********************************/
/*  COMPLETE ADMINISTRATORS      */
/*********************************/
IF (PROC = "COMRESU") THEN
DO
 SYSPROC = C_RAC1 C_ISP2
 SYSEXEC = E_ISP
 ISPLLIB = L_ISP
 ISPPLIB = P_CUS3 P_SDSF
 ISPMLIB = M_RAC1 M_RACF
 ISPTLIB = T_RAC1 T_SDSF
 ISPSLIB = S_RAC1
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@COMR)'
 JOBTRAC = 'NO'
END

/*********************************/
/*  CONTROL-D USERS              */
/*********************************/
IF (PROC = "SPFCTD")
THEN DO
 IF SYSNAME = 'PRDD' THEN
 SYSPROC = C_RAC1 C_IOA3 C_IOA1
 else
 SYSPROC = C_RAC1 C_IOA3 C_IOA1
 SYSEXEC = E_ISP
 ISPLLIB = L_ISP
 ISPPLIB = P_CUS3 P_SDSF P_ISPF P_IOA2 P_IOA
 ISPMLIB = M_IOA3 M_IOA1 M_ISPF
 ISPTLIB = T_IOA1 T_SDSF T_ISPF
 ISPSLIB = S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@CTD)'
 JOBTRAC = 'NO'
END

/***********************************/
/** CHECK FOR UNKNOWN PROC        **/
/***********************************/
IF ISPPLIB = "ISPPLIB" THEN
DO
 SAY ' '
 SAY ' '
 SAY 'YOUR LOGON PROCEDURE IS UNKNOWN TO TSO'
 SAY 'PLEASE VERIFY THAT YOUR LOGON PROCEDURE IS CORRECT'
 SAY ' '
 SAY 'OR CALL YOUR HELPDESK FOR HELP'
 EXIT 12
END

/***********************************/
/** JOBTRAC ADDITIONAL ALLOCATIONS */
/***********************************/
IF JOBTRAC = 'YES' THEN
DO
 "FREE FI(SMPTABL,ISRCFIL,CISTABL)"
 "FREE FI(ICQAATAB)"
 "FREE FI(ICQABTAB)"
 "FREE FI(ICQANTAB)"
 "FREE FI(ICQAPTAB)"
 "FREE FI(ICQAMTAB)"
 "FREE FI(ICQCMTAB)"
 "FREE FI(DVDMSL)"
 "FREE FI(DVDMSLT)"
 "FREE FI(DVDMSLP)"
 "FREE FI(DVDITF)"
 "FREE FI(DVDTML)"
 X=MSG('ON');
B4 = '"ALLOC FI(SMPTABL) SHR DA('||DSNAME||')"'
INTERPRET B4
 "ALLOC FI(ICQAATAB) SHR DA(ICQ.ICQAATAB)"
 "ALLOC FI(ICQABTAB) SHR DA(ICQ.ICQABTAB)"
 "ALLOC FI(ICQANTAB) SHR DA(ICQ.ICQANTAB)"
 "ALLOC FI(ICQAPTAB) SHR DA(ICQ.ICQAPTAB)"
 "ALLOC FI(ICQAMTAB) SHR DA(ICQ.ICQAMTAB)"
 "ALLOC FI(ICQCMTAB) SHR DA(ICQ.ICQCMTAB)"
 "ALLOC FI(ISRCFIL) SHR DA(SYSA.SPF.CFIL)"
 "ALLOC FI(CISTABL) SHR DA(SYS2.CIDTABL)"
/*  "ALLOC FI(DVDMSL) SHR DA(SDF150.MSL)"      */
/*  "ALLOC FI(DVDMSLP) SHR DA(SDF150.MSLP)"    */
/*  "ALLOC FI(DVDMSLT) SHR DA(SDF150.MSLT)"    */
/*  "ALLOC FI(DVDTML) SHR DA(SDF150.TML)"      */
/*  "ALLOC FI(DVDITF) SHR DA(SDF150.ITF)"      */

 X=MSG('OFF');
END

IF JOBTRAC1 = 'YES' THEN
DO
 "FREE FI(ISRCFIL)"
 "FREE FI(DVDMSL)"
 "FREE FI(DVDMSLT)"
 "FREE FI(DVDMSLP)"
 "FREE FI(DVDITF)"
 "FREE FI(DVDTML)"
 X=MSG('ON');
 "ALLOC FI(ISRCFIL) SHR DA(SYSA.SPF.CFIL)"

 X=MSG('OFF');
END

IF JOBTRAC2 = 'YES' THEN
DO
 "FREE FI(SMPTABL)"
 "FREE FI(CISTABL)"
 X=MSG('ON');
 "ALLOC FI(CISTABL) SHR DA(SYS2.CIDTABL)"
B4 = '"ALLOC FI(SMPTABL) SHR DA('||DSNAME||')"'
INTERPRET B4

 X=MSG('OFF');
END
/******************************/
/** STANDARD ISPF ALLOCTIONS **/
/******************************/
"FREE FI(SYSPROC,SYSEXEC,ISPLLIB,ISPPLIB,ISPMLIB,ISPSLIB,ISPTLIB)"
"FREE FI(HASPINDX)"

X = MSG('ON')
"ALLOC FI(SYSPROC) DA("SYSPROC") SHR"
"ALLOC FI(SYSEXEC) DA("SYSEXEC") SHR"
"ALLOC FI(ISPLLIB) DA("ISPLLIB") SHR"
"ALLOC FI(ISPPLIB) DA("ISPPLIB") SHR"
"ALLOC FI(ISPMLIB) DA("ISPMLIB") SHR"
"ALLOC FI(ISPTLIB) DA("ISPTLIB") SHR"
"ALLOC FI(ISPSLIB) DA("ISPSLIB") SHR"
"ALLOC FI(HASPINDX) DA("HASPINDX") SHR"
X = MSG('ON')

"EXECUTIL SEARCHDD(YES)"
SIGNAL NO_COMMENT
/*
   THE ABOVE SIGNAL PREVENT INTERPRETATION OF LONG LINES OF COMMENTS,
   SINCE IT BRANCHES AROUND THEM ALL
*/
/*--------------------------------------------------------------------+
 | IF THE USER HAS A DDIR, THEN ALLOC ALL FILES REQUIRED BY IPCS,     |
 |           THEN CALL IPCS.                                          |
 | SINCE IPCS DOES NOT SEEM TO RECOGNIZE REXX COMMANDS, WE PULL A     |
 |           JIPPO BY QUEUEING THE COMMAND 'PDF PANEL(XXXXXXXX)'      |
 |           BEFORE CALLING IPCS.  THIS WAY,  SINCE IPCS DOES NOT     |
 |           SEE ANY MORE CMDS IN THE EXEC (CLIST), IT PULL WHAT      |
 |           WAS IN THE COMMAND STACK.                                |
 +--------------------------------------------------------------------*/
NO_COMMENT:

Call USER_PROFILE

ddir = "'"userid()".D"sid"0.DDIR'"
RC = LISTDSI(DDIR)
If rc > 4 then do        /* Check for the old one */
   DDIR = "'"||UID||".DDIR'"
   rc = listdsi(ddir)
   end
IF RC > 4 THEN
   "PDF" PNL
ELSE DO
   X = OUTTRAP(ON)
   "VFY DS("DDIR")"
   X = OUTTRAP(X)
   "ALLOC FI(IPCSDDIR) DA("DDIR") SHR"
   "ALLOC FI(IPCSPARM) DA('SYS2.PARMLIB') SHR"
   "ALLOC FI(IPCSPRNT) SYS(X) HOLD"
   QUEUE 'PDF' PNL
   "IPCS PARM(01)"
END

Exit 0  /*-------------------------------------------------------*/

USER_PROFILE:

user_prof = "'"userid()".A0.TSPROF(PROF000)'"
If sysdsn(user_prof) = 'OK' then do
   Say 'Executing' user_prof
   'EXEC' user_prof 'EXEC'
   end

Return
./ ADD NAME=ISPKHHB  0101-01016-01016-1428-00689-00689-00000-RACFCLS
/* ****************************Rexx**********************************/
/* SAPD SHARED LOGON PROC */

"PROFILE NOPREF MODE WTPMSG MSGID"
X = MSG('OFF')
UID = SYSVAR(SYSUID)
PROC = SYSVAR(SYSPROC)
GETSYSN
IF RC = 0 THEN SYSNAME=BIGERROR
IF RC = 1 THEN SYSNAME=PRDA
IF RC = 2 THEN SYSNAME=PRDB
IF RC = 3 THEN SYSNAME=PRDC
IF RC = 4 THEN SYSNAME=PRDD
IF RC = 5 THEN SYSNAME=PRDE
IF RC = 6 THEN SYSNAME=TSTF
IF RC = 7 THEN SYSNAME=TSTG
IF RC = 8 THEN SYSNAME=TST1
SHRNAME = SYSNAME
IF RC = 4 THEN SHRNAME=PRDE
IF RC = 7 THEN SHRNAME=PRDE
IF RC = 8 THEN SHRNAME=PRDE

SAY 'HAVE A NICE DAY !!!'
SAY 'BUSY ALLOCATING FILES, PLEASE WAIT .....'
SAY ''
MURPHY

/*****************************************/
/* ALLOC ISPFPROF                        */
/*****************************************/
DSNAME = "'"UID"."SYSNAME".ISPF.ISPPROF'"
"FREE FI(ISPPROF)"
RC = LISTDSI(DSNAME)
IF RC > 4 THEN
DO
 X = MSG('ON')
 "FREE FI(ISPCRTE)"
 "ATTRIB ISPCRTE DSORG(PO) RECFM(F B) LRECL(80) BLKSIZE(18400)"
 A1='"ALLOC DA(' || DSNAME || ') SP(10,1) TRACKS DIR(10)',
 || 'USING(ISPCRTE) FI(ISPPROF)"'
 SAY A1
 INTERPRET A1
 IF RC = 0 THEN
  SAY  "ISPF PROFILE DATA SET" DSNAME "HAS BEEN CREATED"
 ELSE
 DO
   SAY  "UNABLE TO ALLOCATE ISPF PROFILE DATA SET" DSNAME
   "FREE FI(ISPCRTE)"
   EXIT 12
 END
 "FREE FI(ISPCRTE)"
END
A1 = '"ALLOC FI(ISPPROF) SHR DA('||DSNAME||')"'
A2 = '"ALLOC FI(ISPTABL) SHR DA('||DSNAME||')"'
A3 = '"ALLOC FI(ISPTLIB) SHR DA('||DSNAME||')"'
INTERPRET A1
INTERPRET A2
INTERPRET A3

/********************************/
/* SPECIFY DATASETS FOR SYSEXEC */
/********************************/
E_ISP = 'ISP.V4R2M0.SISPEXEC'

/********************************/
/* SPECIFY DATASETS FOR SYSPROC */
/********************************/
C_ISP2 = 'ISP.V4R2M0.SISPCLIB'
C_RAC3 = 'SYS1.HRFCLST'
C_CUS1 = 'SYS2.CMDPROC'
C_CUS2 = "'SYS2."SHRNAME".CMDPROC'"
C_CUS3 = 'SYS2.PRDC.CMDPROC'
C_OPS1 = 'OPS.CMDPROC'
C_OPS2 = "'OPS."SHRNAME".CMDPROC'"
C_RAC1 = 'SYS2.RACFCLST'
C_RAC2 = "'SYS2."SHRNAME".RACFCLST'"
C_SMPE = 'GIM.SGIMCLS0'
C_IPCS = 'SYS1.SBLSCLI0'
C_HCD  = 'SYS1.SCBDCLST'
C_DFSRT = 'SYS1.ICEISPC'
C_DFDSS = 'SYS1.DGTCLIB'
C_RMF  = 'SYS1.SERBCLS'
C_ICQ  = 'ICQ.ICQCCLIB'
C_EDC  = 'EDC.V2R2M0.SEDCLIST'
C_BKM  = 'EOY.SEOYCLIB'
C_IOA1 = "'SYS3."SHRNAME".IOAIV410.CLIST'"
C_IOA2 = 'SYS3.IOA.CLIST'
C_IOA3 = 'SYS3.IOA500.CLIST'
C_HACC = 'SYS3.ZHC240.ISPCLIB'
C_SDF  = 'SDF2.V1R4M0.SDGICMD'
C_OMVS = 'SYS1.SBPXEXEC'
C_CDCU = 'CDCU.DCZDEXE'

/********************************/
/* SPECIFY DATASETS FOR ISPLLIB */
/********************************/
L_SMP  = 'GIM.SGIMLMD0'
L_HCD  = 'SYS1.SCBDHENU'
L_HSM = 'SYS1.DFQLLIB'
L_DFSRT = 'SYS1.ICEISPL'
L_DFDSS = 'SYS1.DGTLLIB'
L_CDCU  = 'CDCU.DCZDLOD'
L_DITTO = 'DIT.V1R1M0.SDITLOAD'
L_DELP = 'DELPHI.V221.CMDLOAD'
L_TSP1 = 'SYS2.TSPRINT.APFLIB'
L_HACC1 = 'SYS3.ZHC240.ISPLOAD'
L_HACC2 = 'SYS3.ZHC240.LOAD'
/* L_SDF = 'SDF150.SDFLOAD' */
L_ISP = 'ISP.V4R2M0.SISPLOAD'

/********************************/
/* SPECIFY DATASETS FOR ISPPLIB */
/********************************/
P_SDSF = 'ISF.V1R5M0.SISFPLIB'
P_IOA = "'SYS3."SHRNAME".IOAIV410.PANEL'"
P_IOA1 = 'SYS3.IOA.PANEL'
P_IOA2 = 'SYS3.IOA500.PANEL'
P_CUS1 = 'SYS2.ISPPLIB'
P_CUS2 = "'SYS2."SHRNAME".ISPPLIB'"
P_ISPF = 'ISP.V4R2M0.SISPPENU'
P_CUS3 = 'SYS2.RACFPANL'
P_CUS4 = "'SYS2."SHRNAME".RACFPANL'"
P_CUS5 = 'SYS2.ISP.OPSPENU'
P_CUS6 = 'SYS2.ISP.PRGPENU'
P_CUS7 = 'SYS2.ISP.NETPENU'
P_SMP = 'GIM.SGIMPENU'
P_HSM = 'SYS1.DFQPLIB'
P_HCD = 'SYS1.SCBDPENU'
P_RMF3 = 'SYS1.SERBPENU'
P_OMVS = 'SYS1.SBPXPENU'
P_DFSRT = 'SYS1.ICEISPP'
P_DFDSS = 'SYS1.DGTPLIB'
P_RACF  = 'SYS1.HRFPANL'
P_IPCS = 'SYS1.SBLSPNL0'
P_BKM = 'EOY.SEOYPENU'
P_DELP = 'DELPHI.V221.PLIB'
P_CDCU = 'CDCU.DCZDPLB'
P_HACC = 'SYS3.ZHC240.ISPPLIB'
P_ICQ = 'ICQ.ICQPLIB'
P_LMF = 'SYS2.LMF.PLIB'
P_MAIN = 'MAINT.LIVE.PLIB'

/********************************/
/* SPECIFY DATASETS FOR ISPMLIB */
/********************************/
M_ISPF = 'ISP.V4R2M0.SISPMENU'
M_SDSF = 'ISF.V1R5M0.SISFMLIB'
M_SMP  = 'GIM.SGIMMENU'
M_HSM = 'SYS1.DFQMLIB'
M_HCD = 'SYS1.SCBDMENU'
M_OMVS = 'SYS1.SBPXMENU'
M_RMF3 = 'SYS1.SERBMENU'
M_DFSRT = 'SYS1.ICEISPM'
M_DFDSS = 'SYS1.DGTMLIB'
M_RACF = 'SYS1.HRFMSG'
M_IPCS = 'SYS1.SBLSMSG0'
M_CUS1 = 'SYS2.ISPMENU'
M_C370 = 'EDC.V2R2M0.SEDCMSGP'
M_BKM = 'EOY.SEOYMENU'
M_DELP = 'DELPHI.V221.MLIB'
M_CDCU = 'CDCU.DCZDMLB'
M_IOA1 = "'SYS3."SHRNAME".IOAIV410.ISMSG'"
M_IOA2 = 'SYS3.IOA.ISMSG'
M_IOA3 = 'SYS3.IOA500.ISMSG'
M_HACC = 'SYS3.ZHC240.ISPMLIB'
M_ICQ = 'ICQ.ICQMLIB'
M_MAIN = 'MAINT.LIVE.MLIB'
M_RAC1 = 'SYS2.RACFMENU'

/********************************/
/* SPECIFY DATASETS FOR ISPTLIB */
/********************************/
T_SDSF = 'ISF.V1R5M0.SISFTLIB'
T_SMP  = 'GIM.SGIMTENU' DSNAME
T_HCD  = 'SYS1.SCBDTENU'
T_RMF3 = 'SYS1.SERBTENU'
T_OMVS = 'SYS1.SBPXTENU'
T_DFSRT = 'SYS1.ICEISPT'
T_DFDSS = 'SYS1.DGTTLIB'
T_IPCS  = 'SYS1.SBLSTBL0'
T_BKM  = 'EOY.SEOYTENU'
T_DELP = 'DELPHI.V221.CMDTAB'
T_ICQ = 'ICQ.ICQTLIB'
T_CDCU  = 'CDCU.DCZDTLB'
T_IOA1  = "'SYS3."||SHRNAME||".IOAIV410.TLIB'"
T_IOA2  = 'SYS3.IOA.TLIB'
T_HACC  = 'SYS3.ZHC240.ISPTLIB'
T_ISPF  = 'ISP.V4R2M0.SISPTENU'
T_RAC1  = 'SYS2.RACFTABL'

/********************************/
/* SPECIFY DATASETS FOR ISPSLIB */
/********************************/
S_SMP  = 'GIM.SGIMSENU'
S_IPCS = 'SYS1.SBLSKEL0'
S_DFSRT = 'SYS1.ICEISPS'
S_DFDSS = 'SYS1.DGTSLIB'
S_RACF = 'SYS1.HRFSKEL'
S_ICQ  = 'ICQ.ICQSLIB'
S_CDCU = 'CDCU.DCZDSLB'
S_CUS1 = 'MAINT.LIVE.SLIB'
S_ISPF = 'ISP.V4R2M0.SISPSLIB'
S_ISP2 = 'ISP.V4R2M0.SISPSENU'
S_RAC1 = 'SYS2.RACFSLIB'

/*******************************/
/* SPECIFY DATASETS FOR SYSLOG */
/*******************************/
H_ISF  = "'SYS0."SYSNAME".HASPINDX'"

/*********************************/
/*  SYSTEMS USERS                */
/*********************************/
IF (PROC = "SPFBOOL") THEN
DO
 IF SYSNAME = 'PRDD' THEN
    SYSPROC = C_ISP2 C_RAC3 C_CUS1 C_RAC1,
    C_SMPE C_IPCS C_HCD C_DFSRT C_DFDSS C_RMF C_ICQ,
    C_EDC C_BKM C_IOA3 C_IOA2 C_IOA1 C_HACC C_SDF C_OMVS C_CDCU
 ELSE
    SYSPROC = C_ISP2 C_RAC3 C_CUS1 C_RAC1,
    C_SMPE C_IPCS C_HCD C_DFSRT C_DFDSS C_RMF C_ICQ,
    C_EDC C_BKM C_IOA1 C_IOA2 C_HACC C_SDF C_OMVS C_CDCU
 SYSEXEC = E_ISP
 IF SUBSTR(UID,1,4) = 'SYS0' THEN
    ISPLLIB = L_SMP L_HCD L_HSM L_DFSRT L_DFDSS L_CDCU L_DITTO L_DELP,
    L_TSP1 L_HACC1 L_HACC2
 ELSE
    ISPLLIB = L_SMP L_HCD L_HSM L_DFSRT L_DFDSS L_CDCU L_DITTO L_DELP,
    L_TSP1 L_HACC1 L_HACC2
 IF SYSNAME = 'PRDD' THEN
    ISPPLIB = P_SDSF P_LMF P_IOA2 P_IOA1 P_IOA P_CUS1 P_CUS3,
    P_ISPF P_SMP P_HSM P_HCD P_RMF3 P_OMVS P_DFSRT P_DFDSS,
    P_RACF P_IPCS P_BKM P_DELP P_CDCU P_HACC P_ICQ
 ELSE
    ISPPLIB = P_DFDSS P_SDSF P_LMF P_IOA P_IOA1 P_CUS1,
    P_CUS3 P_ISPF P_SMP P_HSM P_HCD P_RMF3 P_OMVS P_DFSRT,
    P_RACF P_IPCS P_BKM P_DELP P_CDCU P_HACC P_ICQ
 IF SYSNAME = 'PRDD' THEN
    ISPMLIB = M_ISPF M_SDSF M_SMP M_HSM M_HCD M_OMVS M_RMF3 M_DFSRT,
    M_DFDSS M_RACF M_IPCS M_CUS1 M_C370 M_BKM M_DELP M_CDCU M_IOA3,
    M_IOA2 M_IOA1 M_HACC M_ICQ
 ELSE
    ISPMLIB = M_ISPF M_SDSF M_SMP M_HSM M_HCD M_OMVS M_RMF3 M_DFSRT,
    M_DFDSS M_RACF M_IPCS M_CUS1 M_C370 M_BKM M_DELP M_CDCU,
    M_IOA1 M_IOA2 M_HACC M_ICQ
 IF SYSNAME = 'PRDD' THEN
    ISPTLIB = T_SDSF T_SMP T_HCD T_RMF3 T_OMVS T_DFSRT M_DFDSS,
    T_IPCS T_BKM T_DELP T_ICQ T_CDCU T_IOA2 T_IOA1 T_HACC,
    T_ISPF T_RAC1
 ELSE
    ISPTLIB = T_SDSF T_SMP T_HCD T_RMF3 T_OMVS T_DFSRT M_DFDSS,
    T_IPCS T_BKM T_DELP T_ICQ T_CDCU T_IOA1 T_IOA2 T_HACC,
    T_ISPF T_RAC1
 ISPSLIB = S_SMP S_IPCS S_DFSRT S_DFDSS S_RACF S_ICQ S_CDCU,
    S_CUS1 S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@BOOL)'
 JOBTRAC = 'YES'
END

/*********************************/
/*  PROGRAMMERS                  */
/*********************************/
IF PROC = "PROGRAMR" THEN
DO
 SYSPROC = C_RAC1 C_CUS1 C_CUS3 C_ISP2,
 C_DFSRT C_DFDSS C_SDF C_EDC C_BKM C_IOA1
 SYSEXEC = E_ISP
 ISPLLIB = L_DFSRT L_DFDSS L_DELP,
 L_TSP1
 ISPPLIB = P_LMF P_CUS6 P_CUS3 P_MAIN P_DFSRT P_DFDSS,
 P_SDSF P_DELP P_IOA P_BKM
 ISPMLIB = M_MAIN M_ISPF M_DFSRT M_DFDSS M_DELP M_C370 M_BKM,
 M_IOA1 M_SDSF
 ISPTLIB = T_DFSRT T_DFDSS T_SDSF T_DELP T_BKM T_IOA1 T_ISPF
 ISPSLIB = S_CUS1 S_DFSRT S_DFDSS S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@PRG)'
 JOBTRAC1 = 'YES'
END

/**********************************/
/*  OPERATORS USERS               */
/**********************************/
IF (PROC = "OPERATOR")
THEN DO
 IF SYSNAME = 'PRDD' THEN
    SYSPROC = C_ISP2 C_RAC1 C_CUS1 C_DFSRT C_DFDSS,
    C_RMF C_EDC C_BKM C_IOA3 C_IOA1
 ELSE
    SYSPROC = C_ISP2 C_RAC1 C_CUS1 C_DFSRT C_DFDSS,
    C_RMF C_EDC C_BKM C_IOA1
 SYSEXEC = E_ISP
 IF SYSNAME = 'PRDD' THEN
    ISPLLIB = L_DFSRT L_DFDSS L_TSP1
 ELSE
    ISPLLIB = L_DFSRT L_DFDSS L_TSP1
 IF SYSNAME = 'PRDD' THEN
    ISPPLIB = P_SDSF P_CUS3 P_CUS5 P_IOA2 P_IOA P_RMF3 P_DFSRT,
    P_DFDSS P_BKM
 ELSE
    ISPPLIB = P_SDSF P_CUS3 P_CUS5 P_IOA P_RMF3 P_DFSRT,
    P_DFDSS P_BKM
 ISPMLIB = M_ISPF M_SDSF M_RMF3 M_DFSRT M_DFDSS M_C370 M_BKM,
    M_IOA1
 ISPTLIB = T_SDSF T_RMF3 T_DFSRT T_DFDSS T_BKM T_IOA1 T_ISPF
 ISPSLIB = S_DFSRT S_DFDSS S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@OPS)'
 JOBTRAC = 'NO'
END

/*********************************/
/*  DIENS KONTROLE               */
/*********************************/
IF (PROC = "DIENSKRL")
THEN DO
 SYSPROC = C_RAC1 C_ISP2 C_DFDSS
 SYSEXEC = E_ISP
 ISPLLIB = L_DFDSS L_ISP L_TSP1
 ISPPLIB = P_CUS3 P_DFDSS P_SDSF P_ISPF
 ISPMLIB = M_DFDSS M_ISPF
 ISPTLIB = T_DFDSS T_SDSF T_ISPF
 ISPSLIB = S_DFDSS S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@DNS)'
 JOBTRAC = 'NO'
END

/********************************/
/*  NETWORK USERS               */
/********************************/
IF (PROC = "NETWORK")
THEN DO
 SYSPROC = C_RAC1 C_CUS1 C_DFSRT C_DFDSS C_ISP2
 SYSEXEC = E_ISP
 ISPLLIB = L_DFSRT L_DFDSS L_TSP1 L_ISP
 ISPPLIB = P_CUS3 P_CUS7 P_DFSRT P_DFDSS P_SDSF
 ISPMLIB = M_DFSRT M_DFDSS M_ISPF
 ISPTLIB = T_DFSRT T_DFDSS T_SDSF T_ISPF
 ISPSLIB = S_DFSRT S_DFDSS S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@NET)'
 JOBTRAC = 'NO'
END

/********************************/
/*  CONTROL USERS               */
/********************************/
IF (PROC = "AUTOMATE")
THEN DO
 IF SYSNAME = 'PRDD' THEN
    SYSPROC = C_RAC1 C_CUS1 C_OPS1 C_DFSRT,
    C_DFDSS C_BKM C_EDC C_IOA3 C_IOA2 C_IOA1 C_SMPE
 ELSE
    SYSPROC = C_RAC1 C_CUS1 C_OPS1 C_DFSRT,
    C_DFDSS C_BKM C_EDC C_IOA1 C_SMPE
 SYSEXEC = E_ISP
 ISPLLIB = L_DFSRT L_DFDSS L_TSP1 L_SMP
 IF SYSNAME = 'PRDD' THEN
    ISPPLIB = P_SDSF P_ISPF P_CUS3 P_CUS1,
    P_DFSRT P_DFDSS P_BKM P_IOA2 P_IOA P_IOA1 P_SMP
 ELSE
    ISPPLIB = P_SDSF P_ISPF P_CUS3 P_CUS1,
    P_DFSRT P_DFDSS P_BKM P_IOA P_IOA1 P_SMP
 IF SYSNAME = 'PRDD' THEN
    ISPMLIB = M_DFSRT M_DFDSS M_BKM M_IOA3 M_IOA2 M_ISPF M_SMP
 ELSE
    ISPMLIB = M_DFSRT M_DFDSS M_BKM M_IOA1 M_ISPF M_SMP
 IF SYSNAME = 'PRDD' THEN
    ISPTLIB = T_DFSRT T_DFDSS T_BKM T_IOA2 T_SDSF T_ISPF T_SMP
 ELSE
    ISPTLIB = T_DFSRT T_DFDSS T_BKM T_IOA1 T_SDSF T_ISPF T_SMP
 ISPSLIB = S_DFSRT S_DFDSS S_ISPF S_SMP
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@AUT)'
 JOBTRAC2 = 'YES'
END

/******************************/
/*  MEDIA USERS               */
/******************************/
IF (PROC = "MEDIA")
THEN DO
 SYSPROC = C_RAC1 C_CUS1 C_ISP2 C_DFSRT,
 C_IOA3 C_IOA1 C_BKM
 SYSEXEC = E_ISP
 ISPLLIB = L_DFSRT
 ISPPLIB = P_CUS3 P_DFSRT P_SDSF P_IOA2 P_IOA P_CUS5 P_BKM
 ISPMLIB = M_DFSRT M_IOA3 M_IOA1 M_ISPF M_BKM
 ISPTLIB = T_DFSRT T_SDSF T_IOA1 T_ISPF T_BKM
 ISPSLIB = S_DFSRT S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@MED)'
 JOBTRAC = 'NO'
END

/*********************************/
/*  ADMINISTRATOR                */
/*********************************/
IF (PROC = "DIENADMN") |,
   (PROC = "NETADMN") |,
   (PROC = "OPERADMN") |,
   (PROC = "MEDADMN") |,
   (PROC = "PROGADMN")
THEN DO
 SYSPROC = C_RAC1
 SYSEXEC = E_ISP
 ISPLLIB = L_ISP
 ISPPLIB = P_CUS3 P_SDSF
 ISPMLIB = M_RAC1
 ISPTLIB = T_RAC1 T_SDSF
 ISPSLIB = S_RAC1
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@ADMN)'
 JOBTRAC = 'NO'
END

/*********************************/
/*  VEILIGHEID ADMINISTRATOR     */
/*********************************/
IF (PROC = "SPFTHE") THEN
DO
 SYSPROC = C_RAC1 C_ISP2
 SYSEXEC = E_ISP
 ISPLLIB = L_ISP L_TSP1
 ISPPLIB = P_CUS3 P_DFDSS P_SDSF P_ISPF
 ISPMLIB = M_RAC1 M_RACF M_DFDSS M_ISPF
 ISPTLIB = T_RAC1 T_DFDSS T_SDSF
 ISPSLIB = S_RAC1 S_ISP2 S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@THE)'
 JOBTRAC = 'NO'
END

/*****************************/
/*  UNIX USERS               */
/*****************************/
IF (PROC = "UNIXUSER") THEN
DO
 SYSPROC = C_RAC1 C_CUS1 C_CUS3 C_ISP2,
 C_DFSRT C_DFDSS C_SDF C_EDC C_BKM C_IOA1
 SYSEXEC = E_ISP
 ISPLLIB = L_DFSRT L_DFDSS L_DELP L_TSP1
 ISPPLIB = P_LMF P_CUS6 P_CUS3 P_MAIN P_DFSRT P_DFDSS,
 P_SDSF P_DELP P_IOA P_BKM
 ISPMLIB = M_MAIN M_ISPF M_DFSRT M_DFDSS M_DELP M_C370 M_BKM,
 M_IOA1 M_SDSF
 ISPTLIB = T_DFSRT T_DFDSS T_SDSF T_DELP T_BKM T_IOA1 T_ISPF
 ISPSLIB = S_CUS1 S_DFSRT S_DFDSS S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@PRG)'
 JOBTRAC1 = 'YES'
END

/*******************************/
/*  POLFIN USERS               */
/*******************************/
IF (PROC = "SPFPOL") THEN
DO
 SYSPROC = C_RAC1 C_ISP2
 SYSEXEC = E_ISP
 ISPLLIB = L_TSP1
 ISPPLIB = P_CUS3 P_SDSF P_ISPF
 ISPMLIB = M_ISPF
 ISPTLIB = T_SDSF T_ISPF
 ISPSLIB = S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@POL)'
 JOBTRAC = 'NO'
END

/****************************/
/*  KRS USERS               */
/****************************/
IF (PROC = "SPFKRI") THEN
DO
 SYSPROC = C_RAC1 C_ISP2
 SYSEXEC = E_ISP
 ISPLLIB = L_ISP L_TSP1
 ISPPLIB = P_CUS3 P_DFDSS P_SDSF P_ISPF
 ISPMLIB = M_RAC1 M_RACF M_DFDSS M_ISPF
 ISPTLIB = T_RAC1 T_DFDSS T_SDSF T_ISPF
 ISPSLIB = S_RAC1 S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@KRI)'
 JOBTRAC = 'NO'
END

/*********************************/
/*  READY PROMPT USERS           */
/*********************************/
IF (PROC = "READY") |,
   (PROC = "SPFTSO") THEN
DO
 SYSPROC = C_RAC1
 SYSEXEC = E_ISP
 ISPLLIB = L_ISP
 ISPPLIB = P_CUS3
 ISPMLIB = M_ISPF
 ISPTLIB = T_ISPF
 ISPSLIB = S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL()'
 JOBTRAC = 'NO'
END

/*********************************/
/*  COMPLETE ADMINISTRATORS      */
/*********************************/
IF (PROC = "COMADMN") THEN
DO
 SYSPROC = C_RAC1 C_ISP2
 SYSEXEC = E_ISP
 ISPLLIB = L_ISP
 ISPPLIB = P_CUS3 P_SDSF
 ISPMLIB = M_RAC1 M_RACF
 ISPTLIB = T_RAC1 T_SDSF
 ISPSLIB = S_RAC1
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@COMA)'
 JOBTRAC = 'NO'
END

/*********************************/
/*  CONTROL-D USERS              */
/*********************************/
IF (PROC = "SPFCTD") THEN
DO
 SYSPROC = C_RAC1 C_IOA3 C_IOA1
 SYSEXEC = E_ISP
 ISPLLIB = L_ISP
 ISPPLIB = P_CUS3 P_SDSF P_ISPF P_IOA2 P_IOA
 ISPMLIB = M_IOA3 M_IOA1 M_ISPF
 ISPTLIB = T_IOA1 T_SDSF T_ISPF
 ISPSLIB = S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@CTD)'
 JOBTRAC = 'NO'
END

/***********************************/
/** CHECK FOR UNKNOWN PROC        **/
/***********************************/
IF ISPPLIB = "ISPPLIB" THEN
DO
 SAY ' '
 SAY ' '
 SAY 'YOUR LOGON PROCEDURE IS UNKNOWN TO TSO'
 SAY 'PLEASE VERIFY THAT YOUR LOGON PROCEDURE IS CORRECT'
 SAY ' '
 SAY 'OR CALL YOUR HELPDESK FOR HELP'
 EXIT 12
END

/***********************************/
/** JOBTRAC ADDITIONAL ALLOCATIONS */
/***********************************/
IF JOBTRAC = 'YES' THEN
DO
 "FREE FI(SMPTABL,ISRCFIL,CISTABL)"
 "FREE FI(ICQAATAB)"
 "FREE FI(ICQABTAB)"
 "FREE FI(ICQANTAB)"
 "FREE FI(ICQAPTAB)"
 "FREE FI(ICQAMTAB)"
 "FREE FI(ICQCMTAB)"
 "FREE FI(DVDMSL)"
 "FREE FI(DVDMSLT)"
 "FREE FI(DVDMSLP)"
 "FREE FI(DVDITF)"
 "FREE FI(DVDTML)"
 X=MSG('ON');
B4 = '"ALLOC FI(SMPTABL) SHR DA('||DSNAME||')"'
INTERPRET B4
 "ALLOC FI(ICQAATAB) SHR DA(ICQ.ICQAATAB)"
 "ALLOC FI(ICQABTAB) SHR DA(ICQ.ICQABTAB)"
 "ALLOC FI(ICQANTAB) SHR DA(ICQ.ICQANTAB)"
 "ALLOC FI(ICQAPTAB) SHR DA(ICQ.ICQAPTAB)"
 "ALLOC FI(ICQAMTAB) SHR DA(ICQ.ICQAMTAB)"
 "ALLOC FI(ICQCMTAB) SHR DA(ICQ.ICQCMTAB)"
 "ALLOC FI(ISRCFIL) SHR DA(SYSA.SPF.CFIL)"
 "ALLOC FI(CISTABL) SHR DA(SYS2.CIDTABL)"
/*  "ALLOC FI(DVDMSL) SHR DA(SDF150.MSL)"      */
/*  "ALLOC FI(DVDMSLP) SHR DA(SDF150.MSLP)"    */
/*  "ALLOC FI(DVDMSLT) SHR DA(SDF150.MSLT)"    */
/*  "ALLOC FI(DVDTML) SHR DA(SDF150.TML)"      */
/*  "ALLOC FI(DVDITF) SHR DA(SDF150.ITF)"      */

 X=MSG('OFF');
END

IF JOBTRAC1 = 'YES' THEN
DO
 "FREE FI(ISRCFIL)"
 "FREE FI(DVDMSL)"
 "FREE FI(DVDMSLT)"
 "FREE FI(DVDMSLP)"
 "FREE FI(DVDITF)"
 "FREE FI(DVDTML)"
 X=MSG('ON');
 "ALLOC FI(ISRCFIL) SHR DA(SYSA.SPF.CFIL)"
/*  "ALLOC FI(DVDMSL) SHR DA(SDF150.MSL)"      */
/*  "ALLOC FI(DVDMSLP) SHR DA(SDF150.MSLP)"    */
/*  "ALLOC FI(DVDMSLT) SHR DA(SDF150.MSLT)"    */
/*  "ALLOC FI(DVDTML) SHR DA(SDF150.TML)"      */
/*  "ALLOC FI(DVDITF) SHR DA(SDF150.ITF)"      */

 X=MSG('OFF');
END

IF JOBTRAC2 = 'YES' THEN
DO
 "FREE FI(SMPTABL)"
 "FREE FI(CISTABL)"
 X=MSG('ON');
 "ALLOC FI(CISTABL) SHR DA(SYS2.CIDTABL)"
B4 = '"ALLOC FI(SMPTABL) SHR DA('||DSNAME||')"'
INTERPRET B4

 X=MSG('OFF');
END
/******************************/
/** STANDARD ISPF ALLOCTIONS **/
/******************************/
"FREE FI(SYSPROC,SYSEXEC,ISPLLIB,ISPPLIB,ISPMLIB,ISPSLIB,ISPTLIB)"
"FREE FI(HASPINDX)"

X = MSG('ON')
"ALLOC FI(SYSPROC) DA("SYSPROC") SHR"
"ALLOC FI(SYSEXEC) DA("SYSEXEC") SHR"
"ALLOC FI(ISPLLIB) DA("ISPLLIB") SHR"
"ALLOC FI(ISPPLIB) DA("ISPPLIB") SHR"
"ALLOC FI(ISPMLIB) DA("ISPMLIB") SHR"
"ALLOC FI(ISPTLIB) DA("ISPTLIB") SHR"
"ALLOC FI(ISPSLIB) DA("ISPSLIB") SHR"
"ALLOC FI(HASPINDX) DA("HASPINDX") SHR"
X = MSG('ON')

"EXECUTIL SEARCHDD(YES)"
SIGNAL NO_COMMENT
/*
   THE ABOVE SIGNAL PREVENT INTERPRETATION OF LONG LINES OF COMMENTS,
   SINCE IT BRANCHES AROUND THEM ALL
*/
/*--------------------------------------------------------------------+
 | IF THE USER HAS A DDIR, THEN ALLOC ALL FILES REQUIRED BY IPCS,     |
 |           THEN CALL IPCS.                                          |
 | SINCE IPCS DOES NOT SEEM TO RECOGNIZE REXX COMMANDS, WE PULL A     |
 |           JIPPO BY QUEUEING THE COMMAND 'PDF PANEL(XXXXXXXX)'      |
 |           BEFORE CALLING IPCS.  THIS WAY,  SINCE IPCS DOES NOT     |
 |           SEE ANY MORE CMDS IN THE EXEC (CLIST), IT PULL WHAT      |
 |           WAS IN THE COMMAND STACK.                                |
 +--------------------------------------------------------------------*/
NO_COMMENT:

Call USER_PROFILE

ddir = "'"userid()".D"sid"0.DDIR'"
RC = LISTDSI(DDIR)
If rc > 4 then do        /* Check for the old one */
   DDIR = "'"||UID||".DDIR'"
   rc = listdsi(ddir)
   end
IF RC > 4 THEN
   "PDF" PNL
ELSE DO
   X = OUTTRAP(ON)
   "VFY DS("DDIR")"
   X = OUTTRAP(X)
   "ALLOC FI(IPCSDDIR) DA("DDIR") SHR"
   "ALLOC FI(IPCSPARM) DA('SYS2.PARMLIB') SHR"
   "ALLOC FI(IPCSPRNT) SYS(X) HOLD"
   QUEUE 'PDF' PNL
   "IPCS PARM(01)"
END

Exit 0  /*-------------------------------------------------------*/

USER_PROFILE:

user_prof = "'"userid()".A0.TSPROF(PROF000)'"
If sysdsn(user_prof) = 'OK' then do
   Say 'Executing' user_prof
   'EXEC' user_prof 'EXEC'
   end

Return
./ ADD NAME=ISPKHHBA 0101-01016-01016-1428-00727-00727-00000-RACFCLS
/* ****************************Rexx**********************************/
/* SAPD SHARED LOGON PROC */

"PROFILE NOPREF MODE WTPMSG MSGID"
X = MSG('OFF')
UID = SYSVAR(SYSUID)
PROC = SYSVAR(SYSPROC)
GETSYSN
IF RC = 0 THEN SYSNAME=BIGERROR
IF RC = 1 THEN SYSNAME=PRDA
IF RC = 2 THEN SYSNAME=PRDB
IF RC = 3 THEN SYSNAME=PRDC
IF RC = 4 THEN SYSNAME=PRDD
IF RC = 5 THEN SYSNAME=PRDE
IF RC = 6 THEN SYSNAME=TSTF
IF RC = 7 THEN SYSNAME=TSTG
IF RC = 8 THEN SYSNAME=TST1
SHRNAME = SYSNAME
IF RC = 4 THEN SHRNAME=PRDE
IF RC = 7 THEN SHRNAME=PRDE
IF RC = 8 THEN SHRNAME=PRDE

SAY 'HAVE A NICE DAY !!!'
SAY 'BUSY ALLOCATING FILES, PLEASE WAIT .....'
SAY ''
MURPHY
IF (PROC = "DIENADMN") |,
   (PROC = "NETADMN") |,
   (PROC = "OPERADMN") |,
   (PROC = "MEDADMN") |,
   (PROC = "COMADMN") |,
   (PROC = "SPFTHE") |,
   (PROC = "PROGADMN")
THEN DO
   SAY ' '
   SAY '                 If you have any problems'
   SAY '                 with administering USERIDs'
   SAY '                 please phone'
   SAY ' '
   SAY '                 EDWARD ROSS ext 120656 or'
   SAY '                             (012) 4210656'
   SAY '                 FAX ===>>   ext 120771 or'
   SAY '                             (012) 4210771'
END

/*****************************************/
/* ALLOC ISPFPROF                        */
/*****************************************/
DSNAME = "'"UID"."SYSNAME".ISPF.ISPPROF'"
"FREE FI(ISPPROF)"
RC = LISTDSI(DSNAME)
IF RC > 4 THEN
DO
 X = MSG('ON')
 "FREE FI(ISPCRTE)"
 "ATTRIB ISPCRTE DSORG(PO) RECFM(F B) LRECL(80) BLKSIZE(18400)"
 A1='"ALLOC DA(' || DSNAME || ') SP(10,1) TRACKS DIR(10)',
 || 'USING(ISPCRTE) FI(ISPPROF)"'
 SAY A1
 INTERPRET A1
 IF RC = 0 THEN
  SAY  "ISPF PROFILE DATA SET" DSNAME "HAS BEEN CREATED"
 ELSE
 DO
   SAY  "UNABLE TO ALLOCATE ISPF PROFILE DATA SET" DSNAME
   "FREE FI(ISPCRTE)"
   EXIT 12
 END
 "FREE FI(ISPCRTE)"
END
A1 = '"ALLOC FI(ISPPROF) SHR DA('||DSNAME||')"'
A2 = '"ALLOC FI(ISPTABL) SHR DA('||DSNAME||')"'
A3 = '"ALLOC FI(ISPTLIB) SHR DA('||DSNAME||')"'
INTERPRET A1
INTERPRET A2
INTERPRET A3

/********************************/
/* SPECIFY DATASETS FOR SYSEXEC */
/********************************/
E_ISP = 'ISP.V4R2M0.SISPEXEC'

/********************************/
/* SPECIFY DATASETS FOR SYSPROC */
/********************************/
C_ISP2 = 'ISP.V4R2M0.SISPCLIB'
C_RAC3 = 'SYS1.HRFCLST'
C_CUS1 = 'SYS2.CMDPROC'
C_CUS2 = "'SYS2."SHRNAME".CMDPROC'"
C_CUS3 = 'SYS2.PRDC.CMDPROC'
C_OPS1 = 'OPS.CMDPROC'
C_OPS2 = "'OPS."SHRNAME".CMDPROC'"
C_RAC1 = 'SYS2.RACFCLST'
C_RAC2 = "'SYS2."SHRNAME".RACFCLST'"
C_SMPE = 'GIM.SGIMCLS0'
C_IPCS = 'SYS1.SBLSCLI0'
C_HCD  = 'SYS1.SCBDCLST'
C_DFSRT = 'SYS1.ICEISPC'
C_DFDSS = 'SYS1.DGTCLIB'
C_RMF  = 'SYS1.SERBCLS'
C_ICQ  = 'ICQ.ICQCCLIB'
C_EDC  = 'EDC.V2R2M0.SEDCLIST'
C_BKM  = 'EOY.SEOYCLIB'
C_IOA1 = "'SYS3."SHRNAME".IOAIV410.CLIST'"
C_IOA2 = 'SYS3.IOA.CLIST'
C_IOA3 = 'SYS3.IOA500.CLIST'
C_HACC = 'SYS3.ZHC240.ISPCLIB'
C_SDF  = 'SDF2.V1R4M0.SDGICMD'
C_OMVS = 'SYS1.SBPXEXEC'
C_CDCU = 'CDCU.DCZDEXE'

/********************************/
/* SPECIFY DATASETS FOR ISPLLIB */
/********************************/
L_SMP  = 'GIM.SGIMLMD0'
L_HCD  = 'SYS1.SCBDHENU'
L_HSM = 'SYS1.DFQLLIB'
L_DFSRT = 'SYS1.ICEISPL'
L_DFDSS = 'SYS1.DGTLLIB'
L_CDCU  = 'CDCU.DCZDLOD'
L_DITTO = 'DIT.V1R1M0.SDITLOAD'
L_DELP = 'DELPHI.V221.CMDLOAD'
L_TSP1 = 'SYS2.TSPRINT.APFLIB'
L_SD2PC = 'SYS3.SD2.LINKLIB'
L_HACC1 = 'SYS3.ZHC240.ISPLOAD'
L_HACC2 = 'SYS3.ZHC240.LOAD'
L_SDF = 'SDF150.SDFLOAD'
L_ISP = 'ISP.V4R2M0.SISPLOAD'
L_MAIN = "'MAINT."SHRNAME".LIVE.LOAD'"

/********************************/
/* SPECIFY DATASETS FOR ISPPLIB */
/********************************/
P_SDSF = 'ISF.V1R5M0.SISFPLIB'
P_IOA = "'SYS3."SHRNAME".IOAIV410.PANEL'"
P_IOA1 = 'SYS3.IOA.PANEL'
P_IOA2 = 'SYS3.IOA500.PANEL'
P_CUS1 = 'SYS2.ISPPLIB'
P_CUS2 = "'SYS2."SHRNAME".ISPPLIB'"
P_ISPF = 'ISP.V4R2M0.SISPPENU'
P_CUS3 = 'SYS2.RACFPANL'
P_CUS4 = "'SYS2."SHRNAME".RACFPANL'"
P_CUS5 = 'SYS2.ISP.OPSPENU'
P_CUS6 = 'SYS2.ISP.PRGPENU'
P_CUS7 = 'SYS2.ISP.NETPENU'
P_SMP = 'GIM.SGIMPENU'
P_HSM = 'SYS1.DFQPLIB'
P_HCD = 'SYS1.SCBDPENU'
P_RMF3 = 'SYS1.SERBPENU'
P_OMVS = 'SYS1.SBPXPENU'
P_DFSRT = 'SYS1.ICEISPP'
P_DFDSS = 'SYS1.DGTPLIB'
P_RACF  = 'SYS1.HRFPANL'
P_IPCS = 'SYS1.SBLSPNL0'
P_BKM = 'EOY.SEOYPENU'
P_DELP = 'DELPHI.V221.PLIB'
P_CDCU = 'CDCU.DCZDPLB'
P_HACC = 'SYS3.ZHC240.ISPPLIB'
P_ICQ = 'ICQ.ICQPLIB'
P_LMF = 'SYS2.LMF.PLIB'
P_MAIN = 'MAINT.LIVE.PLIB'

/********************************/
/* SPECIFY DATASETS FOR ISPMLIB */
/********************************/
M_ISPF = 'ISP.V4R2M0.SISPMENU'
M_SDSF = 'ISF.V1R5M0.SISFMLIB'
M_SMP  = 'GIM.SGIMMENU'
M_HSM = 'SYS1.DFQMLIB'
M_HCD = 'SYS1.SCBDMENU'
M_OMVS = 'SYS1.SBPXMENU'
M_RMF3 = 'SYS1.SERBMENU'
M_DFSRT = 'SYS1.ICEISPM'
M_DFDSS = 'SYS1.DGTMLIB'
M_RACF = 'SYS1.HRFMSG'
M_IPCS = 'SYS1.SBLSMSG0'
M_CUS1 = 'SYS2.ISPMENU'
M_C370 = 'EDC.V2R2M0.SEDCMSGP'
M_BKM = 'EOY.SEOYMENU'
M_DELP = 'DELPHI.V221.MLIB'
M_CDCU = 'CDCU.DCZDMLB'
M_IOA1 = "'SYS3."SHRNAME".IOAIV410.ISMSG'"
M_IOA2 = 'SYS3.IOA.ISMSG'
M_IOA3 = 'SYS3.IOA500.ISMSG'
M_HACC = 'SYS3.ZHC240.ISPMLIB'
M_ICQ = 'ICQ.ICQMLIB'
M_MAIN = 'MAINT.LIVE.MLIB'
M_RAC1 = 'SYS2.RACFMENU'

/********************************/
/* SPECIFY DATASETS FOR ISPTLIB */
/********************************/
T_SDSF = 'ISF.V1R5M0.SISFTLIB'
T_SMP  = 'GIM.SGIMTENU' DSNAME
T_HCD  = 'SYS1.SCBDTENU'
T_RMF3 = 'SYS1.SERBTENU'
T_OMVS = 'SYS1.SBPXTENU'
T_DFSRT = 'SYS1.ICEISPT'
T_DFDSS = 'SYS1.DGTTLIB'
T_IPCS  = 'SYS1.SBLSTBL0'
T_BKM  = 'EOY.SEOYTENU'
T_DELP = 'DELPHI.V221.CMDTAB'
T_ICQ = 'ICQ.ICQTLIB'
T_CDCU  = 'CDCU.DCZDTLB'
T_IOA1  = "'SYS3."||SHRNAME||".IOAIV410.TLIB'"
T_IOA2  = 'SYS3.IOA.TLIB'
T_HACC  = 'SYS3.ZHC240.ISPTLIB'
T_ISPF  = 'ISP.V4R2M0.SISPTENU'
T_RAC1  = 'SYS2.RACFTABL'

/********************************/
/* SPECIFY DATASETS FOR ISPSLIB */
/********************************/
S_SMP  = 'GIM.SGIMSENU'
S_IPCS = 'SYS1.SBLSKEL0'
S_DFSRT = 'SYS1.ICEISPS'
S_DFDSS = 'SYS1.DGTSLIB'
S_RACF = 'SYS1.HRFSKEL'
S_ICQ  = 'ICQ.ICQSLIB'
S_CDCU = 'CDCU.DCZDSLB'
S_CUS1 = 'MAINT.LIVE.SLIB'
S_ISPF = 'ISP.V4R2M0.SISPSLIB'
S_ISP2 = 'ISP.V4R2M0.SISPSENU'
S_RAC1 = 'SYS2.RACFSLIB'

/*******************************/
/* SPECIFY DATASETS FOR SYSLOG */
/*******************************/
H_ISF  = "'SYS0."SYSNAME".HASPINDX'"

/*********************************/
/*  SYSTEMS USERS                */
/*********************************/
IF (PROC = "SPFBOOL") THEN
DO
 IF SYSNAME = 'PRDD' THEN
    SYSPROC = C_ISP2 C_RAC3 C_CUS1 C_RAC1,
    C_SMPE C_IPCS C_HCD C_DFSRT C_DFDSS C_RMF C_ICQ,
    C_EDC C_BKM C_IOA3 C_IOA2 C_IOA1 C_HACC C_SDF C_OMVS C_CDCU
 ELSE
    SYSPROC = C_ISP2 C_RAC3 C_CUS1 C_RAC1,
    C_SMPE C_IPCS C_HCD C_DFSRT C_DFDSS C_RMF C_ICQ,
    C_EDC C_BKM C_IOA1 C_IOA2 C_HACC C_SDF C_OMVS C_CDCU
 SYSEXEC = E_ISP
 IF SUBSTR(UID,1,4) = 'SYS0' THEN
    ISPLLIB = L_SMP L_HCD L_HSM L_DFSRT L_DFDSS L_CDCU L_DITTO L_DELP,
    L_TSP1 L_HACC1 L_HACC2 L_MAIN
 ELSE
    ISPLLIB = L_SMP L_HCD L_HSM L_DFSRT L_DFDSS L_CDCU L_DITTO L_DELP,
    L_TSP1 L_HACC1 L_HACC2 L_MAIN
 IF SYSNAME = 'PRDD' THEN
    ISPPLIB = P_SDSF P_LMF P_IOA2 P_IOA1 P_IOA P_CUS1 P_CUS3,
    P_ISPF P_SMP P_HSM P_HCD P_RMF3 P_OMVS P_DFSRT P_DFDSS,
    P_RACF P_IPCS P_BKM P_DELP P_CDCU P_HACC P_ICQ
 ELSE
    ISPPLIB = P_DFDSS P_SDSF P_LMF P_IOA P_IOA1 P_CUS1,
    P_CUS3 P_ISPF P_SMP P_HSM P_HCD P_RMF3 P_OMVS P_DFSRT,
    P_RACF P_IPCS P_BKM P_DELP P_CDCU P_HACC P_ICQ
 IF SYSNAME = 'PRDD' THEN
    ISPMLIB = M_ISPF M_SDSF M_SMP M_HSM M_HCD M_OMVS M_RMF3 M_DFSRT,
    M_DFDSS M_RACF M_IPCS M_CUS1 M_C370 M_BKM M_DELP M_CDCU M_IOA3,
    M_IOA2 M_IOA1 M_HACC M_ICQ
 ELSE
    ISPMLIB = M_ISPF M_SDSF M_SMP M_HSM M_HCD M_OMVS M_RMF3 M_DFSRT,
    M_DFDSS M_RACF M_IPCS M_CUS1 M_C370 M_BKM M_DELP M_CDCU,
    M_IOA1 M_IOA2 M_HACC M_ICQ
 IF SYSNAME = 'PRDD' THEN
    ISPTLIB = T_SDSF T_SMP T_HCD T_RMF3 T_OMVS T_DFSRT M_DFDSS,
    T_IPCS T_BKM T_DELP T_ICQ T_CDCU T_IOA2 T_IOA1 T_HACC,
    T_ISPF T_RAC1
 ELSE
    ISPTLIB = T_SDSF T_SMP T_HCD T_RMF3 T_OMVS T_DFSRT M_DFDSS,
    T_IPCS T_BKM T_DELP T_ICQ T_CDCU T_IOA1 T_IOA2 T_HACC,
    T_ISPF T_RAC1
 ISPSLIB = S_SMP S_IPCS S_DFSRT S_DFDSS S_RACF S_ICQ S_CDCU,
    S_CUS1 S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@BOOL)'
 JOBTRAC = 'YES'
END

/*********************************/
/*  PROGRAMMERS                  */
/*********************************/
IF (PROC = "PROGRAMR") |,
   (PROC = "UNIXUSER")
THEN DO
 IF SYSNAME = 'PRDD' THEN
    SYSPROC = C_RAC1 C_CUS1 C_CUS3 C_ISP2,
    C_DFSRT C_DFDSS C_SDF C_EDC C_BKM C_IOA3 C_IOA2
 ELSE
    SYSPROC = C_RAC1 C_CUS1 C_CUS3 C_ISP2,
    C_DFSRT C_DFDSS C_SDF C_EDC C_BKM C_IOA1
 SYSEXEC = E_ISP
 IF SYSNAME = 'PRDD' THEN
    ISPLLIB = L_MAIN L_DFSRT L_DFDSS L_DELP L_TSP1 L_SDF
 ELSE
    ISPLLIB = L_MAIN L_DFSRT L_DFDSS L_DELP L_TSP1 L_SDF
 IF SYSNAME = 'PRDD' THEN
    ISPPLIB = P_LMF P_CUS6 P_CUS3 P_MAIN P_DFSRT P_DFDSS,
    P_SDSF P_DELP P_IOA2 P_IOA1 P_BKM
 ELSE
    ISPPLIB = P_LMF P_CUS6 P_CUS3 P_MAIN P_DFSRT P_DFDSS,
    P_SDSF P_DELP P_IOA P_BKM
 IF SYSNAME = 'PRDD' THEN
    ISPMLIB = M_MAIN M_ISPF M_DFSRT M_DFDSS M_DELP M_C370 M_BKM,
    M_IOA3 M_IOA2 M_SDSF
 ELSE
    ISPMLIB = M_MAIN M_ISPF M_DFSRT M_DFDSS M_DELP M_C370 M_BKM,
    M_IOA1 M_SDSF
 IF SYSNAME = 'PRDD' THEN
    ISPTLIB = T_DFSRT T_DFDSS T_SDSF T_DELP T_BKM T_IOA2 T_ISPF
 ELSE
    ISPTLIB = T_DFSRT T_DFDSS T_SDSF T_DELP T_BKM T_IOA2 T_ISPF
 ISPSLIB = S_CUS1 S_DFSRT S_DFDSS S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@PRG)'
 JOBTRAC1 = 'YES'
END

/**********************************/
/*  OPERATORS USERS               */
/**********************************/
IF (PROC = "OPERATOR")
THEN DO
 IF SYSNAME = 'PRDD' THEN
    SYSPROC = C_ISP2 C_RAC1 C_CUS1 C_DFSRT C_DFDSS,
    C_RMF C_EDC C_BKM C_IOA3 C_IOA1
 ELSE
    SYSPROC = C_ISP2 C_RAC1 C_CUS1 C_DFSRT C_DFDSS,
    C_RMF C_EDC C_BKM C_IOA1
 SYSEXEC = E_ISP
 IF SYSNAME = 'PRDD' THEN
    ISPLLIB = L_DFSRT L_DFDSS L_TSP1
 ELSE
    ISPLLIB = L_DFSRT L_DFDSS L_TSP1
 IF SYSNAME = 'PRDD' THEN
    ISPPLIB = P_SDSF P_CUS3 P_CUS5 P_IOA2 P_IOA P_RMF3 P_DFSRT,
    P_DFDSS P_BKM
 ELSE
    ISPPLIB = P_SDSF P_CUS3 P_CUS5 P_IOA P_RMF3 P_DFSRT,
    P_DFDSS P_BKM
 ISPMLIB = M_ISPF M_SDSF M_RMF3 M_DFSRT M_DFDSS M_C370 M_BKM,
    M_IOA1
 ISPTLIB = T_SDSF T_RMF3 T_DFSRT T_DFDSS T_BKM T_IOA1 T_ISPF
 ISPSLIB = S_DFSRT S_DFDSS S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@OPS)'
 JOBTRAC = 'NO'
END

/*********************************/
/*  DIENS KONTROLE               */
/*********************************/
IF (PROC = "DIENSKRL")
THEN DO
 SYSPROC = C_RAC1 C_ISP2 C_DFDSS
 SYSEXEC = E_ISP
 ISPLLIB = L_DFDSS L_ISP L_TSP1
 ISPPLIB = P_CUS3 P_DFDSS P_SDSF P_ISPF
 ISPMLIB = M_DFDSS M_ISPF
 ISPTLIB = T_DFDSS T_SDSF T_ISPF
 ISPSLIB = S_DFDSS S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@DNS)'
 JOBTRAC = 'NO'
END

/********************************/
/*  NETWORK USERS               */
/********************************/
IF (PROC = "NETWORK")
THEN DO
 SYSPROC = C_RAC1 C_CUS1 C_DFSRT C_DFDSS C_ISP2
 SYSEXEC = E_ISP
 ISPLLIB = L_DFSRT L_DFDSS L_TSP1 L_ISP
 ISPPLIB = P_CUS3 P_CUS7 P_DFSRT P_DFDSS P_SDSF
 ISPMLIB = M_DFSRT M_DFDSS M_ISPF
 ISPTLIB = T_DFSRT T_DFDSS T_SDSF T_ISPF
 ISPSLIB = S_DFSRT S_DFDSS S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@NET)'
 JOBTRAC = 'NO'
END

/********************************/
/*  CONTROL USERS               */
/********************************/
IF (PROC = "AUTOMATE")
THEN DO
 IF SYSNAME = 'PRDD' THEN
    SYSPROC = C_RAC1 C_CUS1 C_OPS1 C_DFSRT,
    C_DFDSS C_BKM C_EDC C_IOA3 C_IOA2 C_IOA1 C_SMPE C_ISP2
 ELSE
    SYSPROC = C_RAC1 C_CUS1 C_OPS1 C_DFSRT,
    C_DFDSS C_BKM C_EDC C_IOA1 C_SMPE C_ISP2
 SYSEXEC = E_ISP
 ISPLLIB = L_DFSRT L_DFDSS L_TSP1 L_SMP
 IF SYSNAME = 'PRDD' THEN
    ISPPLIB = P_SDSF P_ISPF P_CUS3 P_CUS1,
    P_DFSRT P_DFDSS P_BKM P_IOA2 P_IOA P_IOA1 P_SMP
 ELSE
    ISPPLIB = P_SDSF P_ISPF P_CUS3 P_CUS1,
    P_DFSRT P_DFDSS P_BKM P_IOA P_IOA1 P_SMP
 IF SYSNAME = 'PRDD' THEN
    ISPMLIB = M_DFSRT M_DFDSS M_BKM M_IOA3 M_IOA2 M_ISPF M_SMP
 ELSE
    ISPMLIB = M_DFSRT M_DFDSS M_BKM M_IOA1 M_ISPF M_SMP
 IF SYSNAME = 'PRDD' THEN
    ISPTLIB = T_DFSRT T_DFDSS T_BKM T_IOA2 T_SDSF T_ISPF T_SMP
 ELSE
    ISPTLIB = T_DFSRT T_DFDSS T_BKM T_IOA1 T_SDSF T_ISPF T_SMP
 ISPSLIB = S_DFSRT S_DFDSS S_ISPF S_SMP
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@AUT)'
 JOBTRAC2 = 'YES'
END

/******************************/
/*  MEDIA USERS               */
/******************************/
IF (PROC = "MEDIA")
THEN DO
 IF SYSNAME = 'PRDD' THEN
    SYSPROC = C_RAC1 C_CUS1 C_OPS1 C_DFSRT,
    C_DFDSS C_BKM C_EDC C_IOA3 C_IOA2 C_IOA1 C_ISP2
 ELSE
    SYSPROC = C_RAC1 C_CUS1 C_OPS1 C_DFSRT,
    C_DFDSS C_BKM C_EDC C_IOA1 C_ISP2
 SYSEXEC = E_ISP
 ISPLLIB = L_DFSRT L_DFDSS L_TSP1
 IF SYSNAME = 'PRDD' THEN
    ISPPLIB = P_SDSF P_CUS5 P_CUS3 P_CUS1,
    P_DFSRT P_DFDSS P_BKM P_IOA2 P_IOA P_IOA1
 ELSE
    ISPPLIB = P_SDSF P_CUS5 P_CUS3 P_CUS1,
    P_DFSRT P_DFDSS P_BKM P_IOA P_IOA1
 IF SYSNAME = 'PRDD' THEN
    ISPMLIB = M_DFSRT M_DFDSS M_BKM M_IOA3 M_IOA2 M_ISPF
 ELSE
    ISPMLIB = M_DFSRT M_DFDSS M_BKM M_IOA1 M_ISPF
 IF SYSNAME = 'PRDD' THEN
    ISPTLIB = T_DFSRT T_DFDSS T_BKM T_IOA2 T_SDSF T_ISPF
 ELSE
    ISPTLIB = T_DFSRT T_DFDSS T_BKM T_IOA1 T_SDSF T_ISPF
 ISPSLIB = S_DFSRT S_DFDSS S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@MED)'
 JOBTRAC = 'NO'
END

/*********************************/
/*  ADMINISTRATOR                */
/*********************************/
IF (PROC = "DIENADMN") |,
   (PROC = "NETADMN") |,
   (PROC = "OPERADMN") |,
   (PROC = "MEDADMN") |,
   (PROC = "PROGADMN")
THEN DO
 SYSPROC = C_RAC1
 SYSEXEC = E_ISP
 ISPLLIB = L_ISP
 ISPPLIB = P_CUS3 P_SDSF
 ISPMLIB = M_RAC1
 ISPTLIB = T_RAC1 T_SDSF
 ISPSLIB = S_RAC1
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@ADMN)'
 JOBTRAC = 'NO'
END

/*********************************/
/*  VEILIGHEID ADMINISTRATOR     */
/*********************************/
IF (PROC = "SPFTHE")
THEN DO
 SYSPROC = C_RAC1 C_ISP2
 SYSEXEC = E_ISP
 ISPLLIB = L_ISP L_TSP1
 ISPPLIB = P_CUS3 P_DFDSS P_SDSF P_ISPF
 ISPMLIB = M_RAC1 M_RACF M_DFDSS M_ISPF
 ISPTLIB = T_RAC1 T_DFDSS T_SDSF
 ISPSLIB = S_RAC1 S_ISP2 S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@THE)'
 JOBTRAC = 'NO'
END

/*******************************/
/*  POLFIN USERS               */
/*******************************/
IF (PROC = "SPFPOL") THEN
DO
 SYSPROC = C_RAC1 C_ISP2
 SYSEXEC = E_ISP
 ISPLLIB = L_TSP1
 ISPPLIB = P_CUS3 P_SDSF P_ISPF
 ISPMLIB = M_ISPF
 ISPTLIB = T_SDSF T_ISPF
 ISPSLIB = S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@POL)'
 JOBTRAC = 'NO'
END

/****************************/
/*  KRS USERS               */
/****************************/
IF (PROC = "SPFKRI") THEN
DO
 SYSPROC = C_RAC1 C_ISP2
 SYSEXEC = E_ISP
 ISPLLIB = L_ISP L_TSP1
 ISPPLIB = P_CUS3 P_DFDSS P_SDSF P_ISPF
 ISPMLIB = M_RAC1 M_RACF M_DFDSS M_ISPF
 ISPTLIB = T_RAC1 T_DFDSS T_SDSF T_ISPF
 ISPSLIB = S_RAC1 S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@KRI)'
 JOBTRAC = 'NO'
END

/*********************************/
/*  READY PROMPT USERS           */
/*********************************/
IF (PROC = "READY") |,
   (PROC = "PDF") THEN
DO
 SYSPROC = C_RAC1
 SYSEXEC = E_ISP
 ISPLLIB = L_ISP
 ISPPLIB = P_CUS3
 ISPMLIB = M_ISPF
 ISPTLIB = T_ISPF
 ISPSLIB = S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL()'
 JOBTRAC = 'NO'
END

/*********************************/
/*  READY PROMPT FOR SD2 PC      */
/*********************************/
IF (PROC = "SD2") THEN
DO
    ISPLLIB = L_SD2PC
END
/*********************************/
/*  COMPLETE ADMINISTRATORS      */
/*********************************/
IF (PROC = "COMADMN") THEN
DO
 SYSPROC = C_RAC1 C_ISP2
 SYSEXEC = E_ISP
 ISPLLIB = L_ISP
 ISPPLIB = P_CUS3 P_SDSF
 ISPMLIB = M_RAC1 M_RACF
 ISPTLIB = T_RAC1 T_SDSF
 ISPSLIB = S_RAC1
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@COMA)'
 JOBTRAC = 'NO'
END

/*********************************/
/*  CONTROL-D USERS              */
/*********************************/
IF (PROC = "SPFCTD")
THEN DO
 IF SYSNAME = 'PRDD' THEN
 SYSPROC = C_RAC1 C_IOA3 C_IOA1
 else
 SYSPROC = C_RAC1 C_IOA3 C_IOA1
 SYSEXEC = E_ISP
 ISPLLIB = L_ISP
 ISPPLIB = P_CUS3 P_SDSF P_ISPF P_IOA2 P_IOA
 ISPMLIB = M_IOA3 M_IOA1 M_ISPF
 ISPTLIB = T_IOA1 T_SDSF T_ISPF
 ISPSLIB = S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@CTD)'
 JOBTRAC = 'NO'
END

/***********************************/
/** CHECK FOR UNKNOWN PROC        **/
/***********************************/
IF ISPPLIB = "ISPPLIB" THEN
DO
 SAY ' '
 SAY ' '
 SAY 'YOUR LOGON PROCEDURE IS UNKNOWN TO TSO'
 SAY 'PLEASE VERIFY THAT YOUR LOGON PROCEDURE IS CORRECT'
 SAY ' '
 SAY 'OR CALL YOUR HELPDESK FOR HELP'
 EXIT 12
END

/***********************************/
/** JOBTRAC ADDITIONAL ALLOCATIONS */
/***********************************/
IF JOBTRAC = 'YES' THEN
DO
 "FREE FI(SMPTABL,ISRCFIL,CISTABL)"
 "FREE FI(ICQAATAB)"
 "FREE FI(ICQABTAB)"
 "FREE FI(ICQANTAB)"
 "FREE FI(ICQAPTAB)"
 "FREE FI(ICQAMTAB)"
 "FREE FI(ICQCMTAB)"
 "FREE FI(DVDMSL)"
 "FREE FI(DVDMSLT)"
 "FREE FI(DVDMSLP)"
 "FREE FI(DVDITF)"
 "FREE FI(DVDTML)"
 X=MSG('ON');
B4 = '"ALLOC FI(SMPTABL) SHR DA('||DSNAME||')"'
INTERPRET B4
 "ALLOC FI(ICQAATAB) SHR DA(ICQ.ICQAATAB)"
 "ALLOC FI(ICQABTAB) SHR DA(ICQ.ICQABTAB)"
 "ALLOC FI(ICQANTAB) SHR DA(ICQ.ICQANTAB)"
 "ALLOC FI(ICQAPTAB) SHR DA(ICQ.ICQAPTAB)"
 "ALLOC FI(ICQAMTAB) SHR DA(ICQ.ICQAMTAB)"
 "ALLOC FI(ICQCMTAB) SHR DA(ICQ.ICQCMTAB)"
 "ALLOC FI(ISRCFIL) SHR DA(SYSA.SPF.CFIL)"
 "ALLOC FI(CISTABL) SHR DA(SYS2.CIDTABL)"
/*  "ALLOC FI(DVDMSL) SHR DA(SDF150.MSL)"      */
/*  "ALLOC FI(DVDMSLP) SHR DA(SDF150.MSLP)"    */
/*  "ALLOC FI(DVDMSLT) SHR DA(SDF150.MSLT)"    */
/*  "ALLOC FI(DVDTML) SHR DA(SDF150.TML)"      */
/*  "ALLOC FI(DVDITF) SHR DA(SDF150.ITF)"      */

 X=MSG('OFF');
END

IF JOBTRAC1 = 'YES' THEN
DO
 "FREE FI(ISRCFIL)"
 "FREE FI(DVDMSL)"
 "FREE FI(DVDMSLT)"
 "FREE FI(DVDMSLP)"
 "FREE FI(DVDITF)"
 "FREE FI(DVDTML)"
 X=MSG('ON');
 "ALLOC FI(ISRCFIL) SHR DA(SYSA.SPF.CFIL)"

 X=MSG('OFF');
END

IF JOBTRAC2 = 'YES' THEN
DO
 "FREE FI(SMPTABL)"
 "FREE FI(CISTABL)"
 X=MSG('ON');
 "ALLOC FI(CISTABL) SHR DA(SYS2.CIDTABL)"
B4 = '"ALLOC FI(SMPTABL) SHR DA('||DSNAME||')"'
INTERPRET B4

 X=MSG('OFF');
END
/******************************/
/** STANDARD ISPF ALLOCTIONS **/
/******************************/
"FREE FI(SYSPROC,SYSEXEC,ISPLLIB,ISPPLIB,ISPMLIB,ISPSLIB,ISPTLIB)"
"FREE FI(HASPINDX)"

X = MSG('ON')
"ALLOC FI(SYSPROC) DA("SYSPROC") SHR"
"ALLOC FI(SYSEXEC) DA("SYSEXEC") SHR"
"ALLOC FI(ISPLLIB) DA("ISPLLIB") SHR"
"ALLOC FI(ISPPLIB) DA("ISPPLIB") SHR"
"ALLOC FI(ISPMLIB) DA("ISPMLIB") SHR"
"ALLOC FI(ISPTLIB) DA("ISPTLIB") SHR"
"ALLOC FI(ISPSLIB) DA("ISPSLIB") SHR"
"ALLOC FI(HASPINDX) DA("HASPINDX") SHR"
X = MSG('ON')

"EXECUTIL SEARCHDD(YES)"
SIGNAL NO_COMMENT
/*
   THE ABOVE SIGNAL PREVENT INTERPRETATION OF LONG LINES OF COMMENTS,
   SINCE IT BRANCHES AROUND THEM ALL
*/
/*--------------------------------------------------------------------+
 | IF THE USER HAS A DDIR, THEN ALLOC ALL FILES REQUIRED BY IPCS,     |
 |           THEN CALL IPCS.                                          |
 | SINCE IPCS DOES NOT SEEM TO RECOGNIZE REXX COMMANDS, WE PULL A     |
 |           JIPPO BY QUEUEING THE COMMAND 'PDF PANEL(XXXXXXXX)'      |
 |           BEFORE CALLING IPCS.  THIS WAY,  SINCE IPCS DOES NOT     |
 |           SEE ANY MORE CMDS IN THE EXEC (CLIST), IT PULL WHAT      |
 |           WAS IN THE COMMAND STACK.                                |
 +--------------------------------------------------------------------*/
NO_COMMENT:

Call USER_PROFILE

ddir = "'"userid()".D"sid"0.DDIR'"
RC = LISTDSI(DDIR)
If rc > 4 then do        /* Check for the old one */
   DDIR = "'"||UID||".DDIR'"
   rc = listdsi(ddir)
   end
IF RC > 4 THEN
   "PDF" PNL
ELSE DO
   X = OUTTRAP(ON)
   "VFY DS("DDIR")"
   X = OUTTRAP(X)
   "ALLOC FI(IPCSDDIR) DA("DDIR") SHR"
   "ALLOC FI(IPCSPARM) DA('SYS2.PARMLIB') SHR"
   "ALLOC FI(IPCSPRNT) SYS(X) HOLD"
   QUEUE 'PDF' PNL
   "IPCS PARM(01)"
END

Exit 0  /*-------------------------------------------------------*/

USER_PROFILE:

user_prof = "'"userid()".A0.TSPROF(PROF000)'"
If sysdsn(user_prof) = 'OK' then do
   Say 'Executing' user_prof
   'EXEC' user_prof 'EXEC'
   end

Return
./ ADD NAME=ISPSHARE 0101-01016-01016-1428-00140-00140-00000-RACFCLS
PROC 0 PANEL()
CONTROL NOFLUSH NOMSG MAIN
PROFILE MODE WTPMSG MSGID
GETSYSN
SET SYSNUM = &LASTCC
IF &SYSNUM = 0 THEN SET SYSNAME=BIGERROR
IF &SYSNUM = 1 THEN SET SYSNAME=PRDA
IF &SYSNUM = 2 THEN SET SYSNAME=PRDB
IF &SYSNUM = 3 THEN SET SYSNAME=PRDC
IF &SYSNUM = 4 THEN SET SYSNAME=PRDD
IF &SYSNUM = 5 THEN SET SYSNAME=PRDE
IF &SYSNUM = 6 THEN SET SYSNAME=TSTF
IF &SYSNUM = 7 THEN SET SYSNAME=TSTG
IF &SYSNUM = 8 THEN SET SYSNAME=TST1
FREE FILE(ISPLLIB,ISPPLIB,ISPMLIB,ISPTLIB,ISPSLIB, +
          ISPPROF,ISPTABL,SMPTABL)
SET &DSNAME = &SYSUID..&SYSNAME..ISPF.ISPPROF
ALLOC FI(ISPPROF) SHR  DA('&DSNAME.')
IF &LASTCC ^= 0 THEN +
  DO
    FREE FI(ISPCRTE)
    CONTROL MSG
    ATTRIB ISPCRTE DSORG(PO) RECFM(F B) LRECL(80) BLKSIZE(6160)
    ALLOC DA('&DSNAME.') SP(2,1) TRACKS DIR(2) USING(ISPCRTE) +
        FI(ISPPROF)
    IF &LASTCC = 0 THEN +
      WRITE *** ISPF PROFILE DATA SET '&DSNAME.' HAS BEEN CREATED
    ELSE +
     DO
      WRITE  *** UNABLE TO ALLOCATE ISPF PROFILE DATA SET '&DSNAME.'
      FREE FI(ISPCRTE)
      EXIT CODE(12)
     END
    FREE FI(ISPCRTE)
  END
CONTROL MSG
IF &PANEL = &STR() THEN +
  SET &PNL = PANEL(ISP@BOOL)
ELSE +
  SET &PNL = PANEL(&PANEL)
ERROR RETURN
ALLOC FI(ISPTABL) SHR DA('&DSNAME.')
ALLOC FI(SMPTABL) SHR DA('&DSNAME.')
MURPHY
ALLOC FI(ISPLLIB) SHR DA( +
/*  'GIM.SGIMLMD0'                                   SMP/E       */  +
/*  'SYS1.SCBDHENU'                                  HCD         */  +
/*  'SYS1.DFQLLIB'                                   DFHSM       */  +
    'SYS1.ICEISPL'                                /* DFSORT      */  +
    'SYS1.DGTLLIB'                                /* DFP/DFDSS   */  +
/*  'DIT.V1R1M0.SDITLOAD'                            DITTO       */  +
    'DELPHI.V221.CMDLOAD'                         /* DELPHI      */  +
    'SYS2.TSPRINT.APFLIB') /*                DELPHI      */
/*  'SDF150.SDFLOAD'                               DELPHI      */
/*  'VPS.VPS.R62.TSO.LOAD')                     VPS         */
ALLOC FI(ISPPLIB) SHR DA( +
    'ISF.V1R5M0.SISFPLIB'                         /* SDSF        */  +
/*  'SYS3.&SYSNAME..IOAIV410.PANEL'                  IOA         */  +
    'SYS2.ISPPLIB'                                /* CUSTOM      */  +
    'ISP.V4R2M0.SISPPENU'                         /* ISPF        */  +
    'SYS2.RACFPANL'                               /* CUSTOM      */  +
/*  'GIM.SGIMPENU'                                   SMP/E       */  +
/*  'SYS1.DFQPLIB'                                   DFHSM       */  +
/*  'SYS1.SCBDPENU'                                  HCD         */  +
/*  'SYS1.SBPXPENU'                                  OMVS        */  +
    'SYS1.ICEISPP'                                /* DFSORT      */  +
    'SYS1.DGTPLIB'                                /* DFP/DFDSS   */  +
/*  'SYS1.HRFPANL'                                   RACF        */  +
/*  'SYS1.SBLSPNL0'                                  IPCS        */  +
    'EOY.SEOYPENU'                                /* BOOKMANAGER */  +
    'DELPHI.V221.PLIB')                           /* DELPHI      */
/*  'ICQ.ICQPLIB')                                /* ICQ         */
ALLOC FI(ISPMLIB) SHR DA( +
    'ISP.V4R2M0.SISPMENU'                         /* ISPF        */  +
    'ISF.V1R5M0.SISFMLIB'                         /* SDSF        */  +
/*  'GIM.SGIMMENU'                                   SMP/E       */  +
/*  'SYS1.DFQMLIB'                                   DFHSM       */  +
/*  'SYS1.SCBDMENU'                                  HCD         */  +
/*  'SYS1.SBPXMENU'                                  OMVS        */  +
    'SYS1.ICEISPM'                                /* DFSORT      */  +
    'SYS1.DGTMLIB'                                /* DFP/DFDSS   */  +
/*  'SYS1.HRFMSG'                                    RACF        */  +
/*  'SYS1.SBLSMSG0'                                  IPCS        */  +
    'SYS2.ISPMENU'                                /* CUSTOM      */  +
    'EDC.V2R2M0.SEDCMSGP'                         /* C/370       */  +
    'EOY.SEOYMENU'                                /* BOOKMANAGER */  +
    'DELPHI.V221.MLIB')                           /* DELPHI      */
/*  'SYS3.&SYSNAME..IOAIV410.ISMSG'                  IOA         */
/*  'ICQ.ICQMLIB')                                   ICQ         */
ALLOC FI(ISPTLIB) SHR DA('&DSNAME' +
    'ISF.V1R5M0.SISFTLIB'                         /* SDSF        */  +
/*  'GIM.SGIMTENU'                                   SMP/E       */  +
/*  'SYS1.SCBDTENU'                                  HCD         */  +
/*  'SYS1.SBPXTENU'                                  OMVS        */  +
    'SYS1.ICEISPT'                                /* DFSORT      */  +
    'SYS1.DGTTLIB'                                /* DFP/DFDSS   */  +
/*  'SYS1.SBLSTBL0'                                  IPCS        */  +
    'EOY.SEOYTENU'                                /* BOOKMANAGER */  +
    'DELPHI.V221.CMDTAB'                          /* DELPHI      */  +
/*  'ICQ.ICQTLIB'                                    ICQ         */  +
/*  'SYS3.&SYSNAME..IOAIV410.TLIB'                   IOA         */  +
    'ISP.V4R2M0.SISPTENU')                        /* ISPF        */
ALLOC FI(ISPSLIB) SHR DA( +
/*  'GIM.SGIMSENU'                                   SMP/E       */  +
/*  'SYS1.SBLSKEL0'                                  IPCS        */  +
    'SYS1.ICEISPS'                                /* DFSORT      */  +
    'SYS1.DGTSLIB'                                /* DFDSS       */  +
/*  'SYS1.HRFSKEL'                                   RACF        */  +
    'ICQ.ICQSLIB'                                 /* TSO/E       */  +
    'MAINT.LIVE.SLIB'                             /* MAKE        */  +
    'ISP.V4R2M0.SISPSLIB')                        /* ISPF        */
FREE FI(SYSPROC)
ALLOC FI(SYSPROC) SHR DA( +
    'ISP.V4R2M0.SISPEXEC'                         /* RACF ADMIN  */ +
    'ISP.V4R2M0.SISPCLIB'                         /* RACF ADMIN  */ +
/*  'SYS1.HRFCLST'                                  RACF        */  +
    'SYS2.CMDPROC'                               /* CUSTOMIZED  */  +
    'SYS2.RACFCLST'                              /* CUSTOMIZED  */  +
/*  'GIM.SGIMCLS0'                                  SMP/E CLISTS*/  +
/*  'SYS1.SBLSCLI0'                                 IPCS        */  +
/*  'SYS1.SBPXEXEC'                                 OMVS        */  +
/*  'SYS1.SCBDCLST'                                 HCD         */  +
    'SYS1.ICEISPC'                               /* DFSORT      */  +
    'SYS1.DGTCLIB'                               /* DFDSS       */  +
/*  'ICQ.ICQCCLIB'                                  TSO/E ENU   */  +
    'EDC.V2R2M0.SEDCLIST'                        /* C/370       */  +
    'EOY.SEOYCLIB'                               /* BOOKMANAGER */  +
/*  'SYS3.&SYSNAME..IOAIV410.CLIST'                 IOA         */  +
    'SDF2.V1R4M0.SDGICMD')
/* ALLOC FI(ICQAATAB) SHR DA('ICQ.ICQAATAB')            TSO/E       */
/* ALLOC FI(ICQABTAB) SHR DA('ICQ.ICQABTAB')            TSO/E       */
/* ALLOC FI(ICQANTAB) SHR DA('ICQ.ICQANTAB')            TSO/E       */
/* ALLOC FI(ICQAPTAB) SHR DA('ICQ.ICQAPTAB')            TSO/E       */
/* ALLOC FI(ICQAMTAB) SHR DA('ICQ.ICQAMTAB')            TSO/E       */
/* ALLOC FI(ICQCMTAB) SHR DA('ICQ.ICQCMTAB')            TSO/E       */
ALLOC FI(ISRCFIL)  SHR DA('SYSA.SPF.CFIL')        /* LMF         */
/* ALLOC FI(CISTABL)  SHR DA('SYS2.CIDTABL')            SMPE        */
ALLOC FI(HASPINDX) SHR DA('SYS0.&SYSNAME..HASPINDX') /* SDSF INDEX */
ERROR RETURN
PDF &PNL
./ ADD NAME=ISPSYS   0101-01016-01016-1428-00138-00138-00000-RACFCLS
PROC 0 PANEL()   /* ISPSYS */
CONTROL NOFLUSH NOMSG MAIN
PROFILE MODE WTPMSG MSGID NOPREFIX
FREE FILE(ISPLLIB,ISPPLIB,ISPMLIB,ISPTLIB,ISPSLIB, +
          ISPPROF,ISPTABL,SMPTABL)
SET &DSNAME = &SYSUID..&SYSNAME..ISPF.ISPPROF
ALLOC FI(ISPPROF) SHR  DA('&DSNAME.')
IF &LASTCC ^= 0 THEN +
  DO
    FREE FI(ISPCRTE)
    CONTROL MSG
    ATTRIB ISPCRTE DSORG(PO) RECFM(F B) LRECL(80) BLKSIZE(6160)
    ALLOC DA('&DSNAME.') SP(2,1) TRACKS DIR(2) USING(ISPCRTE) +
        FI(ISPPROF)
    IF &LASTCC = 0 THEN +
      WRITE *** ISPF PROFILE DATA SET '&DSNAME.' HAS BEEN CREATED
    ELSE +
     DO
      WRITE  *** UNABLE TO ALLOCATE ISPF PROFILE DATA SET '&DSNAME.'
      FREE FI(ISPCRTE)
      EXIT CODE(12)
     END
    FREE FI(ISPCRTE)
  END
CONTROL MSG
IF &PANEL = &STR() THEN +
  SET &PNL = PANEL(ISP@BOOL)
ELSE +
  SET &PNL = PANEL(&PANEL)
ERROR RETURN
ALLOC FI(ISPTABL) SHR DA('&DSNAME.')
ALLOC FI(SMPTABL) SHR DA('&DSNAME.')
MURPHY
ALLOC FI(ISPLLIB) SHR DA( +
    'GIM.SGIMLMD0'                                /* SMP/E       */  +
    'SYS1.SCBDHENU'                               /* HCD         */  +
    'SYS1.DFQLLIB'                                /* DFHSM       */  +
    'SYS1.ICEISPL'                                /* DFSORT      */  +
    'SYS1.DGTLLIB'                                /* DFP/DFDSS   */  +
    'DIT.V1R1M0.SDITLOAD'                         /* DITTO       */  +
    'DELPHI.V221.CMDLOAD'                         /* DELPHI      */  +
    'SYS2.TSPRINT.APFLIB')              /* DELPHI      */
/*  'SDF150.SDFLOAD')                                DELPHI      */
/*  'VPS.VPS.R62.TSO.LOAD')                     VPS         */
ALLOC FI(ISPPLIB) SHR DA( +
    'ISF.V1R5M0.SISFPLIB'                         /* SDSF        */  +
    'SYS3.&SHRNAME..IOAIV410.PANEL'               /* IOA         */  +
    'SYS2.ISPPLIB'                                /* CUSTOM      */  +
    'ISP.V4R2M0.SISPPENU'                         /* ISPF        */  +
    'SYS2.RACFPANL'                               /* CUSTOM      */  +
    'GIM.SGIMPENU'                                /* SMP/E       */  +
    'SYS1.DFQPLIB'                                /* DFHSM       */  +
    'SYS1.SCBDPENU'                               /* HCD         */  +
    'SYS1.SERBPENU'                               /* RMFIII      */  +
    'SYS1.SBPXPENU'                               /* OMVS        */  +
    'SYS1.ICEISPP'                                /* DFSORT      */  +
    'SYS1.DGTPLIB'                                /* DFP/DFDSS   */  +
    'SYS1.HRFPANL'                                /* RACF        */  +
    'SYS1.SBLSPNL0'                               /* IPCS        */  +
    'EOY.SEOYPENU'                                /* BOOKMANAGER */  +
    'DELPHI.V221.PLIB'                            /* DELPHI      */  +
    'ICQ.ICQPLIB')                                /* ICQ         */
ALLOC FI(ISPMLIB) SHR DA( +
    'ISP.V4R2M0.SISPMENU'                         /* ISPF        */  +
    'ISF.V1R5M0.SISFMLIB'                         /* SDSF        */  +
    'GIM.SGIMMENU'                                /* SMP/E       */  +
    'SYS1.DFQMLIB'                                /* DFHSM       */  +
    'SYS1.SCBDMENU'                               /* HCD         */  +
    'SYS1.SBPXMENU'                               /* OMVS        */  +
    'SYS1.SERBMENU'                               /* RMFIII      */  +
    'SYS1.ICEISPM'                                /* DFSORT      */  +
    'SYS1.DGTMLIB'                                /* DFP/DFDSS   */  +
    'SYS1.HRFMSG'                                 /* RACF        */  +
    'SYS1.SBLSMSG0'                               /* IPCS        */  +
    'SYS2.ISPMENU'                                /* CUSTOM      */  +
    'EDC.V2R2M0.SEDCMSGP'                         /* C/370       */  +
    'EOY.SEOYMENU'                                /* BOOKMANAGER */  +
    'DELPHI.V221.MLIB'                            /* DELPHI      */  +
    'SYS3.&SHRNAME..IOAIV410.ISMSG'               /* IOA         */  +
    'ICQ.ICQMLIB')                                /* ICQ         */
ALLOC FI(ISPTLIB) SHR DA('&DSNAME' +
    'ISF.V1R5M0.SISFTLIB'                         /* SDSF        */  +
    'GIM.SGIMTENU'                                /* SMP/E       */  +
    'SYS1.SCBDTENU'                               /* HCD         */  +
    'SYS1.SERBTENU'                               /* RMFIII      */  +
    'SYS1.SBPXTENU'                               /* OMVS        */  +
    'SYS1.ICEISPT'                                /* DFSORT      */  +
    'SYS1.DGTTLIB'                                /* DFP/DFDSS   */  +
    'SYS1.SBLSTBL0'                               /* IPCS        */  +
    'EOY.SEOYTENU'                                /* BOOKMANAGER */  +
    'DELPHI.V221.CMDTAB'                          /* DELPHI      */  +
    'ICQ.ICQTLIB'                                 /* ICQ         */  +
    'SYS3.&SHRNAME..IOAIV410.TLIB'                /* IOA         */  +
    'ISP.V4R2M0.SISPTENU')                        /* ISPF        */
ALLOC FI(ISPSLIB) SHR DA( +
    'GIM.SGIMSENU'                                /* SMP/E       */  +
    'SYS1.SBLSKEL0'                               /* IPCS        */  +
    'SYS1.ICEISPS'                                /* DFSORT      */  +
    'SYS1.DGTSLIB'                                /* DFDSS       */  +
    'SYS1.HRFSKEL'                                /* RACF        */  +
    'ICQ.ICQSLIB'                                 /* TSO/E       */  +
    'MAINT.LIVE.SLIB'                             /* MAKE        */  +
    'ISP.V4R2M0.SISPSLIB')                        /* ISPF        */
FREE FI(SYSPROC)
ALLOC FI(SYSPROC) SHR DA( +
    'ISP.V4R2M0.SISPEXEC'                         /* RACF ADMIN  */ +
    'ISP.V4R2M0.SISPCLIB'                         /* RACF ADMIN  */ +
    'SYS1.HRFCLST'                               /* RACF        */  +
    'SYS2.CMDPROC'                               /* CUSTOMIZED  */  +
    'SYS2.RACFCLST'                              /* CUSTOMIZED  */  +
    'GIM.SGIMCLS0'                               /* SMP/E CLISTS*/  +
    'SYS1.SBLSCLI0'                              /* IPCS        */  +
    'SYS1.SBPXEXEC'                              /* OMVS        */  +
    'SYS1.SCBDCLST'                              /* HCD         */  +
    'SYS1.ICEISPC'                               /* DFSORT      */  +
    'SYS1.DGTCLIB'                               /* DFDSS       */  +
    'SYS1.SERBCLS'                               /* RMFIII      */  +
    'ICQ.ICQCCLIB'                               /* TSO/E ENU   */  +
    'EDC.V2R2M0.SEDCLIST'                        /* C/370       */  +
    'EOY.SEOYCLIB'                               /* BOOKMANAGER */  +
    'SYS3.&SHRNAME..IOAIV410.CLIST'              /* IOA         */  +
    'SDF2.V1R4M0.SDGICMD')
ALLOC FI(ICQAATAB) SHR DA('ICQ.ICQAATAB')         /* TSO/E       */
ALLOC FI(ICQABTAB) SHR DA('ICQ.ICQABTAB')         /* TSO/E       */
ALLOC FI(ICQANTAB) SHR DA('ICQ.ICQANTAB')         /* TSO/E       */
ALLOC FI(ICQAPTAB) SHR DA('ICQ.ICQAPTAB')         /* TSO/E       */
ALLOC FI(ICQAMTAB) SHR DA('ICQ.ICQAMTAB')         /* TSO/E       */
ALLOC FI(ICQCMTAB) SHR DA('ICQ.ICQCMTAB')         /* TSO/E       */
/* ALLOC FI(DVDMSL)   SHR DA('SDF150.MSL')              SDF150      */
/* ALLOC FI(DVDMSLP)  SHR DA('SDF150.MSLP')             SDF150      */
/* ALLOC FI(DVDMSLT)  SHR DA('SDF150.MSLT')             SDF150      */
/* ALLOC FI(DVDTML)   SHR DA('SDF150.TML')              SDF150      */
/* ALLOC FI(DVDITF)   SHR DA('SDF150.ITF')              SDF150      */
ALLOC FI(ISRCFIL)  SHR DA('SYSA.SPF.CFIL')        /* LMF         */
ALLOC FI(CISTABL)  SHR DA('SYS2.CIDTABL')         /* SMPE        */
ALLOC FI(HASPINDX) SHR DA('SYS0.&SHRNAME..HASPINDX') /* SDSF INDEX */
ERROR RETURN
PDF &PNL
./ ADD NAME=ISP390   0101-01016-01016-1428-01049-01049-00000-RACFCLS
/* ****************************Rexx**********************************/
/* SAPD SHARED LOGON PROC */
/* ****************************Rexx**********************************/

"PROFILE NOPREF MODE WTPMSG MSGID"
X = MSG('OFF')
UID = SYSVAR(SYSUID)
PROC = SYSVAR(SYSPROC)
TSOVER = SYSVAR(SYSTSOE)    /* TEST FOR OS/390 */
GETSYSN
IF RC = 0 THEN SYSNAME=BIGERROR
IF RC = 1 THEN SYSNAME=PRDA
IF RC = 2 THEN SYSNAME=PRDB
IF RC = 3 THEN SYSNAME=PRDC
IF RC = 4 THEN SYSNAME=PRDD
IF RC = 5 THEN SYSNAME=PRDE
IF RC = 6 THEN SYSNAME=TSTF
IF RC = 7 THEN SYSNAME=TSTG
IF RC = 8 THEN SYSNAME=TST1
SHRNAME = SYSNAME
IF RC = 4 THEN SHRNAME=PRDE
IF RC = 7 THEN SHRNAME=PRDE
IF RC = 8 THEN SHRNAME=PRDE

SAY 'HAVE A NICE DAY !!!'
SAY 'BUSY ALLOCATING FILES, PLEASE WAIT .....'
SAY ''
MURPHY
IF (PROC = "DIENADMN") |,
   (PROC = "NETADMN") |,
   (PROC = "OPERADMN") |,
   (PROC = "RADADMN") |,
   (PROC = "MEDADMN") |,
   (PROC = "COMADMN") |,
   (PROC = "COMRESU") |,
   (PROC = "SPFTHE") |,
   (PROC = "PROGADMN")
THEN DO
   SAY ' '
   SAY '                 If you have any problems'
   SAY '                 with administering USERIDs'
   SAY '                 please phone'
   SAY ' '
   SAY '                 POTTIE      ext 120676 or'
   SAY '                             (012) 4210676'
   SAY '                 FAX ===>>   ext 120606 or <<==='
   SAY '                             (012) 4210606 <<==='
END

/*****************************************/
/* ALLOC ISPFPROF                        */
/*****************************************/
DSNAME = "'"UID"."SYSNAME".ISPF.ISPPROF'"
"FREE FI(ISPPROF)"
RC = LISTDSI(DSNAME)
IF RC > 4 THEN
DO
 X = MSG('ON')
 "FREE FI(ISPCRTE)"
 "ATTRIB ISPCRTE DSORG(PO) RECFM(F B) LRECL(80) BLKSIZE(18400)"
 A1='"ALLOC DA(' || DSNAME || ') SP(10,1) TRACKS DIR(10)',
 || 'USING(ISPCRTE) FI(ISPPROF)"'
 SAY A1
 INTERPRET A1
 IF RC = 0 THEN
  SAY  "ISPF PROFILE DATA SET" DSNAME "HAS BEEN CREATED"
 ELSE
 DO
   SAY  "UNABLE TO ALLOCATE ISPF PROFILE DATA SET" DSNAME
   "FREE FI(ISPCRTE)"
   EXIT 12
 END
 "FREE FI(ISPCRTE)"
END
A1 = '"ALLOC FI(ISPPROF) SHR DA('||DSNAME||')"'
A2 = '"ALLOC FI(ISPTABL) SHR DA('||DSNAME||')"'
A3 = '"ALLOC FI(ISPTLIB) SHR DA('||DSNAME||')"'
INTERPRET A1
INTERPRET A2
INTERPRET A3

IF TSOVER = 2050 THEN DO
/********************************/            /* Changes for OS/390 */
/* SPECIFY DATASETS FOR SYSEXEC */            /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
E_SMC    = 'SYMCHK.EXEC.NEW'                  /* CHANGES FOR OS/390 */
E_ISF    = 'ISF.SISFEXEC'                     /* CHANGES FOR OS/390 */
E_BFS    = 'BFS.LS130.SBFSPROC'               /* CHANGES FOR OS/390 */
E_EWX    = 'EWX.V5R2M0.SEWXEXEC'              /* CHANGES FOR OS/390 */
E_ANF    = 'ANF.SANFEXEC'                     /* CHANGES FOR OS/390 */
E_SOMMVS = 'SOMMVS.SGOSREXX'                  /* CHANGES FOR OS/390 */
E_SBP    = 'SYS1.SBPXEXEC'                    /* CHANGES FOR OS/390 */
E_DCE    = 'DCE.V1R1M0.SEUVEXEC'              /* CHANGES FOR OS/390 */
E_SEDG   = 'SYS1.SEDGEXE1'                    /* CHANGES FOR OS/390 */
E_FFST   = 'FFST.V120ESA.SEPWSRC1'            /* CHANGES FOR OS/390 */
E_ISP    = 'ISP.SISPEXEC'                     /* Changes for OS/390 */
                                              /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
/* SPECIFY DATASETS FOR SYSPROC */            /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
C_ISP2  = 'ISP.SISPCLIB'                      /* Changes for OS/390 */
C_RAC3  = 'SYS1.HRFCLST'                      /* Changes for OS/390 */
C_CUS1  = 'SYS2.CMDPROC'                      /* Changes for OS/390 */
C_CUS2  = "'SYS2."SHRNAME".CMDPROC'"          /* Changes for OS/390 */
C_CUS3  = 'SYS2.PRDC.CMDPROC'                 /* Changes for OS/390 */
C_OPS1  = 'OPS.CMDPROC'                       /* Changes for OS/390 */
C_OPS2  = "'OPS."SHRNAME".CMDPROC'"           /* Changes for OS/390 */
C_RAC1  = 'SYS2.RACFCLST'                     /* Changes for OS/390 */
C_RAC2  = "'SYS2."SHRNAME".RACFCLST'"         /* Changes for OS/390 */
C_SMPE  = 'GIM.SGIMCLS0'                      /* Changes for OS/390 */
C_IPCS  = 'SYS1.SBLSCLI0'                     /* Changes for OS/390 */
C_HCD   = 'SYS1.SCBDCLST'                     /* Changes for OS/390 */
C_DFSRT = 'SYS1.ICEISPC'                      /* Changes for OS/390 */
C_DFDSS = 'SYS1.DGTCLIB'                      /* Changes for OS/390 */
C_RMF   = 'SYS1.SERBCLS'                      /* Changes for OS/390 */
C_ICQ   = 'ICQ.ICQCCLIB'                      /* Changes for OS/390 */
C_EDC   = 'EDC.V2R2M0.SEDCLIST'               /* Changes for OS/390 */
C_BKM   = 'EOY.SEOYCLIB'                      /* Changes for OS/390 */
C_IOA1  = "'SYS3."SHRNAME".IOAIV410.CLIST'"   /* Changes for OS/390 */
C_IOA2  = 'SYS3.IOA.CLIST'                    /* Changes for OS/390 */
C_IOA3  = 'SYS3.IOA500.CLIST'                 /* Changes for OS/390 */
C_HACC  = 'SYS3.ZHC240.ISPCLIB'               /* Changes for OS/390 */
C_SDF   = 'SDF2.V1R4M0.SDGICMD'               /* Changes for OS/390 */
C_OMVS  = 'SYS1.SBPXEXEC'                     /* Changes for OS/390 */
C_OSTA  = 'SYS3.OSTAR.CLIST'                  /* Changes for OS/390 */
C_CDCU  = ''                                  /* Changes for OS/390 */
                                              /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
/* SPECIFY DATASETS FOR ISPLLIB */            /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
L_ICE   = 'SYS1.ICEDGTL'                      /* CHANGES FOR OS/390 */
L_CBC1  = 'CBC.SCBCCMP'                       /* CHANGES FOR OS/390 */
L_CBC2  = 'CBC.SCLBDLL'                       /* CHANGES FOR OS/390 */
L_SMP   = 'GIM.SGIMLMD0'                      /* Changes for OS/390 */
L_HCD   = 'SYS1.SCBDHENU'                     /* Changes for OS/390 */
L_HSM   = 'SYS1.DFQLLIB'                      /* Changes for OS/390 */
L_DFSRT = 'SYS1.ICEISPL'                      /* Changes for OS/390 */
L_DFDSS = 'SYS1.DGTLLIB'                      /* Changes for OS/390 */
L_CDCU  = ''                                  /* Changes for OS/390 */
L_DITTO = 'DIT.V1R1M0.SDITLOAD'               /* Changes for OS/390 */
L_DELP  = 'DELPHI.V221.CMDLOAD'               /* Changes for OS/390 */
L_HACC1 = 'SYS3.ZHC240.ISPLOAD'               /* Changes for OS/390 */
L_HACC2 = 'SYS3.ZHC240.LOAD'                  /* Changes for OS/390 */
L_SDF   = 'SDF150.SDFLOAD'                    /* Changes for OS/390 */
L_ISP   = 'ISP.SISPLOAD'                      /* Changes for OS/390 */
L_ISF   = ''                                  /* Changes for OS/390 */
L_MAIN  = "'MAINT."SHRNAME".LIVE.LOAD'"       /* Changes for OS/390 */
                                              /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
/* SPECIFY DATASETS FOR ISPPLIB */            /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
P_SMC    = 'SYMCHK.PANELS'                    /* CHANGES FOR OS/390 */
P_IPO1   = 'IPO1.ISPPLIB'                     /* CHANGES FOR OS/390 */
P_BFS    = 'BFS.LS130.SBFSPLIB'               /* CHANGES FOR OS/390 */
P_EWX    = 'EWX.V5R2M0.SEWXPLIB'              /* CHANGES FOR OS/390 */
P_ANF    = 'ANF.SANFPLIB'                     /* CHANGES FOR OS/390 */
P_CBC    = 'CBC.SCBCPNL'                      /* CHANGES FOR OS/390 */
P_SBDT   = 'SYS1.SBDTPNL0'                    /* CHANGES FOR OS/390 */
P_SOMMVS = 'SOMMVS.SGOSPNLS'                  /* CHANGES FOR OS/390 */
P_GDDM   = 'GDDM.SADMPNL'                     /* CHANGES FOR OS/390 */
P_SEDG   = 'SYS1.SEDGPENU'                    /* CHANGES FOR OS/390 */
P_ICE    = 'SYS1.ICEDGTP'                     /* CHANGES FOR OS/390 */
P_TCPIP  = 'TCPIP.SEZAPENU'                   /* CHANGES FOR OS/390 */
P_FFST   = 'FFST.V120ESA.SEPWPENU'            /* CHANGES FOR OS/390 */
P_SDSF   = 'ISF.SISFPLIB'                     /* Changes for OS/390 */
P_IOA    = "'SYS3."SHRNAME".IOAIV410.PANEL'"  /* Changes for OS/390 */
P_IOA1   = 'SYS3.IOA.PANEL'                   /* Changes for OS/390 */
P_IOA2   = 'SYS3.IOA500.PANEL'                /* Changes for OS/390 */
P_CUS1   = 'SYS2.ISPPLIB'                     /* Changes for OS/390 */
P_CUS2   = "'SYS2."SHRNAME".ISPPLIB'"         /* Changes for OS/390 */
P_ISPF   = 'ISP.SISPPENU'                     /* Changes for OS/390 */
P_CUS3   = 'SYS2.RACFPANL'                    /* Changes for OS/390 */
P_CUS4   = "'SYS2."SHRNAME".RACFPANL'"        /* Changes for OS/390 */
P_CUS5   = 'SYS2.ISP.OPSPENU'                 /* Changes for OS/390 */
P_CUS6   = 'SYS2.ISP.PRGPENU'                 /* Changes for OS/390 */
P_CUS7   = 'SYS2.ISP.NETPENU'                 /* Changes for OS/390 */
P_SMP    = 'GIM.SGIMPENU'                     /* Changes for OS/390 */
P_HSM    = 'SYS1.DFQPLIB'                     /* Changes for OS/390 */
P_HCD    = 'SYS1.SCBDPENU'                    /* Changes for OS/390 */
P_RMF3   = 'SYS1.SERBPENU'                    /* Changes for OS/390 */
P_OMVS   = 'SYS1.SBPXPENU'                    /* Changes for OS/390 */
P_DFSRT  = 'SYS1.ICEISPP'                     /* Changes for OS/390 */
P_DFDSS  = 'SYS1.DGTPLIB'                     /* Changes for OS/390 */
P_RACF   = 'SYS1.HRFPANL'                     /* Changes for OS/390 */
P_IPCS   = 'SYS1.SBLSPNL0'                    /* Changes for OS/390 */
P_BKM    = 'EOY.SEOYPENU'                     /* Changes for OS/390 */
P_DELP   = 'DELPHI.V221.PLIB'                 /* Changes for OS/390 */
P_CDCU   = ''                                 /* Changes for OS/390 */
P_HACC   = 'SYS3.ZHC240.ISPPLIB'              /* Changes for OS/390 */
P_ICQ    = 'ICQ.ICQPLIB'                      /* Changes for OS/390 */
P_LMF    = 'SYS2.LMF.PLIB'                    /* Changes for OS/390 */
P_MAIN   = 'MAINT.LIVE.PLIB'                  /* Changes for OS/390 */
                                              /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
/* SPECIFY DATASETS FOR ISPMLIB */            /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
M_ANF    = 'ANF.SANFMLIB'                     /* Changes for OS/390 */
M_CBC    = 'CBC.SCBCIMG'                      /* Changes for OS/390 */
M_EWX    = 'EWX.V5R2M0.SEWXMLIB'              /* Changes for OS/390 */
M_SBD    = 'SYS1.SBDTMSG'                     /* Changes for OS/390 */
M_SOMMVS = 'SOMMVS.SGOSMSGS'                  /* Changes for OS/390 */
M_GDDM   = 'GDDM.SADMMSG'                     /* Changes for OS/390 */
M_SEDG   = 'SYS1.SEDGMENU'                    /* Changes for OS/390 */
M_ICE    = 'SYS1.ICEDGTM'                     /* Changes for OS/390 */
M_TCPIP  = 'TCPIP.SEZAMENU'                   /* Changes for OS/390 */
M_ISPF   = 'ISP.SISPMENU'                     /* Changes for OS/390 */
M_SDSF   = 'ISF.SISFMLIB'                     /* Changes for OS/390 */
M_SMP    = 'GIM.SGIMMENU'                     /* Changes for OS/390 */
M_HSM    = 'SYS1.DFQMLIB'                     /* Changes for OS/390 */
M_HCD    = 'SYS1.SCBDMENU'                    /* Changes for OS/390 */
M_OMVS   = 'SYS1.SBPXMENU'                    /* Changes for OS/390 */
M_RMF3   = 'SYS1.SERBMENU'                    /* Changes for OS/390 */
M_DFSRT  = 'SYS1.ICEISPM'                     /* Changes for OS/390 */
M_DFDSS  = 'SYS1.DGTMLIB'                     /* Changes for OS/390 */
M_RACF   = 'SYS1.HRFMSG'                      /* Changes for OS/390 */
M_IPCS   = 'SYS1.SBLSMSG0'                    /* Changes for OS/390 */
M_CUS1   = 'SYS2.ISPMENU'                     /* Changes for OS/390 */
M_C370   = 'EDC.V2R2M0.SEDCMSGP'              /* Changes for OS/390 */
M_BKM    = 'EOY.SEOYMENU'                     /* Changes for OS/390 */
M_DELP   = 'DELPHI.V221.MLIB'                 /* Changes for OS/390 */
M_CDCU   = ''                                 /* Changes for OS/390 */
M_IOA1   = "'SYS3."SHRNAME".IOAIV410.ISMSG'"  /* Changes for OS/390 */
M_IOA2   = 'SYS3.IOA.ISMSG'                   /* Changes for OS/390 */
M_IOA3   = 'SYS3.IOA500.ISMSG'                /* Changes for OS/390 */
M_HACC   = 'SYS3.ZHC240.ISPMLIB'              /* Changes for OS/390 */
M_ICQ    = 'ICQ.ICQMLIB'                      /* Changes for OS/390 */
M_MAIN   = 'MAINT.LIVE.MLIB'                  /* Changes for OS/390 */
M_RAC1   = 'SYS2.RACFMENU'                    /* Changes for OS/390 */
                                              /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
/* SPECIFY DATASETS FOR ISPTLIB */            /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
T_DGT   = 'SYS1.DGTTLIB'                      /* CHANGES FOR OS/390 */
T_SERBT = 'SYS1.SERBT'                        /* CHANGES FOR OS/390 */
T_BFS   = 'BFS.LS130.SBFSTLIB'                /* CHANGES FOR OS/390 */
T_EWX   = 'EWX.V5R2M0.SEWXTLIB'               /* CHANGES FOR OS/390 */
T_ICQ1  = 'ICQ.ICQTABLS'                      /* CHANGES FOR OS/390 */
T_SEDG  = 'SYS1.SEDGTBL1'                     /* CHANGES FOR OS/390 */
T_ICE   = 'SYS1.ICEDGTT'                      /* CHANGES FOR OS/390 */
T_SDSF  = 'ISF.SISFTLIB'                      /* Changes for OS/390 */
T_SMP   = 'GIM.SGIMTENU' DSNAME               /* Changes for OS/390 */
T_HCD   = 'SYS1.SCBDTENU'                     /* Changes for OS/390 */
T_RMF3  = 'SYS1.SERBTENU'                     /* Changes for OS/390 */
T_OMVS  = 'SYS1.SBPXTENU'                     /* Changes for OS/390 */
T_DFSRT = 'SYS1.ICEISPT'                      /* Changes for OS/390 */
T_DFDSS = 'SYS1.DGTTLIB'                      /* Changes for OS/390 */
T_IPCS  = 'SYS1.SBLSTBL0'                     /* Changes for OS/390 */
T_BKM   = 'EOY.SEOYTENU'                      /* Changes for OS/390 */
T_DELP  = 'DELPHI.V221.CMDTAB'                /* Changes for OS/390 */
T_ICQ   = 'ICQ.ICQTLIB'                       /* Changes for OS/390 */
T_CDCU  = ''                                  /* Changes for OS/390 */
T_IOA1  = "'SYS3."||SHRNAME||".IOAIV410.TLIB'"/* Changes for OS/390 */
T_IOA2  = 'SYS3.IOA.TLIB'                     /* Changes for OS/390 */
T_IOA3  = 'SYS3.IOA500.PANEL'                 /* Changes for OS/390 */
T_HACC  = 'SYS3.ZHC240.ISPTLIB'               /* Changes for OS/390 */
T_ISPF  = 'ISP.SISPTENU'                      /* Changes for OS/390 */
T_RAC1  = 'SYS2.RACFTABL'                     /* Changes for OS/390 */
                                              /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
/* SPECIFY DATASETS FOR ISPSLIB */            /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
S_EWX    = 'EWX.V5R2M0.SEWXSLIB'              /* CHANGES FOR OS/390 */
S_CBC    = 'CBC.SCBCSKL'                      /* CHANGES FOR OS/390 */
S_SOMMVS = 'SOMMVS.SGOSSKEL'                  /* CHANGES FOR OS/390 */
S_SEDG   = 'SYS1.SEDGSKL1'                    /* CHANGES FOR OS/390 */
S_ICE    = 'SYS1.ICEDGTS'                     /* CHANGES FOR OS/390 */
S_SMP    = 'GIM.SGIMSENU'                     /* Changes for OS/390 */
S_IPCS   = 'SYS1.SBLSKEL0'                    /* Changes for OS/390 */
S_DFSRT  = 'SYS1.ICEISPS'                     /* Changes for OS/390 */
S_DFDSS  = 'SYS1.DGTSLIB'                     /* Changes for OS/390 */
S_RACF   = 'SYS1.HRFSKEL'                     /* Changes for OS/390 */
S_ICQ    = 'ICQ.ICQSLIB'                      /* Changes for OS/390 */
S_CDCU   = ' '                                /* Changes for OS/390 */
S_IOA    = 'SYS3.IOA500.JCL'                  /* Changes for OS/390 */
S_CUS1   = 'MAINT.LIVE.SLIB'                  /* Changes for OS/390 */
S_ISPF   = 'ISP.SISPSLIB'                     /* Changes for OS/390 */
S_ISF    = 'ISF.SISFSLIB'                     /* Changes for OS/390 */
S_ISP2   = 'ISP.SISPSENU'                     /* Changes for OS/390 */
S_RAC1   = 'SYS2.RACFSLIB'                    /* Changes for OS/390 */
                                              /* Changes for OS/390 */
/*******************************/             /* Changes for OS/390 */
/* SPECIFY DATASETS FOR SYSLOG */             /* Changes for OS/390 */
/*******************************/             /* Changes for OS/390 */
H_ISF  = "'SYS0.HASPINDX'"                    /* Changes for OS/390 */

/*******************************/             /* Changes for OS/390 */
/* SPECIFY DATASETS FOR SYSLOG */             /* Changes for OS/390 */
/*******************************/             /* Changes for OS/390 */
TCPIP_DATA = "'TCPIP.DATA.TCPIP("SYSNAME")'"

END
ELSE DO

/********************************/
/* SPECIFY DATASETS FOR SYSEXEC */
/********************************/
E_ISP    = 'ISP.V4R2M0.SISPEXEC'
E_SMC    = ''
E_ISF    = ''
E_BFS    = ''
E_EWX    = ''
E_ANF    = ''
E_SOMMVS = ''
E_SBP    = ''
E_DCE    = ''
E_SEDG   = ''
E_FFST   = ''

/********************************/
/* SPECIFY DATASETS FOR SYSPROC */
/********************************/
C_ISP2  = 'ISP.V4R2M0.SISPCLIB'
C_RAC3  = 'SYS1.HRFCLST'
C_CUS1  = 'SYS2.CMDPROC'
C_CUS2  = "'SYS2."SHRNAME".CMDPROC'"
C_CUS3  = 'SYS2.PRDC.CMDPROC'
C_OPS1  = 'OPS.CMDPROC'
C_OPS2  = "'OPS."SHRNAME".CMDPROC'"
C_RAC1  = 'SYS2.RACFCLST'
C_RAC2  = "'SYS2."SHRNAME".RACFCLST'"
C_SMPE  = 'GIM.SGIMCLS0'
C_IPCS  = 'SYS1.SBLSCLI0'
C_HCD   = 'SYS1.SCBDCLST'
C_DFSRT = 'SYS1.ICEISPC'
C_DFDSS = 'SYS1.DGTCLIB'
C_RMF   = 'SYS1.SERBCLS'
C_ICQ   = 'ICQ.ICQCCLIB'
C_EDC   = 'EDC.V2R2M0.SEDCLIST'
C_BKM   = 'EOY.SEOYCLIB'
C_IOA1  = "'SYS3."SHRNAME".IOAIV410.CLIST'"
C_IOA2  = 'SYS3.IOA.CLIST'
C_IOA3  = 'SYS3.IOA500.CLIST'
C_HACC  = 'SYS3.ZHC240.ISPCLIB'
C_SDF   = 'SDF2.V1R4M0.SDGICMD'
C_OMVS  = 'SYS1.SBPXEXEC'
C_CDCU  = 'CDCU.DCZDEXE'
C_OSTA  = 'SYS3.OSTAR.CLIST'

/********************************/
/* SPECIFY DATASETS FOR ISPLLIB */
/********************************/
L_ICE   = ''
L_CBC1  = ''
L_CBC2  = ''
L_SMP   = 'GIM.SGIMLMD0'
L_HCD   = 'SYS1.SCBDHENU'
L_HSM   = 'SYS1.DFQLLIB'
L_DFSRT = 'SYS1.ICEISPL'
L_DFDSS = 'SYS1.DGTLLIB'
L_CDCU  = 'CDCU.DCZDLOD'
L_DITTO = 'DIT.V1R1M0.SDITLOAD'
L_DELP  = 'DELPHI.V221.CMDLOAD'
L_HACC1 = 'SYS3.ZHC240.ISPLOAD'
L_HACC2 = 'SYS3.ZHC240.LOAD'
L_SDF   = 'SDF150.SDFLOAD'
L_ISP   = 'ISP.V4R2M0.SISPLOAD'
L_ISF   = ''
L_MAIN  = "'MAINT."SHRNAME".LIVE.LOAD'"

/********************************/
/* SPECIFY DATASETS FOR ISPPLIB */
/********************************/
P_smc    = ''
P_IPO1   = ''
P_BFS    = ''
P_EWX    = ''
P_ANF    = ''
P_CBC    = ''
P_SBDT   = ''
P_SOMMVS = ''
P_GDDM   = ''
P_SEDG   = ''
P_ICE    = ''
P_TCPIP  = ''
P_FFST   = ''
P_SDSF   = 'ISF.V1R5M0.SISFPLIB'
P_IOA    = "'SYS3."SHRNAME".IOAIV410.PANEL'"
P_IOA1   = 'SYS3.IOA.PANEL'
P_IOA2   = 'SYS3.IOA500.PANEL'
P_CUS1   = 'SYS2.ISPPLIB'
P_CUS2   = "'SYS2."SHRNAME".ISPPLIB'"
P_ISPF   = 'ISP.V4R2M0.SISPPENU'
P_CUS3   = 'SYS2.RACFPANL'
P_CUS4   = "'SYS2."SHRNAME".RACFPANL'"
P_CUS5   = 'SYS2.ISP.OPSPENU'
P_CUS6   = 'SYS2.ISP.PRGPENU'
P_CUS7   = 'SYS2.ISP.NETPENU'
P_SMP    = 'GIM.SGIMPENU'
P_HSM    = 'SYS1.DFQPLIB'
P_HCD    = 'SYS1.SCBDPENU'
P_RMF3   = 'SYS1.SERBPENU'
P_OMVS   = 'SYS1.SBPXPENU'
P_DFSRT  = 'SYS1.ICEISPP'
P_DFDSS  = 'SYS1.DGTPLIB'
P_RACF   = 'SYS1.HRFPANL'
P_IPCS   = 'SYS1.SBLSPNL0'
P_BKM    = 'EOY.SEOYPENU'
P_DELP   = 'DELPHI.V221.PLIB'
P_CDCU   = 'CDCU.DCZDPLB'
P_HACC   = 'SYS3.ZHC240.ISPPLIB'
P_ICQ    = 'ICQ.ICQPLIB'
P_LMF    = 'SYS2.LMF.PLIB'
P_MAIN   = 'MAINT.LIVE.PLIB'

/********************************/
/* SPECIFY DATASETS FOR ISPMLIB */
/********************************/
M_ANF    = ''
M_CBC    = ''
M_EWX    = ''
M_SBD    = ''
M_SOMMVS = ''
M_GDDM   = ''
M_SEDG   = ''
M_ICE    = ''
M_TCPIP  = ''
M_ISPF   = 'ISP.V4R2M0.SISPMENU'
M_SDSF   = 'ISF.V1R5M0.SISFMLIB'
M_SMP    = 'GIM.SGIMMENU'
M_HSM    = 'SYS1.DFQMLIB'
M_HCD    = 'SYS1.SCBDMENU'
M_OMVS   = 'SYS1.SBPXMENU'
M_RMF3   = 'SYS1.SERBMENU'
M_DFSRT  = 'SYS1.ICEISPM'
M_DFDSS  = 'SYS1.DGTMLIB'
M_RACF   = 'SYS1.HRFMSG'
M_IPCS   = 'SYS1.SBLSMSG0'
M_CUS1   = 'SYS2.ISPMENU'
M_C370   = 'EDC.V2R2M0.SEDCMSGP'
M_BKM    = 'EOY.SEOYMENU'
M_DELP   = 'DELPHI.V221.MLIB'
M_CDCU   = 'CDCU.DCZDMLB'
M_IOA1   = "'SYS3."SHRNAME".IOAIV410.ISMSG'"
M_IOA2   = 'SYS3.IOA.ISMSG'
M_IOA3   = 'SYS3.IOA500.ISMSG'
M_HACC   = 'SYS3.ZHC240.ISPMLIB'
M_ICQ    = 'ICQ.ICQMLIB'
M_MAIN   = 'MAINT.LIVE.MLIB'
M_RAC1   = 'SYS2.RACFMENU'

/********************************/
/* SPECIFY DATASETS FOR ISPTLIB */
/********************************/
T_DGT    = ''
T_SERBT  = ''
T_BFS    = ''
T_EWX    = ''
T_ICQ1   = ''
T_SEDG   = ''
T_ICE    = ''
T_SDSF   = 'ISF.V1R5M0.SISFTLIB'
T_SMP    = 'GIM.SGIMTENU' DSNAME
T_HCD    = 'SYS1.SCBDTENU'
T_RMF3   = 'SYS1.SERBTENU'
T_OMVS   = 'SYS1.SBPXTENU'
T_DFSRT  = 'SYS1.ICEISPT'
T_DFDSS  = 'SYS1.DGTTLIB'
T_IPCS   = 'SYS1.SBLSTBL0'
T_BKM    = 'EOY.SEOYTENU'
T_DELP   = 'DELPHI.V221.CMDTAB'
T_ICQ    = 'ICQ.ICQTLIB'
T_CDCU   = 'CDCU.DCZDTLB'
T_IOA1   = "'SYS3."||SHRNAME||".IOAIV410.TLIB'"
T_IOA2   = 'SYS3.IOA.TLIB'
T_IOA3   = 'SYS3.IOA500.PANEL'
T_HACC   = 'SYS3.ZHC240.ISPTLIB'
T_ISPF   = 'ISP.V4R2M0.SISPTENU'
T_RAC1   = 'SYS2.RACFTABL'

/********************************/
/* SPECIFY DATASETS FOR ISPSLIB */
/********************************/
S_EWX    = ''
S_CBC    = ''
S_SOMMVS = ''
S_SEDG   = ''
S_ICE    = ''
S_ISF    = ''
S_SMP    = 'GIM.SGIMSENU'
S_IPCS   = 'SYS1.SBLSKEL0'
S_DFSRT  = 'SYS1.ICEISPS'
S_DFDSS  = 'SYS1.DGTSLIB'
S_RACF   = 'SYS1.HRFSKEL'
S_ICQ    = 'ICQ.ICQSLIB'
S_CDCU   = 'CDCU.DCZDSLB'
S_CUS1   = 'MAINT.LIVE.SLIB'
S_IOA    = 'SYS3.IOA500.JCL'
S_ISPF   = 'ISP.V4R2M0.SISPSLIB'
S_ISP2   = 'ISP.V4R2M0.SISPSENU'
S_RAC1   = 'SYS2.RACFSLIB'

/*******************************/
/* SPECIFY DATASETS FOR SYSLOG */
/*******************************/
H_ISF    = "'SYS0."SYSNAME".HASPINDX'"

END

/*********************************/
/*  SYSTEMS USERS                */
/*********************************/
IF (PROC = "SPFBOOL") THEN
DO
 IF SYSNAME = 'PRDD' THEN
    SYSPROC = C_ISP2 C_RAC3 C_CUS1 C_RAC1,
    C_SMPE C_IPCS C_HCD C_DFSRT C_DFDSS C_RMF C_ICQ,
    C_EDC C_BKM C_IOA3 C_IOA2 C_IOA1 C_HACC C_SDF C_OMVS C_CDCU C_OSTA
 ELSE
    SYSPROC = C_ISP2 C_RAC3 C_CUS1 C_RAC1,
    C_SMPE C_IPCS C_HCD C_DFSRT C_DFDSS C_RMF C_ICQ,
    C_EDC C_BKM C_IOA1 C_IOA2 C_HACC C_SDF C_OMVS C_CDCU C_OSTA
 SYSEXEC = E_ISP E_SMC E_ISF E_BFS E_EWX E_ANF E_SOMMVS E_SBP,
    E_DCE E_SEDG E_FFST
 IF SUBSTR(UID,1,4) = 'SYS0' THEN
    ISPLLIB = L_SMP L_HCD L_HSM L_DFSRT L_DFDSS L_CDCU L_DITTO L_DELP,
    L_HACC1 L_HACC2 L_MAIN L_CBC1 L_CBC2 L_ICE L_ISF
 ELSE
    ISPLLIB = L_SMP L_HCD L_HSM L_DFSRT L_DFDSS L_CDCU L_DITTO L_DELP,
    L_HACC1 L_HACC2 L_MAIN L_CBC1 L_CBC2 L_ICE L_ISF
 IF SYSNAME = 'PRDD' THEN
    ISPPLIB = P_SDSF P_LMF P_IOA2 P_IOA1 P_IOA P_CUS1 P_CUS3,
    P_ISPF P_SMP P_HSM P_HCD P_RMF3 P_OMVS P_DFSRT P_DFDSS,
    P_RACF P_IPCS P_BKM P_DELP P_CDCU P_HACC P_ICQ P_IPO1,
    P_BFS P_EWX P_ANF P_CBC P_SBDT P_SOMMVS P_GDDM P_SEDG,
    P_ICE P_TCPIP P_FFST P_SMC
 ELSE
    ISPPLIB = P_DFDSS P_SDSF P_LMF P_IOA P_IOA1 P_CUS1,
    P_CUS3 P_ISPF P_SMP P_HSM P_HCD P_RMF3 P_OMVS P_DFSRT,
    P_RACF P_IPCS P_BKM P_DELP P_CDCU P_HACC P_ICQ P_IPO1,
    P_BFS P_EWX P_ANF P_CBC P_SBDT P_SOMMVS P_GDDM P_SEDG,
    P_ICE P_TCPIP P_FFST P_SMC
 IF SYSNAME = 'PRDD' THEN
    ISPMLIB = M_ISPF M_SDSF M_SMP M_HSM M_HCD M_OMVS M_RMF3 M_DFSRT,
    M_DFDSS M_RACF M_IPCS M_CUS1 M_C370 M_BKM M_DELP M_CDCU M_IOA3,
    M_IOA2 M_IOA1 M_HACC M_ICQ M_ANF M_CBC M_EWX M_SBD M_SOMMVS,
    M_GDDM M_SEDG M_ICE M_TCPIP
 ELSE
    ISPMLIB = M_ISPF M_SDSF M_SMP M_HSM M_HCD M_OMVS M_RMF3 M_DFSRT,
    M_DFDSS M_RACF M_IPCS M_CUS1 M_C370 M_BKM M_DELP M_CDCU M_IOA3,
    M_IOA1 M_IOA2 M_HACC M_ICQ M_ANF M_CBC M_EWX M_SBD M_SOMMVS,
    M_GDDM M_SEDG M_ICE M_TCPIP
 IF SYSNAME = 'PRDD' THEN
    ISPTLIB = T_SDSF T_SMP T_HCD T_RMF3 T_OMVS T_DFSRT M_DFDSS,
    T_IPCS T_BKM T_DELP T_ICQ T_CDCU T_IOA3 T_IOA2 T_IOA1 T_HACC,
    T_ISPF T_RAC1 T_DGT T_SERBT T_BFS T_EWX T_ICQ1 T_SEDG T_ICE
 ELSE
    ISPTLIB = T_SDSF T_SMP T_HCD T_RMF3 T_OMVS T_DFSRT M_DFDSS,
    T_IPCS T_BKM T_DELP T_ICQ T_CDCU T_IOA1 T_IOA2 T_IOA3 T_HACC,
    T_ISPF T_RAC1 T_DGT T_SERBT T_BFS T_EWX T_ICQ1 T_SEDG T_ICE
 ISPSLIB = S_SMP S_IPCS S_DFSRT S_DFDSS S_RACF S_ICQ S_CDCU,
    S_CUS1 S_ISPF S_IOA S_EWX S_CBC S_SOMMVS S_SEDG S_ICE S_ISF
 HASPINDX = H_ISF
 if tsover = 2050 then
  PNL = 'PANEL(ISP@390M)'
 else
  PNL = 'PANEL(ISP@BOOL)'
 JOBTRAC = 'YES'
END

/*********************************/
/*  PROGRAMMERS                  */
/*********************************/
IF (PROC = "PROGRAMR") |,
   (PROC = "UNIXUSER")
THEN DO
 IF SYSNAME = 'PRDD' THEN
    SYSPROC = C_RAC1 C_CUS1 C_CUS3 C_ISP2,
    C_DFSRT C_DFDSS C_SDF C_EDC C_BKM C_IOA3 C_IOA2
 ELSE
    SYSPROC = C_RAC1 C_CUS1 C_CUS3 C_ISP2,
    C_DFSRT C_DFDSS C_SDF C_EDC C_BKM C_IOA1
 SYSEXEC = E_ISP
 IF SYSNAME = 'PRDD' THEN
    ISPLLIB = L_MAIN L_DFSRT L_DFDSS L_DELP L_SDF L_ISF
 ELSE
    ISPLLIB = L_MAIN L_DFSRT L_DFDSS L_DELP L_SDF L_ISF
 IF SYSNAME = 'PRDD' THEN
    ISPPLIB = P_LMF P_ISPF P_CUS6 P_CUS3 P_MAIN P_DFSRT P_DFDSS,
    P_SDSF P_DELP P_IOA2 P_IOA1 P_BKM
 ELSE
    ISPPLIB = P_LMF P_ISPF P_CUS6 P_CUS3 P_MAIN P_DFSRT P_DFDSS,
    P_SDSF P_DELP P_IOA P_BKM
 IF SYSNAME = 'PRDD' THEN
    ISPMLIB = M_MAIN M_ISPF M_DFSRT M_DFDSS M_DELP M_C370 M_BKM,
    M_IOA3 M_IOA2 M_SDSF
 ELSE
    ISPMLIB = M_MAIN M_ISPF M_DFSRT M_DFDSS M_DELP M_C370 M_BKM,
    M_IOA1 M_SDSF
 IF SYSNAME = 'PRDD' THEN
    ISPTLIB = T_DFSRT T_DFDSS T_SDSF T_DELP T_BKM T_IOA2 T_ISPF
 ELSE
    ISPTLIB = T_DFSRT T_DFDSS T_SDSF T_DELP T_BKM T_IOA2 T_ISPF
 ISPSLIB = S_CUS1 S_DFSRT S_DFDSS S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@PRG)'
 JOBTRAC1 = 'YES'
END

/**********************************/
/*  OPERATORS USERS               */
/**********************************/
IF (PROC = "OPERATOR")
THEN DO
 IF SYSNAME = 'PRDD' THEN
    SYSPROC = C_ISP2 C_RAC1 C_CUS1 C_DFSRT C_DFDSS,
    C_RMF C_EDC C_BKM C_IOA3 C_IOA1
 ELSE
    SYSPROC = C_ISP2 C_RAC1 C_CUS1 C_DFSRT C_DFDSS,
    C_RMF C_EDC C_BKM C_IOA1
 SYSEXEC = E_ISP
 IF SYSNAME = 'PRDD' THEN
    ISPLLIB = L_DFSRT L_DFDSS L_ISF
 ELSE
    ISPLLIB = L_DFSRT L_DFDSS L_ISF
 IF SYSNAME = 'PRDD' THEN
    ISPPLIB = P_SDSF P_CUS3 P_CUS5 P_IOA2 P_IOA P_RMF3 P_DFSRT,
    P_DFDSS P_BKM
 ELSE
    ISPPLIB = P_ISPF P_SDSF P_CUS3 P_CUS5 P_IOA P_RMF3 P_DFSRT,
    P_DFDSS P_BKM
 ISPMLIB = M_ISPF M_SDSF M_RMF3 M_DFSRT M_DFDSS M_C370 M_BKM,
    M_IOA1
 ISPTLIB = T_SDSF T_RMF3 T_DFSRT T_DFDSS T_BKM T_IOA1 T_ISPF
 ISPSLIB = S_DFSRT S_DFDSS S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@OPS)'
 JOBTRAC = 'NO'
END

/*********************************/
/*  DIENS KONTROLE               */
/*********************************/
IF (PROC = "DIENSKRL")
THEN DO
 SYSPROC = C_RAC1 C_ISP2 C_DFDSS
 SYSEXEC = E_ISP
 ISPLLIB = L_DFDSS L_ISP L_ISF
 ISPPLIB = P_CUS3 P_DFDSS P_SDSF P_ISPF
 ISPMLIB = M_DFDSS M_ISPF
 ISPTLIB = T_DFDSS T_SDSF T_ISPF
 ISPSLIB = S_DFDSS S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@DNS)'
 JOBTRAC = 'NO'
END

/********************************/
/*  NETWORK USERS               */
/********************************/
IF (PROC = "NETWORK")
THEN DO
 SYSPROC = C_RAC1 C_CUS1 C_DFSRT C_DFDSS C_ISP2
 SYSEXEC = E_ISP
 ISPLLIB = L_DFSRT L_DFDSS L_ISP L_ISF
 ISPPLIB = P_CUS3 P_CUS7 P_DFSRT P_DFDSS P_SDSF
 ISPMLIB = M_DFSRT M_DFDSS M_ISPF
 ISPTLIB = T_DFSRT T_DFDSS T_SDSF T_ISPF
 ISPSLIB = S_DFSRT S_DFDSS S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@NET)'
 JOBTRAC = 'NO'
END

/********************************/
/*  CONTROL USERS               */
/********************************/
IF (PROC = "AUTOMATE")
THEN DO
 IF SYSNAME = 'PRDD' THEN
    SYSPROC = C_ISP2 C_CUS1 C_RAC1,
    C_SMPE C_IPCS C_HCD C_DFSRT C_DFDSS C_RMF C_ICQ,
    C_EDC C_BKM C_IOA3 C_IOA2 C_IOA1 C_HACC C_SDF C_OMVS C_CDCU C_OSTA
 ELSE
    SYSPROC = C_ISP2 C_CUS1 C_RAC1,
    C_SMPE C_IPCS C_HCD C_DFSRT C_DFDSS C_RMF C_ICQ,
    C_EDC C_BKM C_IOA1 C_IOA2 C_HACC C_SDF C_OMVS C_CDCU C_OSTA
 SYSEXEC = E_ISP
 IF SUBSTR(UID,1,4) = 'SYS0' THEN
    ISPLLIB = L_SMP L_HCD L_HSM L_DFSRT L_DFDSS L_CDCU L_DITTO L_DELP,
    L_HACC1 L_HACC2 L_MAIN L_ISF
 ELSE
    ISPLLIB = L_SMP L_HCD L_HSM L_DFSRT L_DFDSS L_CDCU L_DITTO L_DELP,
    L_HACC1 L_HACC2 L_MAIN L_ISF
 IF SYSNAME = 'PRDD' THEN
    ISPPLIB = P_SDSF P_LMF P_IOA2 P_IOA1 P_IOA P_CUS1 P_CUS3,
    P_ISPF P_SMP P_HSM P_HCD P_RMF3 P_OMVS P_DFSRT P_DFDSS,
    P_IPCS P_BKM P_DELP P_CDCU P_HACC P_ICQ
 ELSE
    ISPPLIB = P_ISPF P_DFDSS P_SDSF P_LMF P_IOA P_IOA1 P_CUS1,
    P_CUS3 P_ISPF P_SMP P_HSM P_HCD P_RMF3 P_OMVS P_DFSRT,
    P_IPCS P_BKM P_DELP P_CDCU P_HACC P_ICQ
 IF SYSNAME = 'PRDD' THEN
    ISPMLIB = M_ISPF M_SDSF M_SMP M_HSM M_HCD M_OMVS M_RMF3 M_DFSRT,
    M_DFDSS M_IPCS M_CUS1 M_C370 M_BKM M_DELP M_CDCU M_IOA3,
    M_IOA2 M_IOA1 M_HACC M_ICQ
 ELSE
    ISPMLIB = M_ISPF M_SDSF M_SMP M_HSM M_HCD M_OMVS M_RMF3 M_DFSRT,
    M_DFDSS M_IPCS M_CUS1 M_C370 M_BKM M_DELP M_CDCU,
    M_IOA1 M_IOA2 M_HACC M_ICQ
 IF SYSNAME = 'PRDD' THEN
    ISPTLIB = T_SDSF T_SMP T_HCD T_RMF3 T_OMVS T_DFSRT M_DFDSS,
    T_IPCS T_BKM T_DELP T_ICQ T_CDCU T_IOA3 T_IOA2 T_IOA1 T_HACC,
    T_ISPF T_RAC1
 ELSE
    ISPTLIB = T_SDSF T_SMP T_HCD T_RMF3 T_OMVS T_DFSRT M_DFDSS,
    T_IPCS T_BKM T_DELP T_ICQ T_CDCU T_IOA1 T_IOA2 T_IOA3 T_HACC,
    T_ISPF T_RAC1
 ISPSLIB = S_SMP S_IPCS S_DFSRT S_DFDSS S_ICQ S_CDCU,
    S_CUS1 S_ISPF S_IOA
 HASPINDX = H_ISF
  PNL = 'PANEL(ISP@MVS)'
 JOBTRAC = 'YES'
END

/******************************/
/*  MEDIA USERS               */
/******************************/
IF (PROC = "MEDIA")
THEN DO
 IF SYSNAME = 'PRDD' THEN
    SYSPROC = C_RAC1 C_CUS1 C_OPS1 C_DFSRT,
    C_DFDSS C_BKM C_EDC C_IOA3 C_IOA2 C_IOA1 C_ISP2
 ELSE
    SYSPROC = C_RAC1 C_CUS1 C_OPS1 C_DFSRT,
    C_DFDSS C_BKM C_EDC C_IOA1 C_ISP2
 SYSEXEC = E_ISP
 ISPLLIB = L_DFSRT L_DFDSS L_ISF
 IF SYSNAME = 'PRDD' THEN
    ISPPLIB = P_SDSF P_CUS5 P_CUS3 P_CUS1,
    P_DFSRT P_DFDSS P_BKM P_IOA2 P_IOA P_IOA1
 ELSE
    ISPPLIB = P_SDSF P_CUS5 P_CUS3 P_CUS1,
    P_DFSRT P_DFDSS P_BKM P_IOA P_IOA1
 IF SYSNAME = 'PRDD' THEN
    ISPMLIB = M_DFSRT M_DFDSS M_BKM M_IOA3 M_IOA2 M_ISPF
 ELSE
    ISPMLIB = M_DFSRT M_DFDSS M_BKM M_IOA1 M_ISPF
 IF SYSNAME = 'PRDD' THEN
    ISPTLIB = T_DFSRT T_DFDSS T_BKM T_IOA2 T_SDSF T_ISPF
 ELSE
    ISPTLIB = T_DFSRT T_DFDSS T_BKM T_IOA1 T_SDSF T_ISPF
 ISPSLIB = S_DFSRT S_DFDSS S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@MED)'
 JOBTRAC = 'NO'
END

/*********************************/
/*  ADMINISTRATOR                */
/*********************************/
IF (PROC = "DIENADMN") |,
   (PROC = "NETADMN") |,
   (PROC = "OPERADMN") |,
   (PROC = "MEDADMN") |,
   (PROC = "PROGADMN")
THEN DO
 SYSPROC = C_RAC1
 SYSEXEC = E_ISP
 ISPLLIB = L_ISP
 ISPPLIB = P_CUS3 P_SDSF
 ISPMLIB = M_RAC1
 ISPTLIB = T_RAC1 T_SDSF
 ISPSLIB = S_RAC1
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@ADMN)'
 JOBTRAC = 'NO'
END

/*********************************/
/*  VEILIGHEID ADMINISTRATOR     */
/*********************************/
IF (PROC = "SPFTHE")
THEN DO
 SYSPROC = C_RAC1 C_ISP2
 SYSEXEC = E_ISP
 ISPLLIB = L_ISP
 ISPPLIB = P_CUS3 P_DFDSS P_SDSF P_ISPF
 ISPMLIB = M_RAC1 M_RACF M_DFDSS M_ISPF
 ISPTLIB = T_RAC1 T_DFDSS T_SDSF
 ISPSLIB = S_RAC1 S_ISP2 S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@THE)'
 JOBTRAC = 'NO'
END

/*********************************/
/*  RADIOBEHEER ADMINISTRATOR    */
/*********************************/
IF (PROC = "RADADMN")
THEN DO
 SYSPROC = C_RAC1 C_ISP2
 SYSEXEC = E_ISP
 ISPLLIB = L_ISP
 ISPPLIB = P_CUS3 P_DFDSS P_SDSF P_ISPF
 ISPMLIB = M_RAC1 M_RACF M_DFDSS M_ISPF
 ISPTLIB = T_RAC1 T_DFDSS T_SDSF
 ISPSLIB = S_RAC1 S_ISP2 S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@RDBA)'
 JOBTRAC = 'NO'
END
/*******************************/
/*  POLFIN USERS               */
/*******************************/
IF (PROC = "SPFPOL") THEN
DO
 SYSPROC = C_RAC1 C_ISP2
 SYSEXEC = E_ISP
 ISPPLIB = P_CUS3 P_SDSF P_ISPF
 ISPMLIB = M_ISPF
 ISPTLIB = T_SDSF T_ISPF
 ISPSLIB = S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@POL)'
 JOBTRAC = 'NO'
END

/****************************/
/*  KRS USERS               */
/****************************/
IF (PROC = "SPFKRI") THEN
DO
 SYSPROC = C_RAC1 C_ISP2
 SYSEXEC = E_ISP
 ISPLLIB = L_ISP
 ISPPLIB = P_CUS3 P_DFDSS P_SDSF P_ISPF
 ISPMLIB = M_RAC1 M_RACF M_DFDSS M_ISPF
 ISPTLIB = T_RAC1 T_DFDSS T_SDSF T_ISPF
 ISPSLIB = S_RAC1 S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@KRI)'
 JOBTRAC = 'NO'
END

/*********************************/
/*  READY PROMPT USERS           */
/*********************************/
IF (PROC = "READY") |,
   (PROC = "PDF") THEN
DO
 SYSPROC = C_RAC1
 SYSEXEC = E_ISP
 ISPLLIB = L_ISP
 ISPPLIB = P_CUS3
 ISPMLIB = M_ISPF
 ISPTLIB = T_ISPF
 ISPSLIB = S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL()'
 JOBTRAC = 'NO'
END

/*********************************/
/*  COMPLETE ADMINISTRATORS      */
/*********************************/
IF (PROC = "COMADMN") THEN
DO
 SYSPROC = C_RAC1 C_ISP2
 SYSEXEC = E_ISP
 ISPLLIB = L_ISP
 ISPPLIB = P_CUS3 P_SDSF
 ISPMLIB = M_RAC1 M_RACF
 ISPTLIB = T_RAC1 T_SDSF
 ISPSLIB = S_RAC1
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@COMA)'
 JOBTRAC = 'NO'
END

/*********************************/
/*  COMPLETE ADMINISTRATORS      */
/*********************************/
IF (PROC = "COMRESU") THEN
DO
 SYSPROC = C_RAC1 C_ISP2
 SYSEXEC = E_ISP
 ISPLLIB = L_ISP
 ISPPLIB = P_CUS3 P_SDSF
 ISPMLIB = M_RAC1 M_RACF
 ISPTLIB = T_RAC1 T_SDSF
 ISPSLIB = S_RAC1
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@COMR)'
 JOBTRAC = 'NO'
END

/*********************************/
/*  CONTROL-D USERS              */
/*********************************/
IF (PROC = "SPFCTD")
THEN DO
 IF SYSNAME = 'PRDD' THEN
 SYSPROC = C_RAC1 C_IOA3 C_IOA1
 else
 SYSPROC = C_RAC1 C_IOA3 C_IOA1
 SYSEXEC = E_ISP
 ISPLLIB = L_ISP
 ISPPLIB = P_CUS3 P_SDSF P_ISPF P_IOA2 P_IOA
 ISPMLIB = M_IOA3 M_IOA1 M_ISPF
 ISPTLIB = T_IOA1 T_SDSF T_ISPF
 ISPSLIB = S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@CTD)'
 JOBTRAC = 'NO'
END

/***********************************/
/** CHECK FOR UNKNOWN PROC        **/
/***********************************/
IF ISPPLIB = "ISPPLIB" THEN
DO
 SAY ' '
 SAY ' '
 SAY 'YOUR LOGON PROCEDURE IS UNKNOWN TO TSO'
 SAY 'PLEASE VERIFY THAT YOUR LOGON PROCEDURE IS CORRECT'
 SAY ' '
 SAY 'OR CALL YOUR HELPDESK FOR HELP'
 EXIT 12
END

/***********************************/
/** JOBTRAC ADDITIONAL ALLOCATIONS */
/***********************************/
IF JOBTRAC = 'YES' THEN
DO
 "FREE FI(SMPTABL,ISRCFIL,CISTABL)"
 "FREE FI(ICQAATAB)"
 "FREE FI(ICQABTAB)"
 "FREE FI(ICQANTAB)"
 "FREE FI(ICQAPTAB)"
 "FREE FI(ICQAMTAB)"
 "FREE FI(ICQCMTAB)"
 "FREE FI(DVDMSL)"
 "FREE FI(DVDMSLT)"
 "FREE FI(DVDMSLP)"
 "FREE FI(DVDITF)"
 "FREE FI(DVDTML)"
 X=MSG('ON');
B4 = '"ALLOC FI(SMPTABL) SHR DA('||DSNAME||')"'
INTERPRET B4
 "ALLOC FI(ICQAATAB) SHR DA(ICQ.ICQAATAB)"
 "ALLOC FI(ICQABTAB) SHR DA(ICQ.ICQABTAB)"
 "ALLOC FI(ICQANTAB) SHR DA(ICQ.ICQANTAB)"
 "ALLOC FI(ICQAPTAB) SHR DA(ICQ.ICQAPTAB)"
 "ALLOC FI(ICQAMTAB) SHR DA(ICQ.ICQAMTAB)"
 "ALLOC FI(ICQCMTAB) SHR DA(ICQ.ICQCMTAB)"
 "ALLOC FI(ISRCFIL) SHR DA(SYSA.SPF.CFIL)"
 "ALLOC FI(CISTABL) SHR DA(SYS2.CIDTABL)"
/*  "ALLOC FI(DVDMSL) SHR DA(SDF150.MSL)"      */
/*  "ALLOC FI(DVDMSLP) SHR DA(SDF150.MSLP)"    */
/*  "ALLOC FI(DVDMSLT) SHR DA(SDF150.MSLT)"    */
/*  "ALLOC FI(DVDTML) SHR DA(SDF150.TML)"      */
/*  "ALLOC FI(DVDITF) SHR DA(SDF150.ITF)"      */

 X=MSG('OFF');
END

IF JOBTRAC1 = 'YES' THEN
DO
 "FREE FI(ISRCFIL)"
 "FREE FI(DVDMSL)"
 "FREE FI(DVDMSLT)"
 "FREE FI(DVDMSLP)"
 "FREE FI(DVDITF)"
 "FREE FI(DVDTML)"
 X=MSG('ON');
 "ALLOC FI(ISRCFIL) SHR DA(SYSA.SPF.CFIL)"

 X=MSG('OFF');
END

IF JOBTRAC2 = 'YES' THEN
DO
 "FREE FI(SMPTABL)"
 "FREE FI(CISTABL)"
 X=MSG('ON');
 "ALLOC FI(CISTABL) SHR DA(SYS2.CIDTABL)"
B4 = '"ALLOC FI(SMPTABL) SHR DA('||DSNAME||')"'
INTERPRET B4

 X=MSG('OFF');
END
/******************************/
/** STANDARD ISPF ALLOCTIONS **/
/******************************/
"FREE FI(SYSPROC,SYSEXEC,ISPLLIB,ISPPLIB,ISPMLIB,ISPSLIB,ISPTLIB)"
"FREE FI(HASPINDX)"

X = MSG('ON')
"ALLOC FI(SYSPROC) DA("SYSPROC") SHR"
"ALLOC FI(SYSEXEC) DA("SYSEXEC") SHR"
"ALLOC FI(ISPLLIB) DA("ISPLLIB") SHR"
"ALLOC FI(ISPPLIB) DA("ISPPLIB") SHR"
"ALLOC FI(ISPMLIB) DA("ISPMLIB") SHR"
"ALLOC FI(ISPTLIB) DA("ISPTLIB") SHR"
"ALLOC FI(ISPSLIB) DA("ISPSLIB") SHR"
"ALLOC FI(HASPINDX) DA("HASPINDX") SHR"
"ALLOC FI(SYSTCPD) DA("TCPIP_DATA") SHR"
X = MSG('ON')

"EXECUTIL SEARCHDD(YES)"
SIGNAL NO_COMMENT
/*
   THE ABOVE SIGNAL PREVENT INTERPRETATION OF LONG LINES OF COMMENTS,
   SINCE IT BRANCHES AROUND THEM ALL
*/
/*--------------------------------------------------------------------+
 | IF THE USER HAS A DDIR, THEN ALLOC ALL FILES REQUIRED BY IPCS,     |
 |           THEN CALL IPCS.                                          |
 | SINCE IPCS DOES NOT SEEM TO RECOGNIZE REXX COMMANDS, WE PULL A     |
 |           JIPPO BY QUEUEING THE COMMAND 'PDF PANEL(XXXXXXXX)'      |
 |           BEFORE CALLING IPCS.  THIS WAY,  SINCE IPCS DOES NOT     |
 |           SEE ANY MORE CMDS IN THE EXEC (CLIST), IT PULL WHAT      |
 |           WAS IN THE COMMAND STACK.                                |
 +--------------------------------------------------------------------*/
NO_COMMENT:

Call USER_PROFILE

ddir = "'"userid()".D"sid"0.DDIR'"
RC = LISTDSI(DDIR)
If rc > 4 then do        /* Check for the old one */
   DDIR = "'"||UID||".DDIR'"
   rc = listdsi(ddir)
   end
IF RC > 4 THEN
   "PDF" PNL
ELSE DO
   X = OUTTRAP(ON)
   "VFY DS("DDIR")"
   X = OUTTRAP(X)
   "ALLOC FI(IPCSDDIR) DA("DDIR") SHR"
   "ALLOC FI(IPCSPARM) DA('SYS2.PARMLIB') SHR"
   "ALLOC FI(IPCSPRNT) SYS(X) HOLD"
   QUEUE 'PDF' PNL
   "IPCS PARM(01)"
END

Exit 0  /*-------------------------------------------------------*/

USER_PROFILE:

user_prof = "'"userid()".A0.TSPROF(PROF000)'"
If sysdsn(user_prof) = 'OK' then do
   Say 'Executing' user_prof
   'EXEC' user_prof 'EXEC'
   end

Return
./ ADD NAME=ISP3901  0101-01016-01016-1428-00908-00908-00000-RACFCLS
/* ****************************Rexx**********************************/
/* SAPD SHARED LOGON PROC */
/* ****************************Rexx**********************************/

"PROFILE NOPREF MODE WTPMSG MSGID"
X = MSG('OFF')
UID = SYSVAR(SYSUID)
PROC = SYSVAR(SYSPROC)
TSOVER = SYSVAR(SYSTSOE)    /* TEST FOR OS/390 */
GETSYSN
IF RC = 0 THEN SYSNAME=BIGERROR
IF RC = 1 THEN SYSNAME=PRDA
IF RC = 2 THEN SYSNAME=PRDB
IF RC = 3 THEN SYSNAME=PRDC
IF RC = 4 THEN SYSNAME=PRDD
IF RC = 5 THEN SYSNAME=PRDE
IF RC = 6 THEN SYSNAME=TSTF
IF RC = 7 THEN SYSNAME=TSTG
IF RC = 8 THEN SYSNAME=TST1
SHRNAME = SYSNAME
IF RC = 4 THEN SHRNAME=PRDE
IF RC = 7 THEN SHRNAME=PRDE
IF RC = 8 THEN SHRNAME=PRDE

SAY 'HAVE A NICE DAY !!!'
SAY 'BUSY ALLOCATING FILES, PLEASE WAIT .....'
SAY ''
MURPHY
IF (PROC = "DIENADMN") |,
   (PROC = "NETADMN") |,
   (PROC = "OPERADMN") |,
   (PROC = "MEDADMN") |,
   (PROC = "COMADMN") |,
   (PROC = "COMRESU") |,
   (PROC = "SPFTHE") |,
   (PROC = "PROGADMN")
THEN DO
   SAY ' '
   SAY '                 If you have any problems'
   SAY '                 with administering USERIDs'
   SAY '                 please phone'
   SAY ' '
   SAY '                 EDWARD ROSS ext 120656 or'
   SAY '                             (012) 4210656'
   SAY '                 FAX ===>>   ext 120606 or <<==='
   SAY '                             (012) 4210606 <<==='
END

/*****************************************/
/* ALLOC ISPFPROF                        */
/*****************************************/
DSNAME = "'"UID"."SYSNAME".ISPF.ISPPROF'"
"FREE FI(ISPPROF)"
RC = LISTDSI(DSNAME)
IF RC > 4 THEN
DO
 X = MSG('ON')
 "FREE FI(ISPCRTE)"
 "ATTRIB ISPCRTE DSORG(PO) RECFM(F B) LRECL(80) BLKSIZE(18400)"
 A1='"ALLOC DA(' || DSNAME || ') SP(10,1) TRACKS DIR(10)',
 || 'USING(ISPCRTE) FI(ISPPROF)"'
 SAY A1
 INTERPRET A1
 IF RC = 0 THEN
  SAY  "ISPF PROFILE DATA SET" DSNAME "HAS BEEN CREATED"
 ELSE
 DO
   SAY  "UNABLE TO ALLOCATE ISPF PROFILE DATA SET" DSNAME
   "FREE FI(ISPCRTE)"
   EXIT 12
 END
 "FREE FI(ISPCRTE)"
END
A1 = '"ALLOC FI(ISPPROF) SHR DA('||DSNAME||')"'
A2 = '"ALLOC FI(ISPTABL) SHR DA('||DSNAME||')"'
A3 = '"ALLOC FI(ISPTLIB) SHR DA('||DSNAME||')"'
INTERPRET A1
INTERPRET A2
INTERPRET A3

IF TSOVER = 2050 THEN DO
/********************************/            /* Changes for OS/390 */
/* SPECIFY DATASETS FOR SYSEXEC */            /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
E_ISP = 'ISP.SISPEXEC'                        /* Changes for OS/390 */
E_SYMC = 'SYMCHK.EXEC'                        /* CHANGES FOR OS/390 */
                                              /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
/* SPECIFY DATASETS FOR SYSPROC */            /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
C_ISP2 = 'ISP.SISPCLIB'                       /* Changes for OS/390 */
C_RAC3 = 'SYS1.HRFCLST'                       /* Changes for OS/390 */
C_CUS1 = 'SYS2.CMDPROC'                       /* Changes for OS/390 */
C_CUS2 = "'SYS2."SHRNAME".CMDPROC'"           /* Changes for OS/390 */
C_CUS3 = 'SYS2.PRDC.CMDPROC'                  /* Changes for OS/390 */
C_OPS1 = 'OPS.CMDPROC'                        /* Changes for OS/390 */
C_OPS2 = "'OPS."SHRNAME".CMDPROC'"            /* Changes for OS/390 */
C_RAC1 = 'SYS2.RACFCLST'                      /* Changes for OS/390 */
C_RAC2 = "'SYS2."SHRNAME".RACFCLST'"          /* Changes for OS/390 */
C_SMPE = 'GIM.SGIMCLS0'                       /* Changes for OS/390 */
C_IPCS = 'SYS1.SBLSCLI0'                      /* Changes for OS/390 */
C_HCD  = 'SYS1.SCBDCLST'                      /* Changes for OS/390 */
C_DFSRT = 'SYS1.ICEISPC'                      /* Changes for OS/390 */
C_DFDSS = 'SYS1.DGTCLIB'                      /* Changes for OS/390 */
C_RMF  = 'SYS1.SERBCLS'                       /* Changes for OS/390 */
C_ICQ  = 'ICQ.ICQCCLIB'                       /* Changes for OS/390 */
C_EDC  = 'EDC.V2R2M0.SEDCLIST'                /* Changes for OS/390 */
C_BKM  = 'EOY.SEOYCLIB'                       /* Changes for OS/390 */
C_IOA1 = "'SYS3."SHRNAME".IOAIV410.CLIST'"    /* Changes for OS/390 */
C_IOA2 = 'SYS3.IOA.CLIST'                     /* Changes for OS/390 */
C_IOA3 = 'SYS3.IOA500.CLIST'                  /* Changes for OS/390 */
C_HACC = 'SYS3.ZHC240.ISPCLIB'                /* Changes for OS/390 */
C_SDF  = 'SDF2.V1R4M0.SDGICMD'                /* Changes for OS/390 */
C_OMVS = 'SYS1.SBPXEXEC'                      /* Changes for OS/390 */
C_CDCU = ''                                   /* Changes for OS/390 */
                                              /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
/* SPECIFY DATASETS FOR ISPLLIB */            /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
L_SMP  = 'GIM.SGIMLMD0'                       /* Changes for OS/390 */
L_HCD  = 'SYS1.SCBDHENU'                      /* Changes for OS/390 */
L_HSM = 'SYS1.DFQLLIB'                        /* Changes for OS/390 */
L_DFSRT = 'SYS1.ICEISPL'                      /* Changes for OS/390 */
L_DFDSS = 'SYS1.DGTLLIB'                      /* Changes for OS/390 */
L_CDCU  = ''                                  /* Changes for OS/390 */
L_DITTO = 'DIT.V1R1M0.SDITLOAD'               /* Changes for OS/390 */
L_DELP = 'DELPHI.V221.CMDLOAD'                /* Changes for OS/390 */
L_TSP1 = 'SYS2.TSPRINT.APFLIB'                /* Changes for OS/390 */
L_HACC1 = 'SYS3.ZHC240.ISPLOAD'               /* Changes for OS/390 */
L_HACC2 = 'SYS3.ZHC240.LOAD'                  /* Changes for OS/390 */
L_SDF = 'SDF150.SDFLOAD'                      /* Changes for OS/390 */
L_ISP = 'ISP.SISPLOAD'                        /* Changes for OS/390 */
L_MAIN = "'MAINT."SHRNAME".LIVE.LOAD'"        /* Changes for OS/390 */
                                              /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
/* SPECIFY DATASETS FOR ISPPLIB */            /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
P_SYMC = 'SYMCHK.PANELS'                      /* CHANGES FOR OS/390 */
P_SDSF = 'ISF.SISFPLIB'                       /* Changes for OS/390 */
P_IOA = "'SYS3."SHRNAME".IOAIV410.PANEL'"     /* Changes for OS/390 */
P_IOA1 = 'SYS3.IOA.PANEL'                     /* Changes for OS/390 */
P_IOA2 = 'SYS3.IOA500.PANEL'                  /* Changes for OS/390 */
P_CUS1 = 'SYS2.ISPPLIB'                       /* Changes for OS/390 */
P_CUS2 = "'SYS2."SHRNAME".ISPPLIB'"           /* Changes for OS/390 */
P_ISPF = 'ISP.SISPPENU'                       /* Changes for OS/390 */
P_CUS3 = 'SYS2.RACFPANL'                      /* Changes for OS/390 */
P_CUS4 = "'SYS2."SHRNAME".RACFPANL'"          /* Changes for OS/390 */
P_CUS5 = 'SYS2.ISP.OPSPENU'                   /* Changes for OS/390 */
P_CUS6 = 'SYS2.ISP.PRGPENU'                   /* Changes for OS/390 */
P_CUS7 = 'SYS2.ISP.NETPENU'                   /* Changes for OS/390 */
P_SMP = 'GIM.SGIMPENU'                        /* Changes for OS/390 */
P_HSM = 'SYS1.DFQPLIB'                        /* Changes for OS/390 */
P_HCD = 'SYS1.SCBDPENU'                       /* Changes for OS/390 */
P_RMF3 = 'SYS1.SERBPENU'                      /* Changes for OS/390 */
P_OMVS = 'SYS1.SBPXPENU'                      /* Changes for OS/390 */
P_DFSRT = 'SYS1.ICEISPP'                      /* Changes for OS/390 */
P_DFDSS = 'SYS1.DGTPLIB'                      /* Changes for OS/390 */
P_RACF  = 'SYS1.HRFPANL'                      /* Changes for OS/390 */
P_IPCS = 'SYS1.SBLSPNL0'                      /* Changes for OS/390 */
P_BKM = 'EOY.SEOYPENU'                        /* Changes for OS/390 */
P_DELP = 'DELPHI.V221.PLIB'                   /* Changes for OS/390 */
P_CDCU = ''                                   /* Changes for OS/390 */
P_HACC = 'SYS3.ZHC240.ISPPLIB'                /* Changes for OS/390 */
P_ICQ = 'ICQ.ICQPLIB'                         /* Changes for OS/390 */
P_LMF = 'SYS2.LMF.PLIB'                       /* Changes for OS/390 */
P_MAIN = 'MAINT.LIVE.PLIB'                    /* Changes for OS/390 */
                                              /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
/* SPECIFY DATASETS FOR ISPMLIB */            /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
M_ISPF = 'ISP.SISPMENU'                       /* Changes for OS/390 */
M_SDSF = 'ISF.SISFMLIB'                       /* Changes for OS/390 */
M_SMP  = 'GIM.SGIMMENU'                       /* Changes for OS/390 */
M_HSM = 'SYS1.DFQMLIB'                        /* Changes for OS/390 */
M_HCD = 'SYS1.SCBDMENU'                       /* Changes for OS/390 */
M_OMVS = 'SYS1.SBPXMENU'                      /* Changes for OS/390 */
M_RMF3 = 'SYS1.SERBMENU'                      /* Changes for OS/390 */
M_DFSRT = 'SYS1.ICEISPM'                      /* Changes for OS/390 */
M_DFDSS = 'SYS1.DGTMLIB'                      /* Changes for OS/390 */
M_RACF = 'SYS1.HRFMSG'                        /* Changes for OS/390 */
M_IPCS = 'SYS1.SBLSMSG0'                      /* Changes for OS/390 */
M_CUS1 = 'SYS2.ISPMENU'                       /* Changes for OS/390 */
M_C370 = 'EDC.V2R2M0.SEDCMSGP'                /* Changes for OS/390 */
M_BKM = 'EOY.SEOYMENU'                        /* Changes for OS/390 */
M_DELP = 'DELPHI.V221.MLIB'                   /* Changes for OS/390 */
M_CDCU = ''                                   /* Changes for OS/390 */
M_IOA1 = "'SYS3."SHRNAME".IOAIV410.ISMSG'"    /* Changes for OS/390 */
M_IOA2 = 'SYS3.IOA.ISMSG'                     /* Changes for OS/390 */
M_IOA3 = 'SYS3.IOA500.ISMSG'                  /* Changes for OS/390 */
M_HACC = 'SYS3.ZHC240.ISPMLIB'                /* Changes for OS/390 */
M_ICQ = 'ICQ.ICQMLIB'                         /* Changes for OS/390 */
M_MAIN = 'MAINT.LIVE.MLIB'                    /* Changes for OS/390 */
M_RAC1 = 'SYS2.RACFMENU'                      /* Changes for OS/390 */
                                              /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
/* SPECIFY DATASETS FOR ISPTLIB */            /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
T_SDSF = 'ISF.SISFTLIB'                       /* Changes for OS/390 */
T_SMP  = 'GIM.SGIMTENU' DSNAME                /* Changes for OS/390 */
T_HCD  = 'SYS1.SCBDTENU'                      /* Changes for OS/390 */
T_RMF3 = 'SYS1.SERBTENU'                      /* Changes for OS/390 */
T_OMVS = 'SYS1.SBPXTENU'                      /* Changes for OS/390 */
T_DFSRT = 'SYS1.ICEISPT'                      /* Changes for OS/390 */
T_DFDSS = 'SYS1.DGTTLIB'                      /* Changes for OS/390 */
T_IPCS  = 'SYS1.SBLSTBL0'                     /* Changes for OS/390 */
T_BKM  = 'EOY.SEOYTENU'                       /* Changes for OS/390 */
T_DELP = 'DELPHI.V221.CMDTAB'                 /* Changes for OS/390 */
T_ICQ = 'ICQ.ICQTLIB'                         /* Changes for OS/390 */
T_CDCU  = ''                                  /* Changes for OS/390 */
T_IOA1  = "'SYS3."||SHRNAME||".IOAIV410.TLIB'"/* Changes for OS/390 */
T_IOA2  = 'SYS3.IOA.TLIB'                     /* Changes for OS/390 */
T_IOA3  = 'SYS3.IOA500.PANEL'                 /* Changes for OS/390 */
T_HACC  = 'SYS3.ZHC240.ISPTLIB'               /* Changes for OS/390 */
T_ISPF  = 'ISP.SISPTENU'                      /* Changes for OS/390 */
T_RAC1  = 'SYS2.RACFTABL'                     /* Changes for OS/390 */
                                              /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
/* SPECIFY DATASETS FOR ISPSLIB */            /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
S_SMP  = 'GIM.SGIMSENU'                       /* Changes for OS/390 */
S_IPCS = 'SYS1.SBLSKEL0'                      /* Changes for OS/390 */
S_DFSRT = 'SYS1.ICEISPS'                      /* Changes for OS/390 */
S_DFDSS = 'SYS1.DGTSLIB'                      /* Changes for OS/390 */
S_RACF = 'SYS1.HRFSKEL'                       /* Changes for OS/390 */
S_ICQ  = 'ICQ.ICQSLIB'                        /* Changes for OS/390 */
S_CDCU = ''                                   /* Changes for OS/390 */
S_IOA  = 'SYS3.IOA500.JCL'                    /* Changes for OS/390 */
S_CUS1 = 'MAINT.LIVE.SLIB'                    /* Changes for OS/390 */
S_ISPF = 'ISP.SISPSLIB'                       /* Changes for OS/390 */
S_ISP2 = 'ISP.SISPSENU'                       /* Changes for OS/390 */
S_RAC1 = 'SYS2.RACFSLIB'                      /* Changes for OS/390 */
                                              /* Changes for OS/390 */
/*******************************/             /* Changes for OS/390 */
/* SPECIFY DATASETS FOR SYSLOG */             /* Changes for OS/390 */
/*******************************/             /* Changes for OS/390 */
H_ISF  = "'SYS0.HASPINDX'"                    /* Changes for OS/390 */

END
ELSE DO

/********************************/
/* SPECIFY DATASETS FOR SYSEXEC */
/********************************/
E_ISP = 'ISP.V4R2M0.SISPEXEC'
E_SYMC = ''

/********************************/
/* SPECIFY DATASETS FOR SYSPROC */
/********************************/
C_ISP2 = 'ISP.V4R2M0.SISPCLIB'
C_RAC3 = 'SYS1.HRFCLST'
C_CUS1 = 'SYS2.CMDPROC'
C_CUS2 = "'SYS2."SHRNAME".CMDPROC'"
C_CUS3 = 'SYS2.PRDC.CMDPROC'
C_OPS1 = 'OPS.CMDPROC'
C_OPS2 = "'OPS."SHRNAME".CMDPROC'"
C_RAC1 = 'SYS2.RACFCLST'
C_RAC2 = "'SYS2."SHRNAME".RACFCLST'"
C_SMPE = 'GIM.SGIMCLS0'
C_IPCS = 'SYS1.SBLSCLI0'
C_HCD  = 'SYS1.SCBDCLST'
C_DFSRT = 'SYS1.ICEISPC'
C_DFDSS = 'SYS1.DGTCLIB'
C_RMF  = 'SYS1.SERBCLS'
C_ICQ  = 'ICQ.ICQCCLIB'
C_EDC  = 'EDC.V2R2M0.SEDCLIST'
C_BKM  = 'EOY.SEOYCLIB'
C_IOA1 = "'SYS3."SHRNAME".IOAIV410.CLIST'"
C_IOA2 = 'SYS3.IOA.CLIST'
C_IOA3 = 'SYS3.IOA500.CLIST'
C_HACC = 'SYS3.ZHC240.ISPCLIB'
C_SDF  = 'SDF2.V1R4M0.SDGICMD'
C_OMVS = 'SYS1.SBPXEXEC'
C_CDCU = 'CDCU.DCZDEXE'

/********************************/
/* SPECIFY DATASETS FOR ISPLLIB */
/********************************/
L_SMP  = 'GIM.SGIMLMD0'
L_HCD  = 'SYS1.SCBDHENU'
L_HSM = 'SYS1.DFQLLIB'
L_DFSRT = 'SYS1.ICEISPL'
L_DFDSS = 'SYS1.DGTLLIB'
L_CDCU  = 'CDCU.DCZDLOD'
L_DITTO = 'DIT.V1R1M0.SDITLOAD'
L_DELP = 'DELPHI.V221.CMDLOAD'
L_TSP1 = 'SYS2.TSPRINT.APFLIB'
L_HACC1 = 'SYS3.ZHC240.ISPLOAD'
L_HACC2 = 'SYS3.ZHC240.LOAD'
L_SDF = 'SDF150.SDFLOAD'
L_ISP = 'ISP.V4R2M0.SISPLOAD'
L_MAIN = "'MAINT."SHRNAME".LIVE.LOAD'"

/********************************/
/* SPECIFY DATASETS FOR ISPPLIB */
/********************************/
P_SYMC = ''
P_SDSF = 'ISF.V1R5M0.SISFPLIB'
P_IOA = "'SYS3."SHRNAME".IOAIV410.PANEL'"
P_IOA1 = 'SYS3.IOA.PANEL'
P_IOA2 = 'SYS3.IOA500.PANEL'
P_CUS1 = 'SYS2.ISPPLIB'
P_CUS2 = "'SYS2."SHRNAME".ISPPLIB'"
P_ISPF = 'ISP.V4R2M0.SISPPENU'
P_CUS3 = 'SYS2.RACFPANL'
P_CUS4 = "'SYS2."SHRNAME".RACFPANL'"
P_CUS5 = 'SYS2.ISP.OPSPENU'
P_CUS6 = 'SYS2.ISP.PRGPENU'
P_CUS7 = 'SYS2.ISP.NETPENU'
P_SMP = 'GIM.SGIMPENU'
P_HSM = 'SYS1.DFQPLIB'
P_HCD = 'SYS1.SCBDPENU'
P_RMF3 = 'SYS1.SERBPENU'
P_OMVS = 'SYS1.SBPXPENU'
P_DFSRT = 'SYS1.ICEISPP'
P_DFDSS = 'SYS1.DGTPLIB'
P_RACF  = 'SYS1.HRFPANL'
P_IPCS = 'SYS1.SBLSPNL0'
P_BKM = 'EOY.SEOYPENU'
P_DELP = 'DELPHI.V221.PLIB'
P_CDCU = 'CDCU.DCZDPLB'
P_HACC = 'SYS3.ZHC240.ISPPLIB'
P_ICQ = 'ICQ.ICQPLIB'
P_LMF = 'SYS2.LMF.PLIB'
P_MAIN = 'MAINT.LIVE.PLIB'

/********************************/
/* SPECIFY DATASETS FOR ISPMLIB */
/********************************/
M_ISPF = 'ISP.V4R2M0.SISPMENU'
M_SDSF = 'ISF.V1R5M0.SISFMLIB'
M_SMP  = 'GIM.SGIMMENU'
M_HSM = 'SYS1.DFQMLIB'
M_HCD = 'SYS1.SCBDMENU'
M_OMVS = 'SYS1.SBPXMENU'
M_RMF3 = 'SYS1.SERBMENU'
M_DFSRT = 'SYS1.ICEISPM'
M_DFDSS = 'SYS1.DGTMLIB'
M_RACF = 'SYS1.HRFMSG'
M_IPCS = 'SYS1.SBLSMSG0'
M_CUS1 = 'SYS2.ISPMENU'
M_C370 = 'EDC.V2R2M0.SEDCMSGP'
M_BKM = 'EOY.SEOYMENU'
M_DELP = 'DELPHI.V221.MLIB'
M_CDCU = 'CDCU.DCZDMLB'
M_IOA1 = "'SYS3."SHRNAME".IOAIV410.ISMSG'"
M_IOA2 = 'SYS3.IOA.ISMSG'
M_IOA3 = 'SYS3.IOA500.ISMSG'
M_HACC = 'SYS3.ZHC240.ISPMLIB'
M_ICQ = 'ICQ.ICQMLIB'
M_MAIN = 'MAINT.LIVE.MLIB'
M_RAC1 = 'SYS2.RACFMENU'

/********************************/
/* SPECIFY DATASETS FOR ISPTLIB */
/********************************/
T_SDSF = 'ISF.V1R5M0.SISFTLIB'
T_SMP  = 'GIM.SGIMTENU' DSNAME
T_HCD  = 'SYS1.SCBDTENU'
T_RMF3 = 'SYS1.SERBTENU'
T_OMVS = 'SYS1.SBPXTENU'
T_DFSRT = 'SYS1.ICEISPT'
T_DFDSS = 'SYS1.DGTTLIB'
T_IPCS  = 'SYS1.SBLSTBL0'
T_BKM  = 'EOY.SEOYTENU'
T_DELP = 'DELPHI.V221.CMDTAB'
T_ICQ = 'ICQ.ICQTLIB'
T_CDCU  = 'CDCU.DCZDTLB'
T_IOA1  = "'SYS3."||SHRNAME||".IOAIV410.TLIB'"
T_IOA2  = 'SYS3.IOA.TLIB'
T_IOA3  = 'SYS3.IOA500.PANEL'
T_HACC  = 'SYS3.ZHC240.ISPTLIB'
T_ISPF  = 'ISP.V4R2M0.SISPTENU'
T_RAC1  = 'SYS2.RACFTABL'

/********************************/
/* SPECIFY DATASETS FOR ISPSLIB */
/********************************/
S_SMP  = 'GIM.SGIMSENU'
S_IPCS = 'SYS1.SBLSKEL0'
S_DFSRT = 'SYS1.ICEISPS'
S_DFDSS = 'SYS1.DGTSLIB'
S_RACF = 'SYS1.HRFSKEL'
S_ICQ  = 'ICQ.ICQSLIB'
S_CDCU = 'CDCU.DCZDSLB'
S_CUS1 = 'MAINT.LIVE.SLIB'
S_IOA  = 'SYS3.IOA500.JCL'
S_ISPF = 'ISP.V4R2M0.SISPSLIB'
S_ISP2 = 'ISP.V4R2M0.SISPSENU'
S_RAC1 = 'SYS2.RACFSLIB'

/*******************************/
/* SPECIFY DATASETS FOR SYSLOG */
/*******************************/
H_ISF  = "'SYS0."SYSNAME".HASPINDX'"

END

/*********************************/
/*  SYSTEMS USERS                */
/*********************************/
IF (PROC = "SPFBOOL") THEN
DO
 IF SYSNAME = 'PRDD' THEN
    SYSPROC = C_ISP2 C_RAC3 C_CUS1 C_RAC1,
    C_SMPE C_IPCS C_HCD C_DFSRT C_DFDSS C_RMF C_ICQ,
    C_EDC C_BKM C_IOA3 C_IOA2 C_IOA1 C_HACC C_SDF C_OMVS C_CDCU
 ELSE
    SYSPROC = C_ISP2 C_RAC3 C_CUS1 C_RAC1,
    C_SMPE C_IPCS C_HCD C_DFSRT C_DFDSS C_RMF C_ICQ,
    C_EDC C_BKM C_IOA1 C_IOA2 C_HACC C_SDF C_OMVS C_CDCU
 SYSEXEC = E_ISP E_SYMC
 IF SUBSTR(UID,1,4) = 'SYS0' THEN
    ISPLLIB = L_SMP L_HCD L_HSM L_DFSRT L_DFDSS L_CDCU L_DITTO L_DELP,
    L_TSP1 L_HACC1 L_HACC2 L_MAIN
 ELSE
    ISPLLIB = L_SMP L_HCD L_HSM L_DFSRT L_DFDSS L_CDCU L_DITTO L_DELP,
    L_TSP1 L_HACC1 L_HACC2 L_MAIN
 IF SYSNAME = 'PRDD' THEN
    ISPPLIB = P_SDSF P_LMF P_IOA2 P_IOA1 P_IOA P_CUS1 P_CUS3,
    P_ISPF P_SMP P_HSM P_HCD P_RMF3 P_OMVS P_DFSRT P_DFDSS,
    P_RACF P_IPCS P_BKM P_DELP P_CDCU P_HACC P_ICQ P_SYMC
 ELSE
    ISPPLIB = P_DFDSS P_SDSF P_LMF P_IOA P_IOA1 P_CUS1,
    P_CUS3 P_ISPF P_SMP P_HSM P_HCD P_RMF3 P_OMVS P_DFSRT,
    P_RACF P_IPCS P_BKM P_DELP P_CDCU P_HACC P_ICQ P_SYMC
 IF SYSNAME = 'PRDD' THEN
    ISPMLIB = M_ISPF M_SDSF M_SMP M_HSM M_HCD M_OMVS M_RMF3 M_DFSRT,
    M_DFDSS M_RACF M_IPCS M_CUS1 M_C370 M_BKM M_DELP M_CDCU M_IOA3,
    M_IOA2 M_IOA1 M_HACC M_ICQ
 ELSE
    ISPMLIB = M_ISPF M_SDSF M_SMP M_HSM M_HCD M_OMVS M_RMF3 M_DFSRT,
    M_DFDSS M_RACF M_IPCS M_CUS1 M_C370 M_BKM M_DELP M_CDCU,
    M_IOA1 M_IOA2 M_HACC M_ICQ
 IF SYSNAME = 'PRDD' THEN
    ISPTLIB = T_SDSF T_SMP T_HCD T_RMF3 T_OMVS T_DFSRT M_DFDSS,
    T_IPCS T_BKM T_DELP T_ICQ T_CDCU T_IOA3 T_IOA2 T_IOA1 T_HACC,
    T_ISPF T_RAC1
 ELSE
    ISPTLIB = T_SDSF T_SMP T_HCD T_RMF3 T_OMVS T_DFSRT M_DFDSS,
    T_IPCS T_BKM T_DELP T_ICQ T_CDCU T_IOA1 T_IOA2 T_IOA3 T_HACC,
    T_ISPF T_RAC1
 ISPSLIB = S_SMP S_IPCS S_DFSRT S_DFDSS S_RACF S_ICQ S_CDCU,
    S_CUS1 S_ISPF S_IOA
 HASPINDX = H_ISF
 if tsover = 2050 then
  PNL = 'PANEL(ISP@390M)'
 else
  PNL = 'PANEL(ISP@BOOL)'
 JOBTRAC = 'YES'
END

/*********************************/
/*  PROGRAMMERS                  */
/*********************************/
IF (PROC = "PROGRAMR") |,
   (PROC = "UNIXUSER")
THEN DO
 IF SYSNAME = 'PRDD' THEN
    SYSPROC = C_RAC1 C_CUS1 C_CUS3 C_ISP2,
    C_DFSRT C_DFDSS C_SDF C_EDC C_BKM C_IOA3 C_IOA2
 ELSE
    SYSPROC = C_RAC1 C_CUS1 C_CUS3 C_ISP2,
    C_DFSRT C_DFDSS C_SDF C_EDC C_BKM C_IOA1
 SYSEXEC = E_ISP
 IF SYSNAME = 'PRDD' THEN
    ISPLLIB = L_MAIN L_DFSRT L_DFDSS L_DELP L_TSP1 L_SDF
 ELSE
    ISPLLIB = L_MAIN L_DFSRT L_DFDSS L_DELP L_TSP1 L_SDF
 IF SYSNAME = 'PRDD' THEN
    ISPPLIB = P_LMF P_CUS6 P_CUS3 P_MAIN P_DFSRT P_DFDSS,
    P_SDSF P_DELP P_IOA2 P_IOA1 P_BKM
 ELSE
    ISPPLIB = P_LMF P_CUS6 P_CUS3 P_MAIN P_DFSRT P_DFDSS,
    P_SDSF P_DELP P_IOA P_BKM
 IF SYSNAME = 'PRDD' THEN
    ISPMLIB = M_MAIN M_ISPF M_DFSRT M_DFDSS M_DELP M_C370 M_BKM,
    M_IOA3 M_IOA2 M_SDSF
 ELSE
    ISPMLIB = M_MAIN M_ISPF M_DFSRT M_DFDSS M_DELP M_C370 M_BKM,
    M_IOA1 M_SDSF
 IF SYSNAME = 'PRDD' THEN
    ISPTLIB = T_DFSRT T_DFDSS T_SDSF T_DELP T_BKM T_IOA2 T_ISPF
 ELSE
    ISPTLIB = T_DFSRT T_DFDSS T_SDSF T_DELP T_BKM T_IOA2 T_ISPF
 ISPSLIB = S_CUS1 S_DFSRT S_DFDSS S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@PRG)'
 JOBTRAC1 = 'YES'
END

/**********************************/
/*  OPERATORS USERS               */
/**********************************/
IF (PROC = "OPERATOR")
THEN DO
 IF SYSNAME = 'PRDD' THEN
    SYSPROC = C_ISP2 C_RAC1 C_CUS1 C_DFSRT C_DFDSS,
    C_RMF C_EDC C_BKM C_IOA3 C_IOA1
 ELSE
    SYSPROC = C_ISP2 C_RAC1 C_CUS1 C_DFSRT C_DFDSS,
    C_RMF C_EDC C_BKM C_IOA1
 SYSEXEC = E_ISP
 IF SYSNAME = 'PRDD' THEN
    ISPLLIB = L_DFSRT L_DFDSS L_TSP1
 ELSE
    ISPLLIB = L_DFSRT L_DFDSS L_TSP1
 IF SYSNAME = 'PRDD' THEN
    ISPPLIB = P_SDSF P_CUS3 P_CUS5 P_IOA2 P_IOA P_RMF3 P_DFSRT,
    P_DFDSS P_BKM
 ELSE
    ISPPLIB = P_SDSF P_CUS3 P_CUS5 P_IOA P_RMF3 P_DFSRT,
    P_DFDSS P_BKM
 ISPMLIB = M_ISPF M_SDSF M_RMF3 M_DFSRT M_DFDSS M_C370 M_BKM,
    M_IOA1
 ISPTLIB = T_SDSF T_RMF3 T_DFSRT T_DFDSS T_BKM T_IOA1 T_ISPF
 ISPSLIB = S_DFSRT S_DFDSS S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@OPS)'
 JOBTRAC = 'NO'
END

/*********************************/
/*  DIENS KONTROLE               */
/*********************************/
IF (PROC = "DIENSKRL")
THEN DO
 SYSPROC = C_RAC1 C_ISP2 C_DFDSS
 SYSEXEC = E_ISP
 ISPLLIB = L_DFDSS L_ISP L_TSP1
 ISPPLIB = P_CUS3 P_DFDSS P_SDSF P_ISPF
 ISPMLIB = M_DFDSS M_ISPF
 ISPTLIB = T_DFDSS T_SDSF T_ISPF
 ISPSLIB = S_DFDSS S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@DNS)'
 JOBTRAC = 'NO'
END

/********************************/
/*  NETWORK USERS               */
/********************************/
IF (PROC = "NETWORK")
THEN DO
 SYSPROC = C_RAC1 C_CUS1 C_DFSRT C_DFDSS C_ISP2
 SYSEXEC = E_ISP
 ISPLLIB = L_DFSRT L_DFDSS L_TSP1 L_ISP
 ISPPLIB = P_CUS3 P_CUS7 P_DFSRT P_DFDSS P_SDSF
 ISPMLIB = M_DFSRT M_DFDSS M_ISPF
 ISPTLIB = T_DFSRT T_DFDSS T_SDSF T_ISPF
 ISPSLIB = S_DFSRT S_DFDSS S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@NET)'
 JOBTRAC = 'NO'
END

/********************************/
/*  CONTROL USERS               */
/********************************/
IF (PROC = "AUTOMATE")
THEN DO
 IF SYSNAME = 'PRDD' THEN
    SYSPROC = C_RAC1 C_CUS1 C_OPS1 C_DFSRT,
    C_DFDSS C_BKM C_EDC C_IOA3 C_IOA2 C_IOA1 C_SMPE C_ISP2
 ELSE
    SYSPROC = C_RAC1 C_CUS1 C_OPS1 C_DFSRT,
    C_DFDSS C_BKM C_EDC C_IOA1 C_SMPE C_ISP2
 SYSEXEC = E_ISP
 ISPLLIB = L_DFSRT L_DFDSS L_TSP1 L_SMP
 IF SYSNAME = 'PRDD' THEN
    ISPPLIB = P_SDSF P_ISPF P_CUS3 P_CUS1,
    P_DFSRT P_DFDSS P_BKM P_IOA2 P_IOA P_IOA1 P_SMP
 ELSE
    ISPPLIB = P_SDSF P_ISPF P_CUS3 P_CUS1,
    P_DFSRT P_DFDSS P_BKM P_IOA P_IOA1 P_SMP
 IF SYSNAME = 'PRDD' THEN
    ISPMLIB = M_DFSRT M_DFDSS M_BKM M_IOA3 M_IOA2 M_ISPF M_SMP
 ELSE
    ISPMLIB = M_DFSRT M_DFDSS M_BKM M_IOA1 M_ISPF M_SMP
 IF SYSNAME = 'PRDD' THEN
    ISPTLIB = T_DFSRT T_DFDSS T_BKM T_IOA2 T_SDSF T_ISPF T_SMP
 ELSE
    ISPTLIB = T_DFSRT T_DFDSS T_BKM T_IOA1 T_SDSF T_ISPF T_SMP
 ISPSLIB = S_DFSRT S_DFDSS S_ISPF S_SMP
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@AUT)'
 JOBTRAC2 = 'YES'
END

/******************************/
/*  MEDIA USERS               */
/******************************/
IF (PROC = "MEDIA")
THEN DO
 IF SYSNAME = 'PRDD' THEN
    SYSPROC = C_RAC1 C_CUS1 C_OPS1 C_DFSRT,
    C_DFDSS C_BKM C_EDC C_IOA3 C_IOA2 C_IOA1 C_ISP2
 ELSE
    SYSPROC = C_RAC1 C_CUS1 C_OPS1 C_DFSRT,
    C_DFDSS C_BKM C_EDC C_IOA1 C_ISP2
 SYSEXEC = E_ISP
 ISPLLIB = L_DFSRT L_DFDSS L_TSP1
 IF SYSNAME = 'PRDD' THEN
    ISPPLIB = P_SDSF P_CUS5 P_CUS3 P_CUS1,
    P_DFSRT P_DFDSS P_BKM P_IOA2 P_IOA P_IOA1
 ELSE
    ISPPLIB = P_SDSF P_CUS5 P_CUS3 P_CUS1,
    P_DFSRT P_DFDSS P_BKM P_IOA P_IOA1
 IF SYSNAME = 'PRDD' THEN
    ISPMLIB = M_DFSRT M_DFDSS M_BKM M_IOA3 M_IOA2 M_ISPF
 ELSE
    ISPMLIB = M_DFSRT M_DFDSS M_BKM M_IOA1 M_ISPF
 IF SYSNAME = 'PRDD' THEN
    ISPTLIB = T_DFSRT T_DFDSS T_BKM T_IOA2 T_SDSF T_ISPF
 ELSE
    ISPTLIB = T_DFSRT T_DFDSS T_BKM T_IOA1 T_SDSF T_ISPF
 ISPSLIB = S_DFSRT S_DFDSS S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@MED)'
 JOBTRAC = 'NO'
END

/*********************************/
/*  ADMINISTRATOR                */
/*********************************/
IF (PROC = "DIENADMN") |,
   (PROC = "NETADMN") |,
   (PROC = "OPERADMN") |,
   (PROC = "MEDADMN") |,
   (PROC = "PROGADMN")
THEN DO
 SYSPROC = C_RAC1
 SYSEXEC = E_ISP
 ISPLLIB = L_ISP
 ISPPLIB = P_CUS3 P_SDSF
 ISPMLIB = M_RAC1
 ISPTLIB = T_RAC1 T_SDSF
 ISPSLIB = S_RAC1
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@ADMN)'
 JOBTRAC = 'NO'
END

/*********************************/
/*  VEILIGHEID ADMINISTRATOR     */
/*********************************/
IF (PROC = "SPFTHE")
THEN DO
 SYSPROC = C_RAC1 C_ISP2
 SYSEXEC = E_ISP
 ISPLLIB = L_ISP L_TSP1
 ISPPLIB = P_CUS3 P_DFDSS P_SDSF P_ISPF
 ISPMLIB = M_RAC1 M_RACF M_DFDSS M_ISPF
 ISPTLIB = T_RAC1 T_DFDSS T_SDSF
 ISPSLIB = S_RAC1 S_ISP2 S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@THE)'
 JOBTRAC = 'NO'
END

/*******************************/
/*  POLFIN USERS               */
/*******************************/
IF (PROC = "SPFPOL") THEN
DO
 SYSPROC = C_RAC1 C_ISP2
 SYSEXEC = E_ISP
 ISPLLIB = L_TSP1
 ISPPLIB = P_CUS3 P_SDSF P_ISPF
 ISPMLIB = M_ISPF
 ISPTLIB = T_SDSF T_ISPF
 ISPSLIB = S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@POL)'
 JOBTRAC = 'NO'
END

/****************************/
/*  KRS USERS               */
/****************************/
IF (PROC = "SPFKRI") THEN
DO
 SYSPROC = C_RAC1 C_ISP2
 SYSEXEC = E_ISP
 ISPLLIB = L_ISP L_TSP1
 ISPPLIB = P_CUS3 P_DFDSS P_SDSF P_ISPF
 ISPMLIB = M_RAC1 M_RACF M_DFDSS M_ISPF
 ISPTLIB = T_RAC1 T_DFDSS T_SDSF T_ISPF
 ISPSLIB = S_RAC1 S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@KRI)'
 JOBTRAC = 'NO'
END

/*********************************/
/*  READY PROMPT USERS           */
/*********************************/
IF (PROC = "READY") |,
   (PROC = "PDF") THEN
DO
 SYSPROC = C_RAC1
 SYSEXEC = E_ISP
 ISPLLIB = L_ISP
 ISPPLIB = P_CUS3
 ISPMLIB = M_ISPF
 ISPTLIB = T_ISPF
 ISPSLIB = S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL()'
 JOBTRAC = 'NO'
END

/*********************************/
/*  COMPLETE ADMINISTRATORS      */
/*********************************/
IF (PROC = "COMADMN") THEN
DO
 SYSPROC = C_RAC1 C_ISP2
 SYSEXEC = E_ISP
 ISPLLIB = L_ISP
 ISPPLIB = P_CUS3 P_SDSF
 ISPMLIB = M_RAC1 M_RACF
 ISPTLIB = T_RAC1 T_SDSF
 ISPSLIB = S_RAC1
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@COMA)'
 JOBTRAC = 'NO'
END

/*********************************/
/*  COMPLETE ADMINISTRATORS      */
/*********************************/
IF (PROC = "COMRESU") THEN
DO
 SYSPROC = C_RAC1 C_ISP2
 SYSEXEC = E_ISP
 ISPLLIB = L_ISP
 ISPPLIB = P_CUS3 P_SDSF
 ISPMLIB = M_RAC1 M_RACF
 ISPTLIB = T_RAC1 T_SDSF
 ISPSLIB = S_RAC1
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@COMR)'
 JOBTRAC = 'NO'
END

/*********************************/
/*  CONTROL-D USERS              */
/*********************************/
IF (PROC = "SPFCTD")
THEN DO
 IF SYSNAME = 'PRDD' THEN
 SYSPROC = C_RAC1 C_IOA3 C_IOA1
 else
 SYSPROC = C_RAC1 C_IOA3 C_IOA1
 SYSEXEC = E_ISP
 ISPLLIB = L_ISP
 ISPPLIB = P_CUS3 P_SDSF P_ISPF P_IOA2 P_IOA
 ISPMLIB = M_IOA3 M_IOA1 M_ISPF
 ISPTLIB = T_IOA1 T_SDSF T_ISPF
 ISPSLIB = S_ISPF
 HASPINDX = H_ISF
 PNL = 'PANEL(ISP@CTD)'
 JOBTRAC = 'NO'
END

/***********************************/
/** CHECK FOR UNKNOWN PROC        **/
/***********************************/
IF ISPPLIB = "ISPPLIB" THEN
DO
 SAY ' '
 SAY ' '
 SAY 'YOUR LOGON PROCEDURE IS UNKNOWN TO TSO'
 SAY 'PLEASE VERIFY THAT YOUR LOGON PROCEDURE IS CORRECT'
 SAY ' '
 SAY 'OR CALL YOUR HELPDESK FOR HELP'
 EXIT 12
END

/***********************************/
/** JOBTRAC ADDITIONAL ALLOCATIONS */
/***********************************/
IF JOBTRAC = 'YES' THEN
DO
 "FREE FI(SMPTABL,ISRCFIL,CISTABL)"
 "FREE FI(ICQAATAB)"
 "FREE FI(ICQABTAB)"
 "FREE FI(ICQANTAB)"
 "FREE FI(ICQAPTAB)"
 "FREE FI(ICQAMTAB)"
 "FREE FI(ICQCMTAB)"
 "FREE FI(DVDMSL)"
 "FREE FI(DVDMSLT)"
 "FREE FI(DVDMSLP)"
 "FREE FI(DVDITF)"
 "FREE FI(DVDTML)"
 X=MSG('ON');
B4 = '"ALLOC FI(SMPTABL) SHR DA('||DSNAME||')"'
INTERPRET B4
 "ALLOC FI(ICQAATAB) SHR DA(ICQ.ICQAATAB)"
 "ALLOC FI(ICQABTAB) SHR DA(ICQ.ICQABTAB)"
 "ALLOC FI(ICQANTAB) SHR DA(ICQ.ICQANTAB)"
 "ALLOC FI(ICQAPTAB) SHR DA(ICQ.ICQAPTAB)"
 "ALLOC FI(ICQAMTAB) SHR DA(ICQ.ICQAMTAB)"
 "ALLOC FI(ICQCMTAB) SHR DA(ICQ.ICQCMTAB)"
 "ALLOC FI(ISRCFIL) SHR DA(SYSA.SPF.CFIL)"
 "ALLOC FI(CISTABL) SHR DA(SYS2.CIDTABL)"
/*  "ALLOC FI(DVDMSL) SHR DA(SDF150.MSL)"      */
/*  "ALLOC FI(DVDMSLP) SHR DA(SDF150.MSLP)"    */
/*  "ALLOC FI(DVDMSLT) SHR DA(SDF150.MSLT)"    */
/*  "ALLOC FI(DVDTML) SHR DA(SDF150.TML)"      */
/*  "ALLOC FI(DVDITF) SHR DA(SDF150.ITF)"      */

 X=MSG('OFF');
END

IF JOBTRAC1 = 'YES' THEN
DO
 "FREE FI(ISRCFIL)"
 "FREE FI(DVDMSL)"
 "FREE FI(DVDMSLT)"
 "FREE FI(DVDMSLP)"
 "FREE FI(DVDITF)"
 "FREE FI(DVDTML)"
 X=MSG('ON');
 "ALLOC FI(ISRCFIL) SHR DA(SYSA.SPF.CFIL)"

 X=MSG('OFF');
END

IF JOBTRAC2 = 'YES' THEN
DO
 "FREE FI(SMPTABL)"
 "FREE FI(CISTABL)"
 X=MSG('ON');
 "ALLOC FI(CISTABL) SHR DA(SYS2.CIDTABL)"
B4 = '"ALLOC FI(SMPTABL) SHR DA('||DSNAME||')"'
INTERPRET B4

 X=MSG('OFF');
END
/******************************/
/** STANDARD ISPF ALLOCTIONS **/
/******************************/
"FREE FI(SYSPROC,SYSEXEC,ISPLLIB,ISPPLIB,ISPMLIB,ISPSLIB,ISPTLIB)"
"FREE FI(HASPINDX)"

X = MSG('ON')
"ALLOC FI(SYSPROC) DA("SYSPROC") SHR"
"ALLOC FI(SYSEXEC) DA("SYSEXEC") SHR"
"ALLOC FI(ISPLLIB) DA("ISPLLIB") SHR"
"ALLOC FI(ISPPLIB) DA("ISPPLIB") SHR"
"ALLOC FI(ISPMLIB) DA("ISPMLIB") SHR"
"ALLOC FI(ISPTLIB) DA("ISPTLIB") SHR"
"ALLOC FI(ISPSLIB) DA("ISPSLIB") SHR"
"ALLOC FI(HASPINDX) DA("HASPINDX") SHR"
X = MSG('ON')

"EXECUTIL SEARCHDD(YES)"
SIGNAL NO_COMMENT
/*
   THE ABOVE SIGNAL PREVENT INTERPRETATION OF LONG LINES OF COMMENTS,
   SINCE IT BRANCHES AROUND THEM ALL
*/
/*--------------------------------------------------------------------+
 | IF THE USER HAS A DDIR, THEN ALLOC ALL FILES REQUIRED BY IPCS,     |
 |           THEN CALL IPCS.                                          |
 | SINCE IPCS DOES NOT SEEM TO RECOGNIZE REXX COMMANDS, WE PULL A     |
 |           JIPPO BY QUEUEING THE COMMAND 'PDF PANEL(XXXXXXXX)'      |
 |           BEFORE CALLING IPCS.  THIS WAY,  SINCE IPCS DOES NOT     |
 |           SEE ANY MORE CMDS IN THE EXEC (CLIST), IT PULL WHAT      |
 |           WAS IN THE COMMAND STACK.                                |
 +--------------------------------------------------------------------*/
NO_COMMENT:

Call USER_PROFILE

ddir = "'"userid()".D"sid"0.DDIR'"
RC = LISTDSI(DDIR)
If rc > 4 then do        /* Check for the old one */
   DDIR = "'"||UID||".DDIR'"
   rc = listdsi(ddir)
   end
IF RC > 4 THEN
   "PDF" PNL
ELSE DO
   X = OUTTRAP(ON)
   "VFY DS("DDIR")"
   X = OUTTRAP(X)
   "ALLOC FI(IPCSDDIR) DA("DDIR") SHR"
   "ALLOC FI(IPCSPARM) DA('SYS2.PARMLIB') SHR"
   "ALLOC FI(IPCSPRNT) SYS(X) HOLD"
   QUEUE 'PDF' PNL
   "IPCS PARM(01)"
END

Exit 0  /*-------------------------------------------------------*/

USER_PROFILE:

user_prof = "'"userid()".A0.TSPROF(PROF000)'"
If sysdsn(user_prof) = 'OK' then do
   Say 'Executing' user_prof
   'EXEC' user_prof 'EXEC'
   end

Return
./ ADD NAME=KASTINIT 0101-01016-01016-1428-00019-00019-00000-RACFCLS
//KASTINIT JOB  (1,REOPS,OPS,27),'KASTINIT',
//         CLASS=A,MSGCLASS=X,
//         USER=INIT,PASSWORD=KASTINIT
//STEP1    EXEC PGM=IEHINITT
//SYSUT1   DD   UNIT=(KAST,,DEFER),LABEL=(,SL)
//SYSPRINT DD   SYSOUT=*
//SYSIN    DD   DSN=TMS.KAST,DISP=OLD
//*
//STEP2    EXEC PGM=IEBGENER,COND=(08,LT,STEP1)
//SYSPRINT DD SYSOUT=*
//SYSIN    DD DUMMY
//SYSUT1   DD DSN=TMS.TEMPKAST,DISP=OLD
//SYSUT2   DD DSN=TMS.KASTINIT,DISP=MOD
//*
//STEP3    EXEC PGM=IEBGENER,COND=(08,LT,STEP1)
//SYSPRINT DD SYSOUT=*
//SYSIN    DD DUMMY
//SYSUT1   DD DSN=TMS.TEMPKAST,DISP=OLD
//SYSUT2   DD DSN=TMS.KASTINIT.DATA,DISP=MOD
./ ADD NAME=KRIDLY   0101-01016-01016-1428-00106-00106-00000-RACFCLS
/* REXX */
TRACE NONE
"PROFILE NOPREFIX"
"EXECIO * DISKR INDD (FINIS STEM INPUT1."

CALL HEAD1

MMM.1 = 0
MMM.2 = 31
MMM.3 = 59
MMM.4 = 90
MMM.5 = 120
MMM.6 = 151
MMM.7 = 181
MMM.8 = 212
MMM.9 = 243
MMM.10 = 273
MMM.11 = 304
MMM.12 = 334

TELR = 0
TELW = 5
CALL READ1
DO WHILE TELR <= INPUT1.0
 IF STD = "STD" THEN
 DO
  CALL JULIAN
  IF DAYS <> 0 THEN
    TELW = TELW + 1
  IF DATEMM < 10 THEN DATEMM = "0" || DATEMM
  DE = DATEYY || "-" || DATEMM || "-" || DATEDD
  DE = JUSTIFY(DE,8)
  SZ = JUSTIFY(SIZE,6)
  DS = JUSTIFY(DAYS,3)
  JR = JUSTIFY(JOBNR,8)
  JN = JUSTIFY(JOBNAME,8)
  PI = JUSTIFY(PID,8)

  IF DAYS >= 0 THEN
  IF STATUS = "USER" THEN
   OUT1.TELW = "|*" || PI || "*|" JR "|" JN "|" SZ "|" DS "|" DE "|"
  ELSE
   OUT1.TELW = "|" PI "|" JR "|" JN "|" SZ "|" DS "|" DE "|"
 END
 CALL READ1
END
CALL WRITE
CALL KLAAR

JULIAN:
CUR_DATEJ = DATE('J')
CUR_DATED = DATE('D')
JOB_DATED = MMM.DATEMM + DATEDD
JOB_DATEJ = DATEYY || JOB_DATED
CUR_YY = SUBSTR(CUR_DATEJ,1,2)
JOB_YY = SUBSTR(JOB_DATEJ,1,2)

IF CUR_YY = JOB_YY THEN DAYS = CUR_DATED - JOB_DATED
ELSE DAYS = (365 - JOB_DATED) + CUR_DATED
RETURN

/*****************/
/*** READ SDSF ***/
/*****************/
READ1:
TELR = TELR + 1
JOBNAME = SUBSTR(INPUT1.TELR,6,8)
JOBNR = SUBSTR(INPUT1.TELR,15,8)
STD = SUBSTR(INPUT1.TELR,40,3)
PID = SUBSTR(INPUT1.TELR,54,8)
SIZE = SUBSTR(INPUT1.TELR,74,8)
DATE = SUBSTR(INPUT1.TELR,224,8)
DATEM1 = SUBSTR(INPUT1.TELR,224,1)
DATEM2 = SUBSTR(INPUT1.TELR,225,1)
DATEMM = SUBSTR(INPUT1.TELR,224,2)
IF DATEMM < 10 THEN DATEMM = DATEM2
DATEDD = SUBSTR(INPUT1.TELR,227,2)
DATEYY = SUBSTR(INPUT1.TELR,230,2)
STATUS = SUBSTR(INPUT1.TELR,122,4)
RETURN

/***********/
/*** WRITE**/
/*********/
WRITE:
 "EXECIO * DISKW OUTDD (STEM OUT1."
RETURN

/**************/
/*** HEADING  */
/**************/
HEAD1:
OUT1.1 = "REPORT CREATED ON " || DATE() TIME()
OUT1.2 = " "
OUT1.3 ="+----------------------------------------------------------+"
OUT1.4 ="| PRINTER  | JOBNR    | JOBNAME  | SIZE   | DAYS| CR DATE  |"
OUT1.5 ="|----------------------------------------------------------|"
RETURN

KLAAR:
OUT1. ="+----------------------------------------------------------+"
"EXECIO 1 DISKW OUTDD (STEM OUT1."

"EXECIO 0 DISKW OUTDD (FINIS"
SAY "ENDED "
EXIT
./ ADD NAME=KRIPID   0101-01016-01016-1428-00092-00092-00000-RACFCLS
/* REXX */
/****************************/
/**  ADD KRI PRINTERS      **/
/****************************/
"PROF NOPREF"
ARG INPUT
 PARSE VALUE INPUT WITH ACTION ':' PID ':' WEB ':' LOC
"ALLOC DA('MAINT.KRI.WEBNR') FI(XXX) OLD"
IF RC <> 0 THEN
DO
 SAY " "
 SAY " "
 SAY " "
 SAY " "
 SAY " "
 SAY " "
 SAY " "
 SAY " "
 SAY " "
 SAY " "
 SAY "                          +--------------------+"
 SAY "                          ø DATASET IN USE BY  ø"
 SAY "                          ø ANOTHER USER       ø"
 SAY "                          ø PLEASE WAIT ....   ø"
 SAY "                          +--------------------+"
 EXIT
END

"EXECIO * DISKR XXX (FINIS STEM IN."
"FREE FI(XXX)"

X = MSG('OFF')

SELECT
WHEN ACTION = "ADD" THEN
 CALL ADD
WHEN ACTION = "DEL" THEN
 CALL DEL
WHEN ACTION = "LIST" THEN
 "ISPEXEC BROWSE DATASET('MAINT.KRI.WEBNR')"
WHEN ACTION = "PRT" THEN
DO
 L = "PRINTOFF 'MAINT.KRI.WEBNR' DEST("PID")"
 L = '"'||L||'"'
 INTERPRET L
 IF RC = 0 THEN SAY "LISTING ROUTED TO" PID
 ELSE SAY "LISTING NOT ROUTED - PLEASE CALL FOR HELP - RC="||RC
END
OTHERWISE NOP
END
EXIT

ADD:
"ALLOC DA('MAINT.KRI.WEBNR') FI(XXX) OLD"
TEL=0
DO UNTIL TEL >= IN.0
 TEL=TEL+1
 OUT. = IN.TEL
 IN_PID = SUBSTR(IN.TEL,1,8)
 IF PID <> IN_PID THEN
  "EXECIO 1 DISKW XXX (STEM OUT."
END

"EXECIO 0 DISKW XXX (FINIS"
"FREE FI(XXX)"

"ALLOC DA('MAINT.KRI.WEBNR') FI(XXX) MOD"
 OUT. = PID WEB LOC
"EXECIO 1 DISKW XXX (FINIS STEM OUT."
 "FREE FI(XXX)"
 SAY PID WEB " - ADDED SUCCESSFUL"
 RETURN

DEL:
TEL=0
FOUND="FALSE"
"ALLOC DA('MAINT.KRI.WEBNR') FI(XXX) OLD"
DO UNTIL TEL >= IN.0
 TEL=TEL+1
 OUT. = IN.TEL
 IN_PID = SUBSTR(IN.TEL,1,8)
 IF PID <> IN_PID THEN
 "EXECIO 1 DISKW XXX (STEM OUT."
 ELSE FOUND = "TRUE"
END

 "EXECIO 0 DISKW XXX (FINIS"
 "FREE FI(XXX)"

 IF FOUND = "FALSE" THEN SAY PID "- NOT IN DATASET"
 ELSE SAY PID "- DELETED"
 RETURN
./ ADD NAME=KRIPRT   0101-01016-01016-1428-00207-00207-00000-RACFCLS
/* REXX */
/*****************************************************/
/* LIST ALL INACTIVE PRINTERS FOR CERTAIN PERIOD     */
/*****************************************************/
TRACE NONE
"PROFILE NOPREFIX"

ARG INPUT
 PARSE VALUE INPUT WITH ACTION ':' SDT ':' EDT
 "ALLOC DA('MAINT.KRI.WEBNR') FI(IN2) SHR"
 "ALLOC DA('MAINT.KRI.INACTIVE.PRINTER.INT') FI(OUT1) SHR"
 "ALLOC DA('MAINT.KRI.ACTIVE.PRINTER.INT') FI(OUT2) SHR"
 "ALLOC DA('MAINT.KRI.ACTIVE.PRINTER') FI(IN1) SHR"
IF RC <> 0 THEN
DO
 SAY " "
 SAY " "
 SAY " "
 SAY " "
 SAY " "
 SAY " "
 SAY " "
 SAY " "
 SAY " "
 SAY " "
 SAY "                          +--------------------+"
 SAY "                          ø DATASET IN USE BY  ø"
 SAY "                          ø ANOTHER USER       ø"
 SAY "                          ø PLEASE WAIT ....   ø"
 SAY "                          +--------------------+"
 EXIT
END


X = MSG('OFF')

SELECT
WHEN ACTION = "ACT" THEN
 CALL ACT
WHEN ACTION = "INACT" THEN
 CALL INACT
WHEN ACTION = "PRT1" THEN
DO
 L = "PRINTOFF 'MAINT.KRI.INACTIVE.PRINTER.INT' DEST("SDT")"
 L = '"'||L||'"'
 INTERPRET L
 IF RC = 0 THEN SAY "LISTING ROUTED TO" SDT
 ELSE SAY "LISTING NOT ROUTED - PLEASE CALL FOR HELP - RC="||RC
END
WHEN ACTION = "PRT2" THEN
DO
 L = "PRINTOFF 'MAINT.KRI.ACTIVE.PRINTER.INT' DEST("SDT")"
 L = '"'||L||'"'
 INTERPRET L
 IF RC = 0 THEN SAY "LISTING ROUTED TO" SDT
 ELSE SAY "LISTING NOT ROUTED - PLEASE CALL FOR HELP - RC="||RC
END
OTHERWISE NOP
END
"FREE FI(IN1)"
"FREE FI(IN2)"
"FREE FI(OUT1)"
"FREE FI(OUT2)"
EXIT

ACT:
/***********************************/
/* ACTIVE PR MANAGEMENT            */
/***********************************/
"EXECIO * DISKR IN1 (FINIS STEM IN."
"FREE FI(IN1)"

 OUT.1 = "ACTIVE PRINTERS"
 OUT.2 = "---------------"
 OUT.3 = " "
 OUT.4 = "REPORT CREATED ON " DATE() TIME()
 OUT.5 = " "
 OUT.5 = "FROM DATE -" SDT  " TO DATE - " EDT
 OUT.6 = " "
 OUT.7 = ""
 "EXECIO * DISKW OUT2 (STEM OUT."
MMM.01 = 000
MMM.02 = 031
MMM.03 = 059
MMM.04 = 090
MMM.05 = 120
MMM.06 = 151
MMM.07 = 181
MMM.08 = 212
MMM.09 = 243
MMM.10 = 273
MMM.11 = 304
MMM.12 = 334

MS = SUBSTR(SDT,3,2)
DD = SUBSTR(SDT,5,2)
JULS = MMM.MS + DD
JULS = RIGHT(JULS,3,'0')
JULS = SUBSTR(SDT,1,2) || JULS

ME = SUBSTR(EDT,3,2)
DD = SUBSTR(EDT,5,2)
JULE = MMM.ME + DD
JULE = RIGHT(JULE,3,'0')
JULE = SUBSTR(EDT,1,2) || JULE

TEL = 0
DO WHILE TEL <= IN.0
 TEL = TEL + 1
 JULC = SUBSTR(IN.TEL,1,5)
 IF (JULC >= JULS) & (JULC <= JULE) THEN
 DO
   OUT. = SUBSTR(IN.TEL,6,80)
   "EXECIO 1 DISKW OUT2 (STEM OUT."
   TEL = TEL + 1
 END
 ELSE TEL = TEL + 1
END
"EXECIO 0 DISKW OUT2 (FINIS"
"FREE FI(OUT1)"
"FREE FI(OUT2)"
 "ISPEXEC BROWSE DATASET('MAINT.KRI.ACTIVE.PRINTER.INT')"
RETURN

INACT:
/***********************************/
/* INACTIVE PR MANAGEMENT            */
/***********************************/
"EXECIO * DISKR IN1 (FINIS STEM IN."
"FREE FI(IN1)"
"EXECIO * DISKR IN2 (FINIS STEM IN2."
"FREE FI(IN2)"

 OUT.1 = "INACTIVE PRINTERS"
 OUT.2 = "-----------------"
 OUT.3 = " "
 OUT.4 = "REPORT CREATED ON " DATE() TIME()
 OUT.5 = " "
 OUT.6 = "FROM DATE -" SDT  " TO DATE - " EDT
 OUT.7 = " "
 OUT.8 = ""
 "EXECIO * DISKW OUT1 (STEM OUT."

MMM.01 = 000
MMM.02 = 031
MMM.03 = 059
MMM.04 = 090
MMM.05 = 120
MMM.06 = 151
MMM.07 = 181
MMM.08 = 212
MMM.09 = 243
MMM.10 = 273
MMM.11 = 304
MMM.12 = 334

MS = SUBSTR(SDT,3,2)
DD = SUBSTR(SDT,5,2)
JULS = MMM.MS + DD
JULS = RIGHT(JULS,3,'0')
JULS = SUBSTR(SDT,1,2) || JULS

ME = SUBSTR(EDT,3,2)
DD = SUBSTR(EDT,5,2)
JULE = MMM.ME + DD
JULE = RIGHT(JULE,3,'0')
JULE = SUBSTR(EDT,1,2) || JULE

TELW= 0
DO WHILE TELW <= IN2.0
 TELW= TELW+ 1
 PID2 = SUBSTR(IN2.TELW,1,8)
 LOC2 = SUBSTR(IN2.TELW,19,60)
 CALL READ
 IF FOUND <> "TRUE" THEN
 DO
   OUT. = IN2.TELW
   "EXECIO 1 DISKW OUT1 (STEM OUT."
 END
 TELW = TELW + 1
END
"EXECIO 0 DISKW OUT1 (FINIS"

"FREE FI(OUT1)"
"FREE FI(OUT2)"
 "ISPEXEC BROWSE DATASET('MAINT.KRI.INACTIVE.PRINTER.INT')"
RETURN

READ:
/********************/
/* READ WEB         */
/********************/
TEL = 0
FOUND = "FALSE"
DO WHILE TEL <= IN.0
 TEL = TEL + 1
 JULC = SUBSTR(IN.TEL,1,5)
 PID1 = SUBSTR(IN.TEL,7,8)
 IF (JULC >= JULS) & (JULC <= JULE) THEN
 DO
  IF PID1 = PID2 THEN
   FOUND = "TRUE"
 TEL = TEL + 1
 END
 ELSE TEL = TEL + 1
END
RETURN
./ ADD NAME=KRISDSF  0101-01016-01016-1428-00100-00100-00000-RACFCLS
/* REXX */
/* **************************************************************** */
/* ** GENERATE JCL FOR KRI SDSF IN BATCH FOR PRINTER MAINT.       ** */
/* **************************************************************** */
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY "                         +-------------------+"
SAY "                         ø   JOB SUBMITTED   ø"
SAY "                         ø    PLEASE WAIT    ø"
SAY "                         +-------------------+"
"PROFILE NOPREFIX"

 X = MSG('OFF')
 ID = SYSVAR(SYSUID)
 AL1 =  '"ALLOC DA('ID'.KRISDSF) SP(1,1) TRACKS',
      'DIR(0) DSORG(PS) RECFM(F B) LRECL(80) BLKSIZE(18400) FI(OUT1)"'
 INTERPRET AL1

 CALL WRITE1
 CALL KLAAR

/*******************************************/
/*** WRITE */
/*******************************************/
WRITE1:
OUT1.1= "//KRI     JOB (1,RESYS,SYS,01),'SDSF B',CLASS=A,MSGCLASS=V, "
OUT1.2= "//        NOTIFY=&SYSUID,REGION=8M"
OUT1.3= "//* "
OUT1.4= "//STEP1    EXEC PGM=SQLPLUS,REGION=0M"
OUT1.5= "//DUMMY1   DD DSN=MAINT.KRI.WEBNR,DISP=(OLD,PASS)"
OUT1.6= "//DUMMY2   DD DSN=MAINT.KRI.FAULTY.PRINTER,DISP=(OLD,PASS)"
OUT1.7= "//DUMMY3   DD DSN=MAINT.KRI.FAULTY.PRINTER.SUM,DISP=OLD"
OUT1.8= "//DUMMY4   DD DSN=MAINT.KRI.SDSF,DISP=(OLD,PASS)"
OUT1.9= "//SYSUDUMP DD SYSOUT=*"
OUT1.10="//SQLLOGIN DD DSN=DVS.LIVE.CNTL(SQLLOGIN),DISP=SHR"
OUT1.11="//SYSOUT   DD SYSOUT=*"
OUT1.12="//SYSERR   DD SYSOUT=*,DCB=(LRECL=132,BLKSIZE=1320,RECFM=VB)"
OUT1.13="//ORA@MPM7 DD DUMMY"
OUT1.14="//SYSIN    DD *"
OUT1.15="OPS$DVS/X"
OUT1.16="SPOOL /DSN/MAINT.KRI.FAULT.OUTSTAND"
OUT1.17=" "
OUT1.18="SELECT DISTINCT AL_REEKSNMR, AI_DIENSNMR"
OUT1.19="FROM   DVSB003_VW1"
OUT1.20="WHERE  AI_AFHANDEL_DAT  IS    NULL"
OUT1.21="AND    AL_REEKSNMR      LIKE  'WEB%'"
OUT1.22="ORDER BY AL_REEKSNMR"
OUT1.23="/"
OUT1.24="SPOOL OFF"
OUT1.25="/*"
OUT1.26="//*"
OUT1.27= "//STEP2   EXEC PGM=IEBGENER"
OUT1.28= "//SYSPRINT DD  SYSOUT=*"
OUT1.29= "//SYSUT1   DD  DSN=MAINT.KRI.SDSF,DISP=SHR"
OUT1.30= "//SYSUT2  DD  DUMMY,DCB=(LRECL=241,BLKSIZE=18316,RECFM=FBA)"
OUT1.31= "//SYSIN    DD  DUMMY"
OUT1.32= "//*"
OUT1.33= "//STEP3   EXEC PGM=SDSF,PARM='++240,240'"
OUT1.34= "//ISFOUT   DD  DSN=MAINT.KRI.SDSF,DISP=SHR"
OUT1.35= "//ISFIN    DD  *"
OUT1.36= "O"
OUT1.37= "++ALL"
OUT1.38= "/*"
OUT1.39="//*"
OUT1.40="//STEP4    EXEC PGM=IKJEFT01,PARM=KRIDLY,COND=(00,NE)"
OUT1.41="//SYSTSPRT DD   SYSOUT=* "
OUT1.42="//SYSEXEC  DD   DSN=SYS2.RACFCLST,DISP=SHR"
OUT1.43="//INDD     DD   DSN=MAINT.KRI.SDSF,DISP=SHR "
OUT1.44="//OUTDD    DD   DSN=MAINT.KRI.FAULTY.PRINTER,DISP=OLD "
OUT1.45="//SYSTSIN  DD   DUMMY"
OUT1.46="//*"
OUT1.47="//STEP5    EXEC PGM=IKJEFT01,PARM=KRISUM,COND=(00,NE)"
OUT1.48="//SYSTSPRT DD   SYSOUT=* "
OUT1.49="//SYSEXEC  DD   DSN=SYS2.RACFCLST,DISP=SHR"
OUT1.50="//INDD     DD   DSN=MAINT.KRI.FAULTY.PRINTER,DISP=SHR "
OUT1.51="//INPR     DD   DSN=MAINT.KRI.WEBNR,DISP=SHR "
OUT1.52="//INDKS    DD   DSN=MAINT.KRI.FAULT.OUTSTAND,DISP=SHR "
OUT1.53="//OUTDD    DD   DSN=MAINT.KRI.FAULTY.PRINTER.SUM,DISP=OLD "
OUT1.54="//SYSTSIN  DD   DUMMY"

"EXECIO * DISKW OUT1 (STEM OUT1."
RETURN


KLAAR:
"EXECIO 0 DISKW OUT1 (FINIS"
"FREE FI(OUT1)"
DSN1 = "'"ID".KRISDSF'"
DEL1 = '"DEL 'DSN1'"'
SUB1 = '"SUB 'DSN1'"'
INTERPRET SUB1
INTERPRET DEL1
EXIT
./ ADD NAME=KRISUM   0101-01016-01016-1428-00141-00141-00000-RACFCLS
/* REXX */
TRACE NONE
"PROFILE NOPREFIX"
"EXECIO * DISKR INDD (FINIS STEM INPUT1."
"EXECIO * DISKR INPR (FINIS STEM INPUT2."
"EXECIO * DISKR INDKS (FINIS STEM INPUT3."

 OUT1.1 = " REPORT CREATED ON " DATE() TIME()
 OUT1.2 = " "
 "EXECIO * DISKW OUTDD (STEM OUT1."

PTEL = 0
TELR = 0
TELW = 0
TELD = 0
CALL READ1

DO WHILE TELR <= INPUT1.0
 IF PID = PIDN THEN CALL READ1
 ELSE
 DO
  IF PIDSUB = "P00" THEN CALL DKS
  CALL READ1
 END
END
CALL KLAAR

/*********************/
/*** FIND DKS ENTRY **/
/*********************/
DKS:
 TELD = 0
 TELR2 = 0
 OLDEST = OLDL

 /******************/
 /* FIND WEBNR     */
 /******************/
 WEB_CURRENT = " "
 DO UNTIL TELR2 >= INPUT2.0
  IF PID = PID2 THEN
  DO
   WEB_CURRENT = WEB2
   USER_CURRENT = USER
  END
 CALL READ2
 END

 CALL READ3
 FOUND = "FALSE"

 DO WHILE TELD <= INPUT3.0
  IF WEB <> WEB_CURRENT THEN CALL READ3
  ELSE
  DO
   CALL WRITE1
   FOUND = "TRUE"
   TELD = INPUT3.0 + 1
  END
 END

 IF FOUND = "FALSE" THEN
 DO
  DIENSNR = " ** FAULT NOT REPPORTED TO INFORMATION SYSTEMS **"
  CALL WRITE1
 END
 RETURN

/*****************/
/*** READ FAULT***/
/*****************/
READ1:
TELR = TELR + 1
TELRN = TELR + 1
PID = SUBSTR(INPUT1.TELR,3,8)
PIDSUB = SUBSTR(INPUT1.TELR,3,3)
PIDSUB1 = SUBSTR(INPUT1.TELR,3,1)
PIDSUB2 = SUBSTR(INPUT1.TELR,4,7)
PIDN = SUBSTR(INPUT1.TELRN,3,8)
IF (DATATYPE(PIDSUB2,'X') = 1) & (PIDSUB1 = "P") THEN PTEL = PTEL + 1
TELO = (TELR - PTEL) + 1
OLDL = SUBSTR(INPUT1.TELO,45,4)
RETURN


READ2:
/*****************/
/*** READ WEBNR***/
/*****************/
TELR2 = TELR2 + 1
PID2 = SUBSTR(INPUT2.TELR2,1,8)
WEB2 = SUBSTR(INPUT2.TELR2,10,8)
USER = SUBSTR(INPUT2.TELR2,19,60)
/*IF PID = PID2 THEN TELR2 = INPUT2.0*/
RETURN

READ3:
/*****************/
/*** READ DKSREP */
/*****************/
TELD = TELD + 1
DIENSNR = SUBSTR(INPUT3.TELD,22,15)
WEB = SUBSTR(INPUT3.TELD,1,8)
RETURN

/***********/
/*** WRITE**/
/*********/
WRITE1:
OUT1.1 = CENTER(PID,80,'-')
OUT1.2 = PID
OUT1.3 = "NUMBER OF COPIES WAITING TO PRINT =" PTEL
OUT1.4 = "OLDEST LISTING = " || OLDEST ||" DAYS"
OUT1.5 = " "
OUT1.6 = ""

PTEL = 0;
FOUND="FALSE"
TELR2 = 0
CALL READ2

DO UNTIL TELR2 >= INPUT2.0
 IF PID = PID2 THEN
 DO
  OUT1.6 = "LOCATION OF PRINTER =" USER_CURRENT
  OUT1.7 = "WEBNR =" WEB_CURRENT
  OUT1.8 = "FAULTNR =" DIENSNR
  FOUND = "TRUE"
 END
 CALL READ2
END
 IF FOUND = "FALSE" THEN  OUT1.5 = "* PRINTER INFORMATION IS UNKNOWN *"
 "EXECIO * DISKW OUTDD (STEM OUT1."
RETURN


KLAAR:

"EXECIO 0 DISKW OUTDD (FINIS"
SAY "ENDED "
EXIT
./ ADD NAME=KRIUTIL  0101-01016-01016-1428-00136-00136-00000-RACFCLS
/* REXX */
/****************************/
/**THE PRINT MAINT         **/
/****************************/
"PROF NOPREF"
ARG INPUT
PARSE VALUE INPUT WITH INPUT ':' PRN

X = MSG('OFF')

SELECT
WHEN INPUT = "CREATE" THEN
 CALL KRISDSF
WHEN INPUT = "LIST" THEN
DO
 "ALLOC DA('MAINT.KRI.FAULTY.PRINTER') FI(XXX) OLD"
 IF RC <> 0 THEN
 DO
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
  SAY "                          +--------------------+"
  SAY "                          ø CREATE FACILITY IS ø"
  SAY "                          ø STILL BUSY         ø"
  SAY "                          ø PLEASE WAIT ....   ø"
  SAY "                          +--------------------+"
 END
ELSE
DO
 "FREE FI(XXX)"
 "ISPEXEC BROWSE DATASET('MAINT.KRI.FAULTY.PRINTER')"
END
END
WHEN INPUT = "SUMMARY" THEN
DO
 "ALLOC DA('MAINT.KRI.FAULTY.PRINTER.SUM') FI(XXX) OLD"
 IF RC <> 0 THEN
 DO
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
  SAY "                          +--------------------+"
  SAY "                          ø CREATE FACILITY IS ø"
  SAY "                          ø STILL BUSY         ø"
  SAY "                          ø PLEASE WAIT ....   ø"
  SAY "                          +--------------------+"
 END
ELSE
DO
 "FREE FI(XXX)"
 "ISPEXEC BROWSE DATASET('MAINT.KRI.FAULTY.PRINTER.SUM')"
END
END
WHEN INPUT = "PRINTER" THEN
DO
 "ALLOC DA('MAINT.KRI.PRINTER') FI(XXX) OLD"
 IF RC <> 0 THEN
 DO
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
  SAY "                          +--------------------+ "
  SAY "                          ø CREATE FACILITY IS ø "
  SAY "                          ø STILL BUSY         ø "
  SAY "                          ø PLEASE WAIT ....   ø "
  SAY "                          +--------------------+ "
 END
ELSE
DO
 "FREE FI(XXX)"
 "ISPEXEC EDIT DATASET('MAINT.KRI.PRINTER')"
END
END
WHEN INPUT = "PRINT1" THEN
DO
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
  SAY "                          +--------------------+ "
  SAY "                          ø LISTING ROUTED TO  ø "
  SAY "                          ø "PRN"           ø "
  SAY "                          +--------------------+ "
 PR = '"PRINTOFF MAINT.KRI.FAULTY.PRINTER DEST('PRN')"'
 INTERPRET PR
END
WHEN INPUT = "PRINT2" THEN
DO
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
  SAY "                          +--------------------+ "
  SAY "                          ø LISTING ROUTED TO  ø "
  SAY "                          ø "PRN"           ø "
  SAY "                          +--------------------+ "
 PR = '"PRINTOFF MAINT.KRI.FAULTY.PRINTER.SUM DEST('PRN')"'
 INTERPRET PR
END
OTHERWISE
NOP
END
EXIT
./ ADD NAME=LMRKMAC  0101-01016-01016-1428-00018-00018-00000-RACFCLS
/* rexx */
ADDRESS ISREDIT "MACRO"
ADDRESS ISPEXEC "VGET (LSCIDSN LSCGCSI LSCTCSI LSCDSCSI)"
ADDRESS ISPEXEC "VGET (LSCGVSI LSCTVSI LSCDVSI LSCCAT)"
ADDRESS ISPEXEC "VGET (LSCGVSI LSCTVSI LSCDVSI LSCCAT)"
ADDRESS ISPEXEC "VGET (LSCMLQ LSCCMLQ LSCHLQ LSCCHLQ)"
ADDRESS ISPEXEC "VGET (LSCUNT LSCVOL LSCTVOL LSCGHOST)"
ADDRESS ISREDIT "COPY "LSCGHOST" BEFORE .ZL         "
ADDRESS ISREDIT "CHANGE 'LSCHLQ'  '"LSCHLQ"'  ALL"
ADDRESS ISREDIT "CHANGE 'LSCMLQ'  '"LSCMLQ"'  ALL"
ADDRESS ISREDIT "CHANGE 'LSCCMLQ' '"LSCCMLQ"' ALL"
ADDRESS ISREDIT "CHANGE 'LSCCHLQ' '"LSCCHLQ"' ALL"
ADDRESS ISREDIT "CHANGE 'LSCGCSI' '"LSCGCSI"' ALL"
ADDRESS ISREDIT "CHANGE 'LSCUNT'  '"LSCUNT"'  ALL"
ADDRESS ISREDIT "CHANGE 'LSCVOL'  '"LSCVOL"'  ALL"
ADDRESS ISREDIT "CHANGE 'LSCTVOL' '"LSCTVOL"' ALL"
ADDRESS ISREDIT "END"
RETURN
./ ADD NAME=LMRKMAC0 0101-01016-01016-1428-00024-00024-00000-RACFCLS
/* rexx */
ADDRESS ISREDIT
"MACRO"
ADDRESS ISPEXEC
"VGET (LSCGCSI LSCGVSI LSCTCSI LSCTVSI LSCDCSI )"
"VGET (LSCDVSI LSCCAT LSCVUNT LSCIDSN)"
ADDRESS ISREDIT
"COPY TEMPCSI BEFORE .ZL                         "
"CHANGE 'LSCGCSI' '"LSCGCSI"' ALL"
"CHANGE 'LSCGVSI' '"LSCGVSI"' ALL"
"CHANGE 'LSCTCSI' '"LSCTCSI"' ALL"
"CHANGE 'LSCTVSI' '"LSCTVSI"' ALL"
"CHANGE 'LSCDCSI' '"LSCDCSI"' ALL"
"CHANGE 'LSCDVSI' '"LSCDVSI"' ALL"
IF LSCCAT = '' THEN DO
    "EXCLUDE ALL"
    "FIND 'CATALOG(LSCCAT)' ALL"
    "DELETE ALL NX"
    END
ELSE
    "CHANGE 'LSCCAT' '"LSCCAT"' ALL"
"CHANGE 'LSCVUNT' '"LSCVUNT"' ALL"
"END"
RETURN
./ ADD NAME=LMRKMAC1 0101-01016-01016-1428-00033-00033-00000-RACFCLS
/* rexx */
ADDRESS ISREDIT
"MACRO"
ADDRESS ISPEXEC
"VGET (LSCIDSN LSCGCSI LSCTCSI LSCDSCSI)"
"VGET (LSCMLQ LSCCMLQ )"
"VGET (LSCGVSI LSCTVSI LSCDVSI LSCCAT LSCTVOL)"
"VGET (LSCUNT LSCPUNT LSCHLQ LSCCHLQ LSCVOL LSCVUNT)"
"VGET (NVG NVP TCE TCM TDB MVS TVT)"
ADDRESS ISREDIT
"COPY TEMPPDS BEFORE .ZL                          "
IF NVG = 1 THEN
    "COPY #PDSNVG AFTER .ZL                          "
IF NVP = 1 THEN
    "COPY #PDSNVP AFTER .ZL                          "
IF TCE = 1 THEN
    "COPY #PDSTCE AFTER .ZL                          "
IF TCM = 1 THEN
    "COPY #PDSTCM AFTER .ZL                          "
IF TDB = 1 THEN
    "COPY #PDSTDB AFTER .ZL                          "
IF MVS = 1 THEN
    "COPY #PDSTMV AFTER .ZL                          "
IF TVT = 1 THEN
    "COPY #PDSTVT AFTER .ZL                          "
"CHANGE 'LSCHLQ' '"LSCHLQ"' ALL"
"CHANGE 'LSCMLQ' '"LSCMLQ"' ALL"
"CHANGE 'LSCCMLQ' '"LSCCMLQ"' ALL"
"CHANGE 'LSCCHLQ' '"LSCCHLQ"' ALL"
"CHANGE 'LSCPUNT'                  '"LSCPUNT"' ALL"
"CHANGE 'LSCVOL' '"LSCVOL"' ALL"
"END"
return
./ ADD NAME=LMRKMAC2 0101-01016-01016-1428-00092-00092-00000-RACFCLS
/* rexx */
ADDRESS ISREDIT
"MACRO"
ADDRESS ISPEXEC
"VGET (LSCIDSN LSCPFX LSCGCSI LSCTCSI LSCDCSI)"
"VGET (LSCGVSI LSCTVSI LSCDVSI LSCCAT LSCTVOL)"
"VGET (LSCUNT LSCPUNT LSCHLQ LSCCHLQ LSCVOL LSCVUNT)"
"VGET (LSCMLQ LSCCMLQ)"
"VGET (NVG NVP TCE TCM TDB MVS TVT)"
ADDRESS ISREDIT
"COPY TEMPUCL BEFORE .ZL                          "
IF  TVT = 1 THEN DO
    "FIND PLACE FIRST "
    MYLAB = '.X'
    "LABEL .ZCSR = (MYLAB)"
    "COPY #UCLTVT AFTER .X                  "
    "FIND PLACE LAST "
    MYLAB = '.X'
    "LABEL .ZCSR = (MYLAB)"
    "COPY #UCLTVT AFTER .X                  "
END
IF MVS = 1 THEN DO
    "FIND PLACE FIRST "
    MYLAB = '.X'
    "LABEL .ZCSR = (MYLAB)"
    "COPY #UCLTMV AFTER .X                  "
    "FIND PLACE LAST "
    MYLAB = '.X'
    "LABEL .ZCSR = (MYLAB)"
    "COPY #UCLTMV AFTER .X                  "
END
IF  TDB = 1 THEN DO
    "FIND PLACE FIRST "
    MYLAB = '.X'
    "LABEL .ZCSR = (MYLAB)"
    "COPY #UCLTDB AFTER .X                  "
    "FIND PLACE LAST "
    MYLAB = '.X'
    "LABEL .ZCSR = (MYLAB)"
    "COPY #UCLTDB AFTER .X                  "
END
IF  TCM = 1 THEN DO
    "FIND PLACE FIRST "
    MYLAB = '.X'
    "LABEL .ZCSR = (MYLAB)"
    "COPY #UCLTCM AFTER .X                  "
    "FIND PLACE LAST "
    MYLAB = '.X'
    "LABEL .ZCSR = (MYLAB)"
    "COPY #UCLTCM AFTER .X                  "
END
IF TCE = 1 THEN DO
    "FIND PLACE FIRST "
    MYLAB = '.X'
    "LABEL .ZCSR = (MYLAB)"
    "COPY #UCLTCE AFTER .X                  "
    "FIND PLACE LAST "
    MYLAB = '.X'
    "LABEL .ZCSR = (MYLAB)"
    "COPY #UCLTCE AFTER .X                  "
END
IF  NVP = 1 THEN DO
    "FIND PLACE FIRST "
    MYLAB = '.X'
    "LABEL .ZCSR = (MYLAB)"
    "COPY #UCLNVP AFTER .X                  "
    "FIND PLACE LAST "
    MYLAB = '.X'
    "LABEL .ZCSR = (MYLAB)"
    "COPY #UCLNVP AFTER .X                  "
END
IF  NVG = 1 THEN DO
    "FIND PLACE FIRST "
    MYLAB = '.X'
    "LABEL .ZCSR = (MYLAB)"
    "COPY #UCLNVG AFTER .X                  "
    "FIND PLACE LAST "
    MYLAB = '.X'
    "LABEL .ZCSR = (MYLAB)"
    "COPY #UCLNVG AFTER .X                  "
END
"CHANGE 'LSCHLQ' '"LSCHLQ"' ALL"
"CHANGE 'LSCMLQ' '"LSCMLQ"' ALL"
"CHANGE 'LSCCMLQ' '"LSCCMLQ"' ALL"
"CHANGE 'LSCCHLQ' '"LSCCHLQ"' ALL"
"CHANGE 'LSCTCSI' '"LSCTCSI"' ALL"
"CHANGE 'LSCDCSI' '"LSCDCSI"' ALL"
"CHANGE 'LSCPFX'                  '"LSCPFX"' ALL"
"CHANGE 'LSCVOL' '"LSCVOL"' ALL"
"CHANGE 'LSCPUNT' '"LSCPUNT"' ALL"
"END"
return
./ ADD NAME=LMRKMAC3 0101-01016-01016-1428-00009-00009-00000-RACFCLS
/* rexx */
ADDRESS ISREDIT "MACRO"
ADDRESS ISPEXEC "VGET (LSCCHLQ LSCCMLQ LSCVOL)"
ADDRESS ISREDIT "COPY TEMPCBA BEFORE .ZL         "
ADDRESS ISREDIT "CHANGE 'LSCCMLQ' '"LSCCMLQ"' ALL"
ADDRESS ISREDIT "CHANGE 'LSCCHLQ' '"LSCCHLQ"' ALL"
ADDRESS ISREDIT "CHANGE 'LSCVOL' '"LSCVOL"' ALL"
ADDRESS ISREDIT "END"
return
./ ADD NAME=LMRKMAC4 0101-01016-01016-1428-00025-00025-00000-RACFCLS
/* rexx */
ADDRESS ISREDIT "MACRO"
ADDRESS ISPEXEC "VGET (LSCCHLQ LSCCMLQ LSCVOL)"
ADDRESS ISPEXEC "VGET (LSCHLQ LSCMLQ)"
ADDRESS ISPEXEC "VGET (MVS TVT TDB NVG TCM TCE)"
ADDRESS ISREDIT "COPY TEMPCBF BEFORE .ZL          "
IF  TDB = 1
   THEN DO
ADDRESS ISREDIT "COPY #CBFTDB AFTER .ZL         "
END
IF TCE = 1
   THEN DO
ADDRESS ISREDIT "COPY #CBFTCE AFTER .ZL         "
END
IF  TCM = 1
   THEN DO
ADDRESS ISREDIT "COPY #CBFTCM AFTER .ZL         "
END
ADDRESS ISREDIT "COPY #CBFEND AFTER .ZL         "
ADDRESS ISREDIT "CHANGE 'LSCCMLQ' '"LSCCMLQ"' ALL"
ADDRESS ISREDIT "CHANGE 'LSCCHLQ' '"LSCCHLQ"' ALL"
ADDRESS ISREDIT "CHANGE 'LSCMLQ' '"LSCMLQ"' ALL"
ADDRESS ISREDIT "CHANGE 'LSCHLQ' '"LSCHLQ"' ALL"
ADDRESS ISREDIT "END"
return
./ ADD NAME=LMRKMAC5 0101-01016-01016-1428-00029-00029-00000-RACFCLS
/* REXX */
ADDRESS ISREDIT "MACRO"
ADDRESS ISPEXEC "VGET (LSCIDSN LSCGCSI LSCTCSI LSCDSCSI)"
ADDRESS ISPEXEC "VGET (LSCMLQ LSCCMLQ )"
ADDRESS ISPEXEC "VGET (LSCGVSI LSCTVSI LSCDVSI LSCCAT LSCTVOL)"
ADDRESS ISPEXEC "VGET (LSCUNT LSCPUNT LSCHLQ LSCCHLQ LSCVOL LSCVUNT)"
ADDRESS ISPEXEC "VGET (NVG NVP TCE TCM TDB MVS TVT)"
ADDRESS ISREDIT "COPY REC BEFORE .ZL          "
IF (TCE = 1) | (TCM = 1) | (NVG = 1) THEN
    ADDRESS ISREDIT "COPY FLMDL120 AFTER .ZL          "
IF (MVS = 1) | (TCE = 1) | (TCM = 1) | (NVG = 1) THEN
    ADDRESS ISREDIT "COPY FLTCC100 AFTER .ZL          "
IF NVG = 1 THEN
    ADDRESS ISREDIT "COPY RECNVG AFTER .ZL          "
IF NVP = 1 THEN
    ADDRESS ISREDIT "COPY FLNVP100 AFTER .ZL          "
IF TCE = 1 THEN
    ADDRESS ISREDIT "COPY RECTCE AFTER .ZL          "
IF TCM = 1 THEN
    ADDRESS ISREDIT "COPY RECTCM AFTER .ZL          "
IF TDB = 1 THEN
    ADDRESS ISREDIT "COPY RECTDB AFTER .ZL          "
IF MVS = 1 THEN
    ADDRESS ISREDIT "COPY RECTMV AFTER .ZL          "
IF TVT = 1 THEN
    ADDRESS ISREDIT "COPY RECTVT AFTER .ZL          "
ADDRESS ISREDIT "COPY REC#END AFTER .ZL          "
ADDRESS ISREDIT "END "
RETURN
./ ADD NAME=LMRKMAC6 0101-01016-01016-1428-00029-00029-00000-RACFCLS
/* REXX */
ADDRESS ISREDIT "MACRO"
ADDRESS ISPEXEC "VGET (LSCIDSN LSCGCSI LSCTCSI LSCDSCSI)"
ADDRESS ISPEXEC "VGET (LSCMLQ LSCCMLQ )"
ADDRESS ISPEXEC "VGET (LSCGVSI LSCTVSI LSCDVSI LSCCAT LSCTVOL)"
ADDRESS ISPEXEC "VGET (LSCUNT LSCPUNT LSCHLQ LSCCHLQ LSCVOL LSCVUNT)"
ADDRESS ISPEXEC "VGET (NVG NVP TCE TCM TDB MVS TVT)"
ADDRESS ISREDIT "COPY APP BEFORE .ZL          "
IF (TCE = 1) | (TCM = 1) | (NVG = 1) THEN
    ADDRESS ISREDIT "COPY FLMDL120 AFTER .ZL          "
IF (MVS = 1) | (TCE = 1) | (TCM = 1) | (NVG = 1) THEN
    ADDRESS ISREDIT "COPY FLTCC100 AFTER .ZL          "
IF NVG = 1 THEN
    ADDRESS ISREDIT "COPY APPNVG AFTER .ZL          "
IF NVP = 1 THEN
    ADDRESS ISREDIT "COPY FLNVP100 AFTER .ZL          "
IF TCE = 1 THEN
    ADDRESS ISREDIT "COPY APPTCE AFTER .ZL          "
IF TCM = 1 THEN
    ADDRESS ISREDIT "COPY APPTCM AFTER .ZL          "
IF TDB = 1 THEN
    ADDRESS ISREDIT "COPY APPTDB AFTER .ZL          "
IF MVS = 1 THEN
    ADDRESS ISREDIT "COPY APPTMV AFTER .ZL          "
IF TVT = 1 THEN
    ADDRESS ISREDIT "COPY APPTVT AFTER .ZL          "
ADDRESS ISREDIT "COPY APP#END AFTER .ZL          "
ADDRESS ISREDIT "END "
RETURN
./ ADD NAME=LMRKMAC7 0101-01016-01016-1428-00029-00029-00000-RACFCLS
/* REXX */
ADDRESS ISREDIT "MACRO"
ADDRESS ISPEXEC "VGET (LSCIDSN LSCGCSI LSCTCSI LSCDSCSI)"
ADDRESS ISPEXEC "VGET (LSCMLQ LSCCMLQ )"
ADDRESS ISPEXEC "VGET (LSCGVSI LSCTVSI LSCDVSI LSCCAT LSCTVOL)"
ADDRESS ISPEXEC "VGET (LSCUNT LSCPUNT LSCHLQ LSCCHLQ LSCVOL LSCVUNT)"
ADDRESS ISPEXEC "VGET (NVG NVP TCE TCM TDB MVS TVT)"
ADDRESS ISREDIT "COPY ACC BEFORE .ZL          "
IF (TCE = 1) | (TCM = 1) | (NVG = 1) THEN
    ADDRESS ISREDIT "COPY FLMDL120 AFTER .ZL          "
IF (MVS = 1) | (TCE = 1) | (TCM = 1) | (NVG = 1) THEN
    ADDRESS ISREDIT "COPY FLTCC100 AFTER .ZL          "
IF NVG = 1 THEN
    ADDRESS ISREDIT "COPY ACCNVG AFTER .ZL          "
IF NVP = 1 THEN
    ADDRESS ISREDIT "COPY FLNVP100 AFTER .ZL          "
IF TCE = 1 THEN
    ADDRESS ISREDIT "COPY ACCTCE AFTER .ZL          "
IF TCM = 1 THEN
    ADDRESS ISREDIT "COPY ACCTCM AFTER .ZL          "
IF TDB = 1 THEN
    ADDRESS ISREDIT "COPY ACCTDB AFTER .ZL          "
IF MVS = 1 THEN
    ADDRESS ISREDIT "COPY ACCTMV AFTER .ZL          "
IF TVT = 1 THEN
    ADDRESS ISREDIT "COPY ACCTVT AFTER .ZL          "
ADDRESS ISREDIT "COPY ACC#END AFTER .ZL          "
ADDRESS ISREDIT "END "
RETURN
./ ADD NAME=LMRKMAC8 0101-01016-01016-1428-00021-00021-00000-RACFCLS
/* rexx */
ADDRESS ISREDIT "MACRO"
ADDRESS ISPEXEC "VGET (LSCCHLQ LSCCMLQ )"
ADDRESS ISPEXEC "VGET (LSCHLQ LSCMLQ )"
ADDRESS ISPEXEC "VGET (MVS TVT TDB NVG TCM TCE)"
ADDRESS ISREDIT "COPY TEMPCBU BEFORE .ZL          "
IF  TDB = 1
   THEN DO
ADDRESS ISREDIT "COPY #CBUTDB AFTER .ZL         "
END
IF TCE = 1
   THEN DO
ADDRESS ISREDIT "COPY #CBUTCE AFTER .ZL         "
END
ADDRESS ISREDIT "COPY #CBUEND AFTER .ZL         "
ADDRESS ISREDIT "CHANGE 'LSCCMLQ' '"LSCCMLQ"' ALL"
ADDRESS ISREDIT "CHANGE 'LSCCHLQ' '"LSCCHLQ"' ALL"
ADDRESS ISREDIT "CHANGE 'LSCMLQ' '"LSCMLQ"' ALL"
ADDRESS ISREDIT "CHANGE 'LSCHLQ' '"LSCHLQ"' ALL"
ADDRESS ISREDIT "END"
return
./ ADD NAME=LMRKPSWD 0101-01016-01016-1428-00928-00928-00000-RACFCLS
/*REXX */
/*
Function: this EXEC drives the Landmark product license assist
          ISPF dialog.  The purpose of the dialog is to facilitate
          the generation of the control statements for the Landmark
          licence management utility, $APUTIL.

Invocation: execname pdsname

   where

   execname: the name of this EXEC.  The EXEC may
             be placed in one of the libraries of the user's SYSPROC
             or SYSEXEC concatenation, or invoked directly using the
             fully qualified name of the resident library.

Usage notes: the panels (LMRLCPNL and LMRLHnnn members in the install
             library) must be placed in one of the libraries
             of the user's ISPPLIB; or this exec may be invoked
             by a 'wrapper' EXEC that LIBDEFs the install library.
*/
ADDRESS ISPEXEC
"CONTROL ERRORS RETURN"
"VGET (SPFDEBUG) PROFILE"
PARSE SOURCE . . execname .
IF (SPFDEBUG = execname) | (SPFDEBUG = 'Y') THEN DO
   SAY 'DEBUG initiated for' execname
   TRACE I
   END
/* */
LMRODSN = ""

call InitTables

cc = 0
statements = 0
lmrsite = ""

/* Mainline routine */
do while cc = 0
   "DISPLAY PANEL(LMRLIPNL)"
   cc = RC
   if cc = 0 then call ProcessMain
end
exit

/*
Subroutine BuildControlStatements

Attempts to create the control statements.

Input: Rexx array 'product.'
       variables set on the site info panel
Output: Rexx array 'cpu.', modified to refect user's changes
        String of selected CPU Serial numbers

*/
BuildControlStatements:
if statements = 0 then do
   ZEDSMSG = "Nothing to do"
   ZEDLMSG = "Use option 3 to license products/features"
   "SETMSG MSG(ISRZ001)"
   return
end

call DSNChecks
if cc > 0 then do
   cc = 0
   return
end

"LMINIT DATAID(ID) DATASET(" lmrodsn ") ENQ(SHRW)"
cc = RC
if cc > 0 then do
   ZEDSMSG = "LMINIT Error"
   ZEDLMSG = "LMINIT failed for" lmrodsn || ", RC =" cc
   "SETMSG MSG(ISRZ001)"
   return
end

"LMOPEN DATAID(" id ") OPTION(OUTPUT)"
cc = RC
if cc > 0 then do
   ZEDSMSG = "LMOPEN Error"
   ZEDLMSG = "LMOPEN failed for" lmrodsn || ", RC =" cc
   "SETMSG MSG(ISRZ001)"
   "LMFREE DATAID(" id ")"
   return
end

do i = 1 to product.0
   if product.i.!password <> "" then do
      pcode = product.i.!code
      pname = product.i.!name
      fcode = ""
      fname = ""
      password = product.i.!password
      expires = product.i.!expires
      grace = product.i.!grace
      license = product.i.!license
      data = product.i.!data
      call OutputLicense
      if cc > 0 then return
   end
   if product.i.!features.0 > 0 then ,
      do j = 1 to product.i.!features.0
         if product.i.!features.j.!password <> "" then do
            pcode = product.i.!code
            pname = product.i.!name
            fcode = product.i.!features.j.!code
            fname = product.i.!features.j.!name
            password = product.i.!features.j.!password
            expires = product.i.!features.j.!expires
            grace = product.i.!features.j.!grace
            license = product.i.!features.j.!license
            data = product.i.!features.j.!data
            call OutputLicense
            if cc > 0 then return
         end
      end
end

if lmromem <> "" then do
   "LMMREP DATAID(" id ") MEMBER(" lmromem ")"
   cc = RC
   "LMCLOSE DATAID(" id ")"
   if cc > 8 then do
      ZEDSMSG = "LMMREP Error"
      ZEDLMSG = "LMMREP failed for member" lmromem || ", RC =" cc
      "SETMSG MSG(ISRZ001)"
   end
   else ,
      "EDIT DATAID(" id ") MEMBER(" lmromem ")"
end
else do
   "LMCLOSE DATAID(" id ")"
   "EDIT DATAID(" id ")"
end

"LMFREE DATAID(" id ")"
cc = 0
return

/*
Subroutine DSNChecks

Ensure that the dataset name/member name suppplied constitute a
valid target for the control statements.

Input: LMRODSN, the output dataset
       LMROMEM, the supplied member name
       If LMRODSN is specififed wirh a member name, the member name
          will be stripped out and LMROMEM will be set to that value.

Output: variable cc
        if 0 - all is well
        else there is a problem and messages were issued

*/
DSNChecks: procedure expose lmrodsn lmromem cc

if LMRODSN = "" then do
   ZEDSMSG = "Missing DSN"
   ZEDLMSG = "Supply the name of an output dataset"
   "SETMSG MSG(ISRZ001)"
   cc = 8
   return
end

thedsn = LMRODSN
themem = ""
call DSNParse
If cc <> 0 then return
LMRODSN = thedsn
if themem <> "" then LMROMEM = themem

status = SYSDSN(lmrodsn)
if status <> "OK" then do
   ZEDSMSG = "Invalid DSN"
   ZEDLMSG = lmrodsn "-" status
   "SETMSG MSG(ISRZ001)"
   cc = 8
   return
end

x = LISTDSI(LMRODSN)

if SYSDSORG <> "PO" then do
   if lmromem <> "" then do
      ZEDSMSG = "Member invalid"
      ZEDLMSG = LMRODSN "is not a PDS"
      "SETMSG MSG(ISRZ001)"
      cc = 8
      return
   end
   if SYSDSORG <> "PS" then do
      ZEDSMSG = "Invalid DSORG"
      ZEDLMSG = lmrodsn "is DSORG" sysdsorg ||".  PS or PO only."
      "SETMSG MSG(ISRZ001)"
      cc = 8
      return
   end
end
else do
   if lmromem = "" then do
      ZEDSMSG = "Missing member"
      ZEDLMSG = "Supply a member name for PDS" lmrodsn
      "SETMSG MSG(ISRZ001)"
      cc = 8
      return
   end
end

if substr(SYSRECFM,1,1) ^= "F" then do
   ZEDSMSG = "Invalid RECFM"
   ZEDLMSG = "The batch utility requires fixed record length input"
   "SETMSG MSG(ISRZ001)"
   cc = 8
   return
end

if SYSLRECL ^= 80 then do
   ZEDSMSG = "Invalid LRECL"
   ZEDLMSG = "The batch utility requires card image (LRECL=80) input"
   "SETMSG MSG(ISRZ001)"
   cc = 8
   return
end

return

/*
Subroutine DSNParse

Break a dataset name entry down into DSN and member components.

Input: thedsn - the dataset name

Output: variable cc
        if 0 - all is well
        else there is a problem and messages were issued
        thedsn - just the dataset name
        themem - if a member name was included, this is it.  Else NULL.

*/
DSNParse: procedure expose thedsn themem cc

cc = 0
themem = ""
mname = pos("(", thedsn)
if mname > 0 then do
   mend = pos(")", thedsn)
   if mend = 0 then do
      ZEDSMSG = "Syntax error"
      ZEDLMSG = "No closing parentheses for member name"
      "SETMSG MSG(ISRZ001)"
      cc = 8
      return
   end
   mlen = mend - mname - 1
   dlen = mname - 1
   if mlen > 0 then ,
      themem = strip(substr(thedsn,mname+1,mlen))
   thedsn = substr(thedsn,1,dlen)
   if substr(thedsn,1,1) = "'" then ,
      thedsn = strip(thedsn) || "'"
end
return

/*
Subroutine GetCPUList

Allows creation/modification of the CPU. array and returns the
string of selected CPUs.

Input: Rexx array 'cpu.'
Output: Rexx array 'cpu.', modified to refect user's changes
        String of selected CPU Serial numbers

*/
GetCPUList: procedure expose cpu.

"CONTROL DISPLAY SAVE"
table = "LMCTABLE"
"TBCREATE" table "NAMES(LMRCSEL LMRCPU)" NOWRITE REPLACE
cc = RC
if cc > 4 then do
   ZEDSMSG = "TBCreate Failed"
   ZEDLMSG = "TBCreate failed for CPU table, RC =" cc
   "CONTROL DISPLAY RESTORE"
   "SETMSG MSG(ISRZ001)"
   return ""
end

do i = 1 to cpu.0
   lmrcpu = cpu.i
   lmrcsel = ""
   "TBADD" table
end
top = 1

do while cc < 8
   "TBTOP" table
   "TBSKIP" table "NUMBER(" top ")"
   "TBDISPL" table "PANEL(LMRLCPNL)"
   cc = RC
   if cc < 8 then do
      selects = ZTDSELS
      top = ZTDTOP
      do while selects > 0
         selects = selects - 1
         select
            when lmrcsel = "D" then "TBDELETE" table
            when lmrcsel = "S" then "TBPUT" table
            otherwise do
               lmrcsel = ""
               "TBPUT" table
            end
         end
         if selects > 0 then "TBDISPL" table
      end
      if lmicpu > "" then do
         "TBBOTTOM" table
         lmrcpu = right(lmicpu,4,"0")
         lmrcsel = ""
         "TBADD" table
         lmicpu = ""
      end
      if lmicdsn > "" then do
         thedsn = lmicdsn
         themem = ""
         call DSNParse
         if cc = 0 then do
            lmicdsn = thedsn
            lmicmem = themem
            call LoadCPUList
            "TBTOP" table
            "TBSKIP" table
            cc = RC
            do while cc = 0
               "TBDELETE" table
               "TBTOP" table
               "TBSKIP" table
               cc = RC
            end
            do i = 1 to CPU.0
               lmrcpu = cpu.i
               lmrcsel = ""
               "TBADD" table
            end
            lmicdsn = ""
            top = 1
            cc = 0
         end
      end
   end
end

data = ""
"TBTOP" table
"TBSKIP" table
cc = RC
i = 0
do while cc = 0
   i = i + 1
   cpu.i = lmrcpu
   if lmrcsel = "S" then data = data lmrcpu
   "TBSKIP" table
   cc = RC
end
cpu.0 = i
"TBEND" table
"CONTROL DISPLAY RESTORE"
return data

/*
Subroutine GetLicenseInfo

Main License routine panel and table management

Input: Rexx arrays 'product.', 'cpu.', and the variable 'statements'
Output: Rexx array 'product.', modified to refect user's changes
       'statements' is set to 1 if anything was licensed.

*/
GetLicenseInfo: procedure expose product. cpu. statements

table = "LMPTABLE"
"TBCREATE" table "NAMES(LMTSEL LMTPCODE LMTFCODE LMTNAME LMTPSWD",
   "LMTEXPD LMTGRACE LMTLTYPE LMTLDATA LMTPNDX LMTFNDX)",
   "NOWRITE REPLACE"
cc = RC
if cc > 4 then do
   ZEDSMSG = "TBCreate Failed"
   ZEDLMSG = "TBCreate failed for Product table, RC =" cc
   "SETMSG MSG(ISRZ001)"
   return
end
 /*..................................................................*/
 /* copy the product array to the ISPF table.                        */
 /*..................................................................*/
do i = 1 to product.0
   lmtsel = ""
   lmtpcode = product.i.!code
   lmtfcode = ""
   lmtname = product.i.!name
   lmtpswd = product.i.!password
   lmtexpd = product.i.!expires
   lmtgrace = product.i.!grace
   lmtltype = product.i.!license
   lmtldata = product.i.!data
   lmtpndx = i
   lmtfndx = 0
   "TBADD" table
   if product.i.!features.0 > 0 then ,
      do j = 1 to product.i.!features.0
         lmtsel = ""
         lmtpcode = product.i.!code
         lmtfcode = product.i.!features.j.!code
         lmtname = product.i.!features.j.!name
         lmtpswd = product.i.!features.j.!password
         lmtexpd = product.i.!features.j.!expires
         lmtgrace = product.i.!features.j.!grace
         lmtltype = product.i.!features.j.!license
         lmtldata = product.i.!features.j.!data
         lmtpndx = i
         lmtfndx = j
         "TBADD" table
      end
end
top = 1
 /*..................................................................*/
 /* Display loop.  Updates only the ISPF table.                      */
 /*..................................................................*/
cc = 4
do while cc < 8
   "TBTOP" table
   "TBSKIP" table "NUMBER(" top ")"
   "TBDISPL" table "PANEL(LMRLNPNL)"
   cc = RC
   if cc < 8 then do
      selects = ZTDSELS
      top = ZTDTOP
      do while selects > 0
         selects = selects - 1
         data = ""
         if lmtsel = "D" then do
            lmtpswd = ""
            lmtexpd = ""
            lmtgrace = ""
            lmtltype = ""
            lmtldata = ""
         end
         else if lmtsel = "S" then ,
         select
            when lmrtype = "C" then ,
               do
                  if cpu.0 = 0 then lmrdata = ""
                  if lmrdata <> "ALL" then do
                     data = GetCpuList()
                     if data > " " then call UpdateProductTable
                     else do
                        ZEDSMSG = "No CPUs"
                        ZEDLMSG = "No CPUs were SELECTed from the " ||,
                                  "CPU list"
                        "SETMSG MSG(ISRZ001)"
                     end
                  end
                  else do
                     do i = 1 to cpu.0
                        data = data cpu.i
                     end
                     if data > " " then call UpdateProductTable
                  end
               end
            when lmrtype = "M" then ,
               do
               data = right(lmrdata,4,"0")
               call UpdateProductTable
               end
            when lmrtype = "S" then ,
               do
               data = right(lmrdata,4,"0")
               call UpdateProductTable
               end
            when lmrtype = "U" then ,
               do
               data = ""
               call UpdateProductTable
               end
            otherwise nop
         end
      lmtsel = ""
      "TBPUT" table
      if selects > 0 then "TBDISPL" table
      end
   end
end
 /*..................................................................*/
 /* User hit end/return.                                             */
 /*                                                                  */
 /* Copy the ISPF table back to the product array.                   */
 /*..................................................................*/
"TBTOP" table
"TBSKIP" table
statements = 0
cc = RC
do while cc = 0
   if lmtpswd <> "" then do
      if lmtfndx = 0 then do
         product.lmtpndx.!password = lmtpswd
         product.lmtpndx.!expires = lmtexpd
         product.lmtpndx.!grace = lmtgrace
         product.lmtpndx.!license = lmtltype
         product.lmtpndx.!data = lmtldata
         statements = 1
      end
      else do
         product.lmtpndx.!features.lmtfndx.!password = lmtpswd
         product.lmtpndx.!features.lmtfndx.!expires = lmtexpd
         product.lmtpndx.!features.lmtfndx.!grace = lmtgrace
         product.lmtpndx.!features.lmtfndx.!license = lmtltype
         product.lmtpndx.!features.lmtfndx.!data = lmtldata
         statements = 1
      end
   end
   "TBSKIP" table
   cc = RC
end
"TBEND" table
return


/*
Subroutine InitTables

Initialize the available Product/Feature table "product."

Input: none
Output: Rexx array 'product.'

*/
InitTables:

product.0 = 7
product.1.!name = "The Monitor For CICS/ESA"
product.1.!code = "TMCE"
product.1.!password = ""
product.1.!expires = ""
product.1.!grace = ""
product.1.!license = ""
product.1.!data = ""
product.1.!features.0 = 0

product.2.!name = "The Monitor For CICS/MVS"
product.2.!code = "TMCM"
product.2.!password = ""
product.2.!expires = ""
product.2.!grace = ""
product.2.!license = ""
product.2.!features.0 = 0
product.2.!data = ""

product.3.!name = "The Monitor For DB2"
product.3.!code = "TMDB"
product.3.!password = ""
product.3.!expires = ""
product.3.!grace = ""
product.3.!license = ""
product.3.!data = ""
product.3.!features.0 = 1

product.3.!features.1.!name = "The Monitor for DB2 SQLC"
product.3.!features.1.!code = "SQLC"
product.3.!features.1.!password = ""
product.3.!features.1.!expires = ""
product.3.!features.1.!grace = ""
product.3.!features.1.!license = ""
product.3.!features.1.!data = ""

product.4.!name = "The Monitor For MVS"
product.4.!code = "TMVS"
product.4.!password = ""
product.4.!expires = ""
product.4.!grace = ""
product.4.!license = ""
product.4.!data = ""
product.4.!features.0 = 0

product.5.!name = "The Monitor For VTAM"
product.5.!code = "TMVT"
product.5.!password = ""
product.5.!expires = ""
product.5.!grace = ""
product.5.!license = ""
product.5.!data = ""
product.5.!features.0 = 0

product.6.!name = "NaviGraph Host"
product.6.!code = "TCPM"
product.6.!data = ""
product.6.!password = ""
product.6.!expires = ""
product.6.!grace = ""
product.6.!license = ""
product.6.!features.0 = 4

product.6.!features.1.!name = "NaviGraph CICS Data"
product.6.!features.1.!code = "TMON"
product.6.!features.1.!password = ""
product.6.!features.1.!expires = ""
product.6.!features.1.!grace = ""
product.6.!features.1.!license = ""
product.6.!features.1.!data = ""

product.6.!features.2.!name = "NaviGraph DB2 Data"
product.6.!features.2.!code = "TMDB"
product.6.!features.2.!password = ""
product.6.!features.2.!expires = ""
product.6.!features.2.!grace = ""
product.6.!features.2.!license = ""
product.6.!features.2.!data = ""

product.6.!features.3.!name = "NaviGraph MVS Data"
product.6.!features.3.!code = "TMVS"
product.6.!features.3.!data = ""
product.6.!features.3.!password = ""
product.6.!features.3.!expires = ""
product.6.!features.3.!grace = ""
product.6.!features.3.!license = ""

product.6.!features.4.!name = "NaviGraph VTAM Data"
product.6.!features.4.!code = "TMVT"
product.6.!features.4.!data = ""
product.6.!features.4.!password = ""
product.6.!features.4.!expires = ""
product.6.!features.4.!grace = ""
product.6.!features.4.!license = ""

product.7.!name = "NaviPlex"
product.7.!code = "NVPL"
product.7.!password = ""
product.7.!expires = ""
product.7.!grace = ""
product.7.!license = ""
product.7.!data = ""
product.7.!features.0 = 1

product.7.!features.1.!name = "NaviPlex Users"
product.7.!features.1.!code = "USER"
product.7.!features.1.!data = ""
product.7.!features.1.!password = ""
product.7.!features.1.!expires = ""
product.7.!features.1.!grace = ""
product.7.!features.1.!license = ""

cpu.0 = 0
return

/*
Subroutine LoadCPUList

Read the specified dataset and use the information contained therein
to populate the 'cpu.' array.  The input dataset must be formatted
as follows:

   No line numbers

   Lines containing 1 or more 4 digit cpu serial numbers.  The
      serial numbers must begin in column 1 and be delimited
      by semicolons (';').  The last entry on a line must be
      followed by a semicolon.  e.g. -

         2FA0;
         301E;2048;

   Comments, if present, are lines with an asterisk ('*') in column 1.

Input: lmicdsn - the name of the dataset to be read
       lmicmem - the member name (or null if lmicdsn is PS)
       Rexx array 'CPU.'
       variable 'cc'

Output: if all is well, CPU. is populated with the information
        and 'cc' is retuned as 0.
        else 'cc' returns non zero and the CPU. array is in an
        indeterminate state.

        The file is always closed/freed

*/
LoadCPUList: procedure expose lmicdsn lmicmem cc cpu.

"LMINIT DATAID(ID) DATASET(" lmicdsn ") ENQ(SHR)"
cc = RC
if cc > 0 then do
   ZEDSMSG = "LMINIT Error"
   ZEDLMSG = "LMINIT failed for" lmicdsn || ", RC =" cc
   "SETMSG MSG(ISRZ001)"
   return
end

"LMOPEN DATAID(" id ") OPTION(INPUT) LRECL(LRECL)"
cc = RC
if cc > 0 then do
   ZEDSMSG = "LMOPEN Error"
   ZEDLMSG = "LMOPEN failed for" lmicdsn || ", RC =" cc
   "SETMSG MSG(ISRZ001)"
   "LMFREE DATAID(" id ")"
   return
end

if lmicmem <> "" then do
   "LMMFIND DATAID(" id ") MEMBER(" lmicmem ")"
   cc = RC
   if cc > 0 then do
      ZEDSMSG = "LMMFIND Error"
      ZEDLMSG = "LMMFIND failed for" lmicmem || ", RC =" cc
      "SETMSG MSG(ISRZ001)"
      "LMCLOSE DATAID(" id ")"
      "LMFREE DATAID(" id ")"
      return
   end
end

i = cpu.0
RECORD = ""
do while cc = 0
   "LMGET DATAID("id") MODE(INVAR) DATALOC(RECORD) DATALEN(JUNK) ",
          "MAXLEN("LRECL")"
   cc = RC
   if cc = 0 then do
      record = strip(record)
      if substr(record,1,1) ^= "*" then ,
         do while record <> ""
            parse var record cpun ";" record
            i = i + 1
            cpu.i = right(cpun,4,"0")
         end
   end
end

cpu.0 = i
if cc > 8 then do
   ZEDSMSG = "LMGET Error"
   ZEDLMSG = "LMGET failed for" lmicdsn || ", RC =" cc
   "SETMSG MSG(ISRZ001)"
end
else cc = 0
"LMCLOSE DATAID(" id ")"
"LMFREE DATAID(" id ")"
return

/*
Subroutine OutputLicense

Output the control statements to license a product/feature

Input: variables set by caller
          pcode    - product code
          pname    - product name
          fcode    - feature code ("") for a product
          fname    - feature name
          password - password for this license
          expires  - expiration date for this license
          license  - license type code
          data     - license data
       variable 'cc'
       variable 'id'

Output: control statements to the output file
        'cc' returns as 0 if all is well
        else 'cc' returns non zero and the file is closed/freed

*/
OutputLicense:
STMT = substr("LICENSE( -",1,80)
call PutOne
if cc > 0 then return

STMT = substr("        PRODUCT( -",1,80)
call PutOne
if cc > 0 then return

STMT = substr("                ID(" pcode ") -",1,80)
call PutOne
if cc > 0 then return

if fcode = "" then do
   STMT = substr("                NAME('"|| pname ||"') -",1,80)
   call PutOne
   if cc > 0 then return
end

STMT = substr("               ) -",1,80)
call PutOne
if cc > 0 then return

if fcode <> "" then do
   STMT = substr("        FEATURE( -",1,80)
   call PutOne
   if cc > 0 then return

   STMT = substr("                ID(" fcode ") -",1,80)
   call PutOne
   if cc > 0 then return

   STMT = substr("                NAME('"|| fname ||"') -",1,80)
   call PutOne
   if cc > 0 then return

   STMT = substr("               ) -",1,80)
   call PutOne
   if cc > 0 then return
end

STMT = substr("        PASSWORD(" password ") -",1,80)
call PutOne
if cc > 0 then return

STMT = substr("        EXPIRES(" expires ") -",1,80)
call PutOne
if cc > 0 then return

STMT = substr("        GRACEDAYS(" grace ") -",1,80)
call PutOne
if cc > 0 then return

select
   when license = "C" then license = "CPU"
   when license = "M" then license = "MSU"
   when license = "S" then license = "SEATS"
   when license = "U" then license = "UNRESTRICTED"
   otherwise nop
end

if license <> "UNRESTRICTED" then do
   STMT = substr("        TYPE(" license "( -",1,80)
   call PutOne
   if cc > 0 then return

   text = strip(data)
   do while text <> ""
      parse var text item " " text
      STMT = substr("             " item " -",1,80)
      call PutOne
      if cc > 0 then return
   end

   STMT = substr("                       ) -",1,80)
   call PutOne
   if cc > 0 then return

   STMT = substr("            ) -",1,80)
   call PutOne
   if cc > 0 then return
end
else do
   STMT = substr("        TYPE(" license ") -",1,80)
   call PutOne
   if cc > 0 then return
end

STMT = substr("       )",1,80)
call PutOne
return

/*
Subroutine ProcessMain

Take action based on the user's input to the main panel

Input: LMROPT, variable acquired from the panel
Output: none (to caller)

*/
ProcessMain:
select
   when lmropt = 1 then call GetCPUList
   when lmropt = 2 then call GetLicenseInfo
   when lmropt = 3 then call BuildControlStatements
   otherwise do
      if lmropt <> "" then do
         ZEDSMSG = "Invalid Option"
         ZEDLMSG = "'" || lmropt ||"' is not a valid option"
         "SETMSG MSG(ISRZ001)"
      end
   end
end
return
/*
Subroutine PutOne

Output a control statement

Input: 'STMT' - variable containing the control statement
       'ID' - the LM services dataid returned by LMINIT
Output: if record is written, variable cc is 0
        if not, variable cc is > 0 and the file is closed and freed

*/
PutOne:
"LMPUT DATAID(" id ") MODE(INVAR) DATALOC(STMT) DATALEN(80)"
cc = RC
if cc > 0 then do
   ZEDSMSG = "LMPUT Error"
   ZEDLMSG = "LMPUT failed for" lmrodsn || ", RC =" cc
   "SETMSG MSG(ISRZ001)"
   "LMFREE DATAID(" id ")"
   return
end
return
/*
Subroutine UpdateProductTable

Update an entry in the ISPF product table

Input: variables from routine GetLicenseInfo
Output: updated table variables

*/
UpdateProductTable:
lmtpswd = lmrpswd
lmtexpd = lmrexpd
lmtgrace = lmrgrace
lmtltype = lmrtype
lmtldata = strip(data)
return
./ ADD NAME=LMRKSMP  0101-01016-01016-1428-00163-00163-00000-RACFCLS
 /* REXX */
 /*------------------------------------------------------------------*/
 /* DISPLAY PANEL "LMRKPNL" FOR USER TO FILL IN VALUES.  PANEL       */
 /* WILL STORE SESSION VARIABLES USED BY EDIT MACROS.                */
 /*------------------------------------------------------------------*/
 /*                                                                  */
 /*  THIS EXEC SUPPORTS MULTIPLE RERUNS BY FIRST COPYING ONE OR      */
 /*  MORE "GHOST" MEMBERS, AND THEN EDITING THE ORIGINAL VARIABLE    */
 /*  STRINGS WITH THE CURRENT SESSION VARIABLE VALUES. THE FOLLOWING */
 /*  TABLE IDENTIFIES EACH MEMBER CHANGED, ALONG WITH THE GHOST      */
 /*  MEMBER(S) AND EDIT MACRO USED TO EFFECT THE CHANGE. IN THE      */
 /*  FOLLOWING TABLE, "***" REPRESENTS A PRODUCT-ID, AND "..."       */
 /*  INDICATES MULTIPLE OCCURRENCES.                                 */
 /*                                                                  */
 /* MEMBER CHANGED    GHOST MEMBER(S)           EDIT MACRO           */
 /* --------------    ------------              ----------           */
 /* CSIALLOC          TEMPCSI                   LMRKMAC0             */
 /* SMPLMRK           TEMPSMP                   LMRKMAC              */
 /* PDSALLOC          TEMPPDS,#PDS***...        LMRKMAC1             */
 /* UCLIN             TEMPUCL,#UCL***...        LMRKMAC2             */
 /* RECEIVE           REC,REC***...             LMRKMAC5             */
 /* APPLY             APP,APP***...             LMRKMAC6             */
 /* ACCEPT            ACC,ACC***...             LMRKMAC7             */
 /* CBFALLOC          TEMPCBA                   LMRKMAC3             */
 /* CBFPOP            TEMPCBF,#CBF***...        LMRKMAC4             */
 /* CBFUPD            TEMPCBU,#CBU***...        LMRKMAC8             */
 /* ASADDLIC          TEMPASAD                  LMRKMAC              */
 /* ASALLOC           TEMPASAL                  LMRKMAC              */
 /* ASDELLIC          TEMPASDL                  LMRKMAC              */
 /* ASINIT            TEMPASIN                  LMRKMAC              */
 /*------------------------------------------------------------------*/
ARG LIBNAME
IF ARG() > 0 THEN DO
    ADDRESS TSO "ALTLIB ACTIVATE APPLICATION(EXEC) DSNAME('"LIBNAME"')"
    IF RC > 0 THEN DO
        SAY "ALTLIB ACTIVATE FAILED, RC="RC
        SAY ZERRSM
        SAY ZERRLM
        SIGNAL ALLDONE
        END
    ADDRESS ISPEXEC "LIBDEF ISPPLIB DATASET ID('"LIBNAME"')"
    IF RC > 0 THEN DO
        SAY "LIBDEF SET FAILED, RC="RC
        SAY ZERRSM
        SAY ZERRLM
        SIGNAL ALLDONE
        END
    END
 /*------------------------------------------------------------------*/
ADDRESS ISPEXEC "DISPLAY PANEL(LMRKPNL)"
IF RC > 0 THEN SIGNAL ALLDONE
MSGSTAT = MSG('OFF')
 /*------------------------------------------------------------------*/
"DELETE '"LSCIDSN"(CSIALLOC)' "
"ALLOC DA('"LSCIDSN"(CSIALLOC)') F(MYJCL) SHR"
ADDRESS ISPEXEC "EDIT DATASET('"LSCIDSN"(CSIALLOC)')
                 MACRO(LMRKMAC0)"
"FREE F(MYJCL)"
 /*------------------------------------------------------------------*/
"DELETE '"LSCIDSN"(SMPLMRK)' "
"ALLOC DA('"LSCIDSN"(SMPLMRK)') F(MYJCL) SHR"
LSCGHOST = 'TEMPSMP'
ADDRESS ISPEXEC "VPUT (LSCGHOST)"
ADDRESS ISPEXEC "EDIT DATASET('"LSCIDSN"(SMPLMRK)')
                 MACRO(LMRKMAC)"
"FREE F(MYJCL)"
 /*------------------------------------------------------------------*/
"DELETE '"LSCIDSN"(PDSALLOC)' "
"ALLOC DA('"LSCIDSN"(PDSALLOC)') F(MYJCL) SHR"
ADDRESS ISPEXEC "EDIT DATASET('"LSCIDSN"(PDSALLOC)')
                 MACRO(LMRKMAC1)"
"FREE F(MYJCL)"
 /*------------------------------------------------------------------*/
"DELETE '"LSCIDSN"(UCLIN)' "
"ALLOC DA('"LSCIDSN"(UCLIN)') F(MYJCL) SHR"
ADDRESS ISPEXEC "EDIT DATASET('"LSCIDSN"(UCLIN)')
                 MACRO(LMRKMAC2)"
"FREE F(MYJCL)"
 /*------------------------------------------------------------------*/
"DELETE '"LSCIDSN"(RECEIVE)' "
"ALLOC DA('"LSCIDSN"(RECEIVE)') F(MYJCL) SHR"
ADDRESS ISPEXEC "EDIT DATASET('"LSCIDSN"(RECEIVE)')
                 MACRO(LMRKMAC5)"
"FREE F(MYJCL)"
 /*------------------------------------------------------------------*/
"DELETE '"LSCIDSN"(APPLY)' "
"ALLOC DA('"LSCIDSN"(APPLY)') F(MYJCL) SHR"
ADDRESS ISPEXEC "EDIT DATASET('"LSCIDSN"(APPLY)')
                 MACRO(LMRKMAC6)"
"FREE F(MYJCL)"
 /*------------------------------------------------------------------*/
"DELETE '"LSCIDSN"(ACCEPT)' "
"ALLOC DA('"LSCIDSN"(ACCEPT)') F(MYJCL) SHR"
ADDRESS ISPEXEC "EDIT DATASET('"LSCIDSN"(ACCEPT)')
                 MACRO(LMRKMAC7)"
"FREE F(MYJCL)"
 /*------------------------------------------------------------------*/
"DELETE '"LSCIDSN"(CBFALLOC)' "
"ALLOC DA('"LSCIDSN"(CBFALLOC)') F(MYJCL) SHR"
ADDRESS ISPEXEC "EDIT DATASET('"LSCIDSN"(CBFALLOC)')
                 MACRO(LMRKMAC3)"
"FREE F(MYJCL)"
 /*------------------------------------------------------------------*/
"DELETE '"LSCIDSN"(CBFPOP)' "
"ALLOC DA('"LSCIDSN"(CBFPOP)') F(MYJCL) SHR"
ADDRESS ISPEXEC "EDIT DATASET('"LSCIDSN"(CBFPOP)')
                 MACRO(LMRKMAC4)"
"FREE F(MYJCL)"
 /*------------------------------------------------------------------*/
"DELETE '"LSCIDSN"(CBFUPD)' "
"ALLOC DA('"LSCIDSN"(CBFUPD)') F(MYJCL) SHR"
ADDRESS ISPEXEC "EDIT DATASET('"LSCIDSN"(CBFUPD)')
                 MACRO(LMRKMAC8)"
"FREE F(MYJCL)"
 /*------------------------------------------------------------------*/
"DELETE '"LSCIDSN"(ASADDLIC)'"
"ALLOC DA('"LSCIDSN"(ASADDLIC)') F(MYJCL) SHR"
LSCGHOST = 'TEMPASAD'
ADDRESS ISPEXEC "VPUT (LSCGHOST)"
ADDRESS ISPEXEC "EDIT DATASET('"LSCIDSN"(ASADDLIC)')
                 MACRO(LMRKMAC)"
"FREE F(MYJCL)"
 /*------------------------------------------------------------------*/
"DELETE '"LSCIDSN"(ASALLOC)'"
"ALLOC DA('"LSCIDSN"(ASALLOC)') F(MYJCL) SHR"
LSCGHOST = 'TEMPASAL'
ADDRESS ISPEXEC "VPUT (LSCGHOST)"
ADDRESS ISPEXEC "EDIT DATASET('"LSCIDSN"(ASALLOC)')
                 MACRO(LMRKMAC)"
"FREE F(MYJCL)"
 /*------------------------------------------------------------------*/
"DELETE '"LSCIDSN"(ASDELLIC)'"
"ALLOC DA('"LSCIDSN"(ASDELLIC)') F(MYJCL) SHR"
LSCGHOST = 'TEMPASDL'
ADDRESS ISPEXEC "VPUT (LSCGHOST)"
ADDRESS ISPEXEC "EDIT DATASET('"LSCIDSN"(ASDELLIC)')
                 MACRO(LMRKMAC)"
"FREE F(MYJCL)"
 /*------------------------------------------------------------------*/
"DELETE '"LSCIDSN"(ASINIT)'"
"ALLOC DA('"LSCIDSN"(ASINIT)') F(MYJCL) SHR"
LSCGHOST = 'TEMPASIN'
ADDRESS ISPEXEC "VPUT (LSCGHOST)"
ADDRESS ISPEXEC "EDIT DATASET('"LSCIDSN"(ASINIT)')
                 MACRO(LMRKMAC)"
"FREE F(MYJCL)"
 /*------------------------------------------------------------------*/
ALLDONE:
IF ARG() > 0 THEN DO
    ADDRESS TSO "ALTLIB RESET"
    IF RC > 0 THEN DO
        SAY "ALTLIB RESET FAILED, RC="RC
        SAY ZERRSM
        SAY ZERRLM
        END
    ADDRESS ISPEXEC "LIBDEF ISPPLIB DATASET ID('"LIBNAME"')"
    IF RC > 0 THEN DO
        SAY "LIBDEF CANCEL FAILED, RC="RC
        SAY ZERRSM
        SAY ZERRLM
        END
    END
 EXIT
./ ADD NAME=LSTALL   0101-01016-01016-1428-00160-00160-00000-RACFCLS
/* REXX */
/* **************************************************************** */
/* ** LIST RACF USERID BY GIVING FORCENUMBER                      ** */
/* **************************************************************** */
"PROFILE NOPREFIX"

"ALLOC DA('MAINT.RACF.LIST') FI(INPUT) SHR"
"EXECIO * DISKR INPUT (FINIS STEM IN."
"FREE FI(INPUT)"

JJJ = 000
DD = 00
YY = 00
MM = 00
TEL = 00

DO WHILE TEL < IN.0
 TEL = TEL + 1
  USR2 = SUBSTR(IN.TEL,6,2)
  USER = SUBSTR(IN.TEL,6,8)
  NAME = SUBSTR(IN.TEL,19,20)
  TEL = TEL + 1
  ACT = SUBSTR(IN.TEL,13,7)
  TEL = TEL + 1
  LAST_ACCESS_DATE = SUBSTR(IN.TEL,14,6)
  YY = SUBSTR(IN.TEL,14,2)
  JJJ = SUBSTR(IN.TEL,17,3)
  LAST_ACCESS_TIME = SUBSTR(IN.TEL,21,8)
  IF DATATYPE(JJJ,'N') = 1 THEN
   CALL JULIAN
  IF USR2 = "PE" THEN
  DO
   SAY USER "-" NAME
   IF ACT <> "REVOKED" THEN
    SAY "STATUS = ACTIVE"
   ELSE
    SAY "STATUS = REVOKED"

  IF DATATYPE(JJJ,'N') = 1 THEN
   DO
    SAY "LAST ACCESS DATE = " YY || "/" || MM || "/" || DD
    SAY "LAST ACCESS TIME = " LAST_ACCESS_TIME
   SAY      " "
   END
   ELSE
   DO
     SAY "NEVER USED"
     SAY " "
   END
 END
END
EXIT

JULIAN:
  IF YY // 4 <> 0;
  THEN;
   SELECT;
   WHEN (JJJ <= 31)  THEN DO
                             MM = "01"
                             DD=JJJ
                          END
   WHEN (JJJ <= 59)  THEN DO
                             MM = "02"
                             DD=JJJ-31
                          END
   WHEN (JJJ <= 90)  THEN DO
                             MM = "03"
                             DD=JJJ-59
                          END
   WHEN (JJJ <= 120) THEN DO
                             MM = "04"
                             DD=JJJ-90
                          END
   WHEN (JJJ <= 151) THEN DO
                             MM = "05"
                             DD=JJJ-120
                          END
   WHEN (JJJ <= 181) THEN DO
                             MM = "06"
                             DD=JJJ-151
                          END
   WHEN (JJJ <= 212) THEN DO
                             MM = "07"
                             DD=JJJ-181
                          END
   WHEN (JJJ <= 243) THEN DO
                             MM = "08"
                             DD=JJJ-212
                          END
   WHEN (JJJ <= 273) THEN DO
                             MM = "09"
                             DD=JJJ-243
                          END
   WHEN (JJJ <= 304) THEN DO
                             MM = "10"
                             DD=JJJ-273
                          END
   WHEN (JJJ <= 334) THEN DO
                             MM = "11"
                             DD=JJJ-304
                          END
   WHEN (JJJ <= 365) THEN DO
                             MM = "12"
                             DD=JJJ-334
                          END
   OTHERWISE NOP
   END
  ELSE
   SELECT
   WHEN (JJJ <= 31)  THEN DO
                             MM = "01"
                             DD=JJJ
                          END
   WHEN (JJJ <= 60)  THEN DO
                             MM = "02"
                             DD=JJJ-31
                          END
   WHEN (JJJ <= 91)  THEN DO
                             MM = "03"
                             DD=JJJ-60
                          END
   WHEN (JJJ <= 121) THEN DO
                             MM = "04"
                             DD=JJJ-90
                          END
   WHEN (JJJ <= 152) THEN DO
                             MM = "05"
                             DD=JJJ-120
                          END
   WHEN (JJJ <= 182) THEN DO
                             MM = "06"
                             DD=JJJ-151
                          END
   WHEN (JJJ <= 213) THEN DO
                             MM = "07"
                             DD=JJJ-181
                          END
   WHEN (JJJ <= 244) THEN DO
                             MM = "08"
                             DD=JJJ-212
                          END
   WHEN (JJJ <= 274) THEN DO
                             MM = "09"
                             DD=JJJ-243
                          END
   WHEN (JJJ <= 305) THEN DO
                             MM = "10"
                             DD=JJJ-273
                          END
   WHEN (JJJ <= 335) THEN DO
                             MM = "11"
                             DD=JJJ-304
                          END
   WHEN (JJJ <= 336) THEN DO
                             MM = "12"
                             DD=JJJ-334
                          END
   OTHERWISE NOP
   END
  RETURN
./ ADD NAME=LSTFORCE 0101-01016-01016-1428-00159-00159-00000-RACFCLS
/* REXX */
/* **************************************************************** */
/* ** LIST RACF USERID BY GIVING FORCENUMBER                      ** */
/* **************************************************************** */
ARG NUM
SAY "SEARCHING ..."
"PROFILE NOPREFIX"

"ALLOC DA('MAINT.RACF.LIST') FI(INPUT) SHR"
"EXECIO * DISKR INPUT (FINIS STEM IN."
"FREE FI(INPUT)"

JJJ = 000
DD = 00
YY = 00
MM = 00
TEL = 00

DO WHILE TEL < IN.0
 TEL = TEL + 1
 PS = POS(NUM,IN.TEL)
 IF PS <> 0 THEN
 DO
  USER = SUBSTR(IN.TEL,6,8)
  NAME = SUBSTR(IN.TEL,19,20)
  TEL = TEL + 2
  LAST_ACCESS_DATE = SUBSTR(IN.TEL,14,6)
  YY = SUBSTR(IN.TEL,14,2)
  JJJ = SUBSTR(IN.TEL,17,3)
  LAST_ACCESS_TIME = SUBSTR(IN.TEL,21,8)
  IF LAST_ACCESS_DATE ^= "UNKNOW" THEN DO
   CALL JULIAN
   SAY      " "
   SAY      " "
   SAY USER "-" NAME
   SAY "LAST ACCESS DATE = " YY || "/" || MM || "/" || DD
   SAY "LAST ACCESS TIME = " LAST_ACCESS_TIME
   END
  ELSE
  IF LAST_ACCESS_DATE = "UNKNOW" THEN DO
   SAY      " "
   SAY      " "
   SAY USER "-" NAME
   SAY "LAST ACCESS DATE & TIME = NEVER BEEN USED"
  END
  EXIT
 EXIT
 END
END
SAY NUM "NOT FOUND"
EXIT

JULIAN:
  IF YY // 4 <> 0;
  THEN;
   SELECT;
   WHEN (JJJ <= 31)  THEN DO
                             MM = "01"
                             DD=JJJ
                          END
   WHEN (JJJ <= 59)  THEN DO
                             MM = "02"
                             DD=JJJ-31
                          END
   WHEN (JJJ <= 90)  THEN DO
                             MM = "03"
                             DD=JJJ-59
                          END
   WHEN (JJJ <= 120) THEN DO
                             MM = "04"
                             DD=JJJ-90
                          END
   WHEN (JJJ <= 151) THEN DO
                             MM = "05"
                             DD=JJJ-120
                          END
   WHEN (JJJ <= 181) THEN DO
                             MM = "06"
                             DD=JJJ-151
                          END
   WHEN (JJJ <= 212) THEN DO
                             MM = "07"
                             DD=JJJ-181
                          END
   WHEN (JJJ <= 243) THEN DO
                             MM = "08"
                             DD=JJJ-212
                          END
   WHEN (JJJ <= 273) THEN DO
                             MM = "09"
                             DD=JJJ-243
                          END
   WHEN (JJJ <= 304) THEN DO
                             MM = "10"
                             DD=JJJ-273
                          END
   WHEN (JJJ <= 334) THEN DO
                             MM = "11"
                             DD=JJJ-304
                          END
   WHEN (JJJ <= 365) THEN DO
                             MM = "12"
                             DD=JJJ-334
                          END
   OTHERWISE NOP
   END
  ELSE
   SELECT
   WHEN (JJJ <= 31)  THEN DO
                             MM = "01"
                             DD=JJJ
                          END
   WHEN (JJJ <= 60)  THEN DO
                             MM = "02"
                             DD=JJJ-31
                          END
   WHEN (JJJ <= 91)  THEN DO
                             MM = "03"
                             DD=JJJ-60
                          END
   WHEN (JJJ <= 121) THEN DO
                             MM = "04"
                             DD=JJJ-90
                          END
   WHEN (JJJ <= 152) THEN DO
                             MM = "05"
                             DD=JJJ-120
                          END
   WHEN (JJJ <= 182) THEN DO
                             MM = "06"
                             DD=JJJ-151
                          END
   WHEN (JJJ <= 213) THEN DO
                             MM = "07"
                             DD=JJJ-181
                          END
   WHEN (JJJ <= 244) THEN DO
                             MM = "08"
                             DD=JJJ-212
                          END
   WHEN (JJJ <= 274) THEN DO
                             MM = "09"
                             DD=JJJ-243
                          END
   WHEN (JJJ <= 305) THEN DO
                             MM = "10"
                             DD=JJJ-273
                          END
   WHEN (JJJ <= 335) THEN DO
                             MM = "11"
                             DD=JJJ-304
                          END
   WHEN (JJJ <= 336) THEN DO
                             MM = "12"
                             DD=JJJ-334
                          END
   OTHERWISE NOP
   END
  RETURN
./ ADD NAME=NCPUTIL  0101-01016-01016-1428-00062-00062-00000-RACFCLS
/* REXX */
/*************************************/
/* PROCEDURE TO CUSTOMIZE NCP MEMBER */
/* IN VTAMLIST                       */
/*************************************/
SAY "BEGINNING ..."
TRACE NONE
"PROFILE NOPREFIX"
ARG INPUT
PARSE VALUE INPUT WITH MEMBER ' ' DUMMY
A1 = '"ALLOC DA(SYS2.VTAMLST('MEMBER')) F(INCP) SHR REUSE"'
INTERPRET A1
"EXECIO * DISKR INCP (FINIS STEM INPUT."
"FREE FI(INCP)"
A2 = '"ALLOC DA(SYS2.VTAMLST('MEMBER')) F(ONCP) SHR REUSE"'
INTERPRET A2

TEL = 0
CALL READ
DO WHILE TEL <= INPUT.0

 CALL WRITE
 CALL READ
END

CALL KLAAR
/**********/
/***  READ */
/**********/
READ:
TEL = TEL + 1
TEL2 = TEL + 1
DEST = SUBSTR(INPUT.TEL,1,71)
LINE = SUBSTR(INPUT.TEL,1,72)
LOCA = SUBSTR(INPUT.TEL,13,7)
TTST = SUBSTR(INPUT.TEL,1,3)
X = SUBSTR(INPUT.TEL,72,1)
PARSE VALUE DEST WITH LLL1 '                            ' DUMMY
DEST2 = SUBSTR(INPUT.TEL2,1,72)
PARSE VALUE DEST2 WITH DUMMY '               ' LLL2 '          ' DUMMY
IF (X = 'X') & (LOCA = "LOCADDR") & (TTST = "T00") THEN
 DO
  OUT. = LLL1 || LLL2
  TEL = TEL + 1
 END
 ELSE OUT. = LINE

RETURN

/***********/
/*** WRITE**/
/*********/
WRITE:

 "EXECIO 1 DISKW ONCP (STEM OUT."
RETURN

KLAAR:
"EXECIO 0 DISKW ONCP (FINIS"
"FREE FI(ONCP)"
SAY "ENDED "
EXIT
./ ADD NAME=OFFBRWSE 0101-01016-01016-1428-00004-00004-00000-RACFCLS
/*    REXX   */
X1='ISPEXEC BROWSE DATASET('OPS.JES2.LOG')'
A='"'X1'"'
INTERPRET A
./ ADD NAME=OFFLOAD1 0101-01016-01016-1428-00099-00099-00000-RACFCLS
/* REXX OM DAAGLIKSE OFFLOADS TE DOEN    */

MAANDTABEL = '/0131 /0260 /0391 /04121/05152/06182/07213/08244/09',
         '274/10305/11335/12366'
ARG INPUT
PARSE VALUE INPUT WITH DAY
 "ALLOC DA (MAINT.JES2.LOG) F(OPRG) MOD"
 "ALLOC DA (OPS.JES2.LOG) F(OOPS) MOD"

"PROFILE NOPREFIX"
X = MSG('OFF')
UID = SYSVAR(SYSUID)
ALLOC = '"ALLOC DA(' || UID || '.OFFJCL)',
        'DIR(0) DSORG(PS) RECFM(F B) LRECL(80) SP(1,0) TRACKS',
        'BLKSIZE(18534) FI(OPRT) UNIT(SYSDA)"'
DEL = '"DEL ' || UID || '.OFFJCL"'
INTERPRET DEL
INTERPRET ALLOC

OUT. = "//" || UID || "O JOB (1,RESYS,BAC,01),'DAILY OFFLOAD',"
CALL WRITE
OUT. = "//             CLASS=L,MSGCLASS=X,NOTIFY=" || UID || ""
CALL WRITE
OUT. = "//*"
CALL WRITE
OUT. = "//STEP01  EXEC PGM=CMD@WAIT,PARM='00000100'  "
CALL WRITE
OUT. = "//SYSPRINT DD *                     "
CALL WRITE
OUT. = "//SYSIN    DD *                     "
CALL WRITE
OUT. = "  $POFF1.ST                         "
CALL WRITE
OUT. = "  $POFF1.SR                         "
CALL WRITE
OUT. = "  $POFFLOAD1                        "
CALL WRITE
OUT. = "  $TOFF1.ST,RANGE=J1-32767          "
CALL WRITE
OUT. = "  $TOFFLOAD1,DSN=TAPES.OFFLOAD.JOB." || DAY || " "
CALL WRITE
OUT. = "  $SOFF1.ST                         "
CALL WRITE
OUT. = "  $SOFFLOAD1,TYPE=TRANSMIT          "
CALL WRITE
OUT. = "/*                                  "

CALL WRITE
CALL KLAAR

/**********************/
/*** WRITE USERID JCL */
/**********************/

WRITE:
 "EXECIO 1 DISKW OPRT (STEM OUT."
RETURN

KLAAR:
 "EXECIO 0 DISKW OPRT (FINIS"
 "FREE FI(OPRT)"
  SUB = '"SUB ' || UID || '.OFFJCL"'
  INTERPRET SUB
SAY "JOB " || UID || "O"
SAY "BEEN SUBMITTED"

 CALL WRITE_JES
 CALL WRITE_OPS

  /***************************/
  /* WRITE TO MAINT.JES2.LOG */
  /***************************/
 WRITE_JES:
 UID = SYSVAR(SYSUID)
 S1 = DATE()
 S2 = TIME()
 S3 = JUSTIFY(UID,8,' ')
 S4 = JUSTIFY(DAY,6,' ')
 OUT.="   " S1 " " S2 " USER=" ||S3|| "DAY=" || S4 || " DAILY JOB OFFLOAD"
 "EXECIO 1 DISKW OPRG (STEM OUT."

 WRITE_OPS:
 UID = SYSVAR(SYSUID)
 S1 = DATE()
 S2 = TIME()
 S3 = JUSTIFY(UID,8,' ')
 S4 = JUSTIFY(DAY,6,' ')
 OUT.="   " S1 " " S2 " USER=" ||S3|| "DAY=" || S4 || " DAILY JOB OFFLOAD"
 "EXECIO 1 DISKW OOPS (STEM OUT."
 CALL KLAAR1

KLAAR1:
"EXECIO 0 DISKW OPRG (FINIS"
"FREE FI(OPRG)"
"EXECIO 0 DISKW OOPS (FINIS"
"FREE FI(OOPS)"
 DEL = '"DEL ' || UID || '.OFFJCL"'
 INTERPRET DEL
EXIT
./ ADD NAME=OFFLOAD2 0101-01016-01016-1428-00101-00101-00000-RACFCLS
/* REXX OM DAAGLIKSE OFFLOADS TE DOEN    */

MAANDTABEL = '"/0131 /0260 /0391 /04121/05152/06182/07213/08244/09",
          "274/10305/11335/12366"'
ARG INPUT
PARSE VALUE INPUT WITH DAY
 "ALLOC DA (MAINT.JES2.LOG) F(OPRG) MOD"
 "ALLOC DA (OPS.JES2.LOG) F(OOPS) MOD"

"PROFILE NOPREFIX"
X = MSG('OFF')
UID = SYSVAR(SYSUID)
ALLOC = '"ALLOC DA(' || UID || '.OFFJCL)',
        'DIR(0) DSORG(PS) RECFM(F B) LRECL(80) SP(1,0) TRACKS',
        'BLKSIZE(18534) FI(OPRT) UNIT(SYSDA)"'
DEL = '"DEL ' || UID || '.OFFJCL"'
INTERPRET DEL
INTERPRET ALLOC

JDT = DATE("JULIAN")

OUT. = "//" || UID || "O JOB (1,RESYS,BAC,01),'DAILY OFFLOAD',"
CALL WRITE
OUT. = "//             CLASS=L,MSGCLASS=X,NOTIFY=" || UID || ""
CALL WRITE
OUT. = "//*"
CALL WRITE
OUT. = "//STEP01  EXEC PGM=CMD@WAIT,PARM='00000100'  "
CALL WRITE
OUT. = "//SYSPRINT DD *                     "
CALL WRITE
OUT. = "//SYSIN    DD *                     "
CALL WRITE
OUT. = "  $POFF1.ST                         "
CALL WRITE
OUT. = "  $POFF1.SR                         "
CALL WRITE
OUT. = "  $POFFLOAD1                        "
CALL WRITE
OUT. = "  $TOFF1.ST,RANGE=S1-32767          "
CALL WRITE
OUT. = "  $TOFFLOAD1,DSN=TAPES.OFFLOAD.STC." || DAY || " "
CALL WRITE
OUT. = "  $SOFF1.ST                         "
CALL WRITE
OUT. = "  $SOFFLOAD1,TYPE=TRANSMIT          "
CALL WRITE
OUT. = "/*                                  "

CALL WRITE
CALL KLAAR

/**********************/
/*** WRITE USERID JCL */
/**********************/

WRITE:
 "EXECIO 1 DISKW OPRT (STEM OUT."
RETURN

KLAAR:
 "EXECIO 0 DISKW OPRT (FINIS"
 "FREE FI(OPRT)"
  SUB = '"SUB ' || UID || '.OFFJCL"'
  INTERPRET SUB
SAY "JOB " || UID || "O"
SAY "BEEN SUBMITTED"

 CALL WRITE_JES
 CALL WRITE_OPS

  /***************************/
  /* WRITE TO MAINT.JES2.LOG */
  /***************************/
 WRITE_JES:
 UID = SYSVAR(SYSUID)
 S1 = DATE()
 S2 = TIME()
 S3 = JUSTIFY(UID,8,' ')
 S4 = JUSTIFY(DAY,6,' ')
 OUT.="   " S1 " " S2 " USER=" ||S3|| "DAY=" || S4 || " DAILY STC OFFLOAD"
 "EXECIO 1 DISKW OPRG (STEM OUT."

 WRITE_OPS:
 UID = SYSVAR(SYSUID)
 S1 = DATE()
 S2 = TIME()
 S3 = JUSTIFY(UID,8,' ')
 S4 = JUSTIFY(DAY,6,' ')
 OUT.="   " S1 " " S2 " USER=" ||S3|| "DAY=" || S4 || " DAILY STC OFFLOAD"
 "EXECIO 1 DISKW OOPS (STEM OUT."
 CALL KLAAR1

KLAAR1:
"EXECIO 0 DISKW OPRG (FINIS"
"FREE FI(OPRG)"
"EXECIO 0 DISKW OOPS (FINIS"
"FREE FI(OOPS)"
 DEL = '"DEL ' || UID || '.OFFJCL"'
 INTERPRET DEL
EXIT
./ ADD NAME=OFFLOAD3 0101-01016-01016-1428-00102-00102-00000-RACFCLS
/* REXX OM DAAGLIKSE OFFLOADS TE DOEN    */

MAANDTABEL = '/0131 /0260 /0391 /04121/05152/06182/07213/08244/09;
          274/10305/11335/12366'

ARG INPUT
PARSE VALUE INPUT WITH JNUM ':' JNAM
 "ALLOC DA (MAINT.JES2.LOG) F(OPRG) MOD"
 "ALLOC DA (OPS.JES2.LOG) F(OOPS) MOD"

"PROFILE NOPREFIX"
X = MSG('OFF')
UID = SYSVAR(SYSUID)
ALLOC = '"ALLOC DA(' || UID || '.OFFJCL)',
        'DIR(0) DSORG(PS) RECFM(F B) LRECL(80) SP(1,0) TRACKS',
        'BLKSIZE(18534) FI(OPRT) UNIT(SYSDA)"'
DEL = '"DEL ' || UID || '.OFFJCL"'
INTERPRET DEL
INTERPRET ALLOC

JDT = DATE("JULIAN")

OUT. = "//" || UID || "O JOB (1,RESYS,BAC,01),'DAILY OFFLOAD',"
CALL WRITE
OUT. = "//             CLASS=L,MSGCLASS=X,NOTIFY=" || UID || ""
CALL WRITE
OUT. = "//*"
CALL WRITE
OUT. = "//STEP01  EXEC PGM=CMD@WAIT,PARM='00000100'  "
CALL WRITE
OUT. = "//SYSPRINT DD *                     "
CALL WRITE
OUT. = "//SYSIN    DD *                     "
CALL WRITE
OUT. = "  $POFF1.ST,OFF1.JT                 "
CALL WRITE
OUT. = "  $POFF1.SR                         "
CALL WRITE
OUT. = "  $POFFLOAD1                        "
CALL WRITE
OUT. = "  $TOFF1.ST,RANGE=J" || JNUM || " "
CALL WRITE
OUT. = "  $TOFFLOAD1,DSN=TAPES.OFFLOAD.JOB.J"JNUM".D"JDT""
CALL WRITE
OUT. = "  $SOFF1.ST                         "
CALL WRITE
OUT. = "  $SOFFLOAD1,TYPE=TRANSMIT          "
CALL WRITE
OUT. = "/*                                  "

CALL WRITE
CALL KLAAR

/**********************/
/*** WRITE USERID JCL */
/**********************/

WRITE:
 "EXECIO 1 DISKW OPRT (STEM OUT."
RETURN

KLAAR:
 "EXECIO 0 DISKW OPRT (FINIS"
 "FREE FI(OPRT)"
  SUB = '"SUB ' || UID || '.OFFJCL"'
  INTERPRET SUB
SAY "JOB " || UID || "O"
SAY "BEEN SUBMITTED"

 CALL WRITE_JES
 CALL WRITE_OPS

  /***************************/
  /* WRITE TO MAINT.JES2.LOG */
  /***************************/
 WRITE_JES:
 UID = SYSVAR(SYSUID)
 S1 = DATE()
 S2 = TIME()
 S3 = JUSTIFY(UID,8,' ')
 S4 = JUSTIFY(JNUM,6,' ')
 OUT.="   " S1 " " S2 " USER=" ||S3|| "JOB=" || S4 || " SPECIFIC JOB OFFLOAD"
 "EXECIO 1 DISKW OPRG (STEM OUT."

 WRITE_OPS:
 UID = SYSVAR(SYSUID)
 S1 = DATE()
 S2 = TIME()
 S3 = JUSTIFY(UID,8,' ')
 S4 = JUSTIFY(JNUM,6,' ')
 OUT.="   " S1 " " S2 " USER=" ||S3|| "JOB=" || S4 || " SPECIFIC JOB OFFLOAD"
 "EXECIO 1 DISKW OOPS (STEM OUT."
 CALL KLAAR1

KLAAR1:
"EXECIO 0 DISKW OPRG (FINIS"
"FREE FI(OPRG)"
"EXECIO 0 DISKW OOPS (FINIS"
"FREE FI(OOPS)"
 DEL = '"DEL ' || UID || '.OFFJCL"'
 INTERPRET DEL
EXIT
./ ADD NAME=OFFLOAD4 0101-01016-01016-1428-00102-00102-00000-RACFCLS
/* REXX OM DAAGLIKSE OFFLOADS TE DOEN    */

MAANDTABEL = '/0131 /0260 /0391 /04121/05152/06182/07213/08244/09;
          274/10305/11335/12366'

ARG INPUT
PARSE VALUE INPUT WITH SNUM ':' SNAM
 "ALLOC DA (MAINT.JES2.LOG) F(OPRG) MOD"
 "ALLOC DA (OPS.JES2.LOG) F(OOPS) MOD"

"PROFILE NOPREFIX"
X = MSG('OFF')
UID = SYSVAR(SYSUID)
ALLOC = '"ALLOC DA(' || UID || '.OFFJCL)',
        'DIR(0) DSORG(PS) RECFM(F B) LRECL(80) SP(1,0) TRACKS',
        'BLKSIZE(18534) FI(OPRT) UNIT(SYSDA)"'
DEL = '"DEL ' || UID || '.OFFJCL"'
INTERPRET DEL
INTERPRET ALLOC

JDT = DATE("JULIAN")

OUT. = "//" || UID || "O JOB (1,RESYS,BAC,01),'DAILY OFFLOAD',"
CALL WRITE
OUT. = "//             CLASS=L,MSGCLASS=X,NOTIFY=" || UID || ""
CALL WRITE
OUT. = "//*"
CALL WRITE
OUT. = "//STEP01  EXEC PGM=CMD@WAIT,PARM='00000100'  "
CALL WRITE
OUT. = "//SYSPRINT DD *                     "
CALL WRITE
OUT. = "//SYSIN    DD *                     "
CALL WRITE
OUT. = "  $POFF1.ST,OFF1.JT                 "
CALL WRITE
OUT. = "  $POFF1.SR                         "
CALL WRITE
OUT. = "  $POFFLOAD1                        "
CALL WRITE
OUT. = "  $TOFF1.ST,RANGE=S" || SNUM || " "
CALL WRITE
OUT. = "  $TOFFLOAD1,DSN=TAPES.OFFLOAD.STC.S"SNUM".D"JDT""
CALL WRITE
OUT. = "  $SOFF1.ST                         "
CALL WRITE
OUT. = "  $SOFFLOAD1,TYPE=TRANSMIT          "
CALL WRITE
OUT. = "/*                                  "

CALL WRITE
CALL KLAAR

/**********************/
/*** WRITE USERID JCL */
/**********************/

WRITE:
 "EXECIO 1 DISKW OPRT (STEM OUT."
RETURN

KLAAR:
 "EXECIO 0 DISKW OPRT (FINIS"
 "FREE FI(OPRT)"
  SUB = '"SUB ' || UID || '.OFFJCL"'
  INTERPRET SUB
SAY "JOB " || UID || "O"
SAY "BEEN SUBMITTED"

 CALL WRITE_JES
 CALL WRITE_OPS

  /***************************/
  /* WRITE TO MAINT.JES2.LOG */
  /***************************/
 WRITE_JES:
 UID = SYSVAR(SYSUID)
 S1 = DATE()
 S2 = TIME()
 S3 = JUSTIFY(UID,8,' ')
 S4 = JUSTIFY(SNUM,6,' ')
 OUT.="   " S1 " " S2 " USER=" ||S3|| "STC=" || S4 || " SPECIFIC STC OFFLOAD"
 "EXECIO 1 DISKW OPRG (STEM OUT."

 WRITE_OPS:
 UID = SYSVAR(SYSUID)
 S1 = DATE()
 S2 = TIME()
 S3 = JUSTIFY(UID,8,' ')
 S4 = JUSTIFY(SNUM,6,' ')
 OUT.="   " S1 " " S2 " USER=" ||S3|| "STC=" || S4 || " SPECIFIC STC OFFLOAD"
 "EXECIO 1 DISKW OOPS (STEM OUT."
 CALL KLAAR1

KLAAR1:
"EXECIO 0 DISKW OPRG (FINIS"
"FREE FI(OPRG)"
"EXECIO 0 DISKW OOPS (FINIS"
"FREE FI(OOPS)"
 DEL = '"DEL ' || UID || '.OFFJCL"'
 INTERPRET DEL
EXIT
./ ADD NAME=OFFLOG   0101-01016-01016-1428-00030-00030-00000-RACFCLS
 /* REXX */

 "ALLOC DA(OPS.JES2.LOG) F(OOPS) MOD"

 WRITE_OPS:
 UID = SYSVAR(SYSUID)
 S1 = DATE("O")
 S2 = TIME()
 S3 = JUSTIFY(UID,8,' ')
 S4 = JUSTIFY(JNUM,6,' ')
 S5 = JUSTIFY(COMM,20,' ')
 OUT.="***********************************************************************"
 "EXECIO 1 DISKW OOPS (STEM OUT."
 OUT.="+++++++++++++++++ THIS IS A SPECIFIC JOB OFFLOAD ++++++++++++++++++++++"
 "EXECIO 1 DISKW OOPS (STEM OUT."
 OUT.=":     DATE AND TIME      : USERID   : JOBNUMBER :       COMMENT       :"
 "EXECIO 1 DISKW OOPS (STEM OUT."
 OUT.="-----------------------------------------------------------------------"
 "EXECIO 1 DISKW OOPS (STEM OUT."
 OUT.=":" S1 "AT " S2 " :" S3 ":" J""S4   "  :" S5":"
 "EXECIO 1 DISKW OOPS (STEM OUT."
 OUT.="+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
 "EXECIO 1 DISKW OOPS (STEM OUT."

 CALL KLAAR1

KLAAR1:
"EXECIO 0 DISKW OOPS (FINIS"
"FREE FI(OOPS)"
EXIT
./ ADD NAME=OFFSPES  0101-01016-01016-1428-00121-00121-00000-RACFCLS
/* REXX OM SPESIFIEKE OFFLOADS TE DOEN */

ARG INPUT
PARSE VALUE INPUT WITH JNUM ':' COMM
 "ALLOC DA (MAINT.JES2.LOG) F(OPRG) MOD"
 "ALLOC DA (OPS.JES2.LOG) F(OOPS) MOD"

"PROFILE NOPREFIX"
X = MSG('OFF')
UID = SYSVAR(SYSUID)
ALLOC = '"ALLOC DA(' || UID || '.OFFJCL)',
        'DIR(0) DSORG(PS) RECFM(F B) LRECL(80) SP(1,0) TRACKS',
        'BLKSIZE(18534) FI(OPRT) UNIT(SYSDA)"'
DEL = '"DEL ' || UID || '.OFFJCL"'
INTERPRET DEL
INTERPRET ALLOC

D = DATE("STANDARD")
JDT = SUBSTR(D,3,6)

OUT. = "//" || UID || "O JOB (1,RESYS,BAC,01),'DAILY OFFLOAD',"
CALL WRITE
OUT. = "//             CLASS=L,MSGCLASS=X,NOTIFY=" || UID || ""
CALL WRITE
OUT. = "//*"
CALL WRITE
OUT. = "//STEP01  EXEC PGM=CMD@WAIT,PARM='00000100'  "
CALL WRITE
OUT. = "//SYSPRINT DD *                     "
CALL WRITE
OUT. = "//SYSIN    DD *                     "
CALL WRITE
OUT. = "  $POFF1.ST,OFF1.JT                 "
CALL WRITE
OUT. = "  $POFF1.SR                         "
CALL WRITE
OUT. = "  $POFFLOAD1                        "
CALL WRITE
OUT. = "  $TOFF1.ST,RANGE=J" || JNUM || " "
CALL WRITE
OUT. = "  $TOFFLOAD1,DSN=DLY.PRDB.OFFLOAD.JOB.J" || JNUM || ".D" || JDT || ""
CALL WRITE
OUT. = "  $SOFF1.ST                         "
CALL WRITE
OUT. = "  $SOFFLOAD1,TYPE=TRANSMIT          "
CALL WRITE
OUT. = "/*                                  "

CALL WRITE
CALL KLAAR

/**********************/
/*** WRITE USERID JCL */
/**********************/

WRITE:
 "EXECIO 1 DISKW OPRT (STEM OUT."
RETURN

KLAAR:
 "EXECIO 0 DISKW OPRT (FINIS"
 "FREE FI(OPRT)"
 /* SUB = '"SUB ' || UID || '.OFFJCL"' */
 /* INTERPRET SUB */
SAY "JOB " || UID || "O"
SAY "BEEN SUBMITTED"

 CALL WRITE_JES
 CALL WRITE_OPS

  /***************************/
  /* WRITE TO MAINT.JES2.LOG */
  /***************************/
 WRITE_JES:
 UID = SYSVAR(SYSUID)
 S1 = DATE()
 S2 = TIME("C")
 S3 = JUSTIFY(UID,8,' ')
 S4 = JUSTIFY(JNUM,6,' ')
 S5 = JUSTIFY(COMM,20,' ')
 OUT.=" "
 "EXECIO 1 DISKW OPRG (STEM OUT."
 OUT.="+++++++++++++++++ THIS IS A SPESIFIC JOB OFFLOAD ++++++++++++++++++++++"
 "EXECIO 1 DISKW OPRG (STEM OUT."
 OUT.=":     DATE AND TIME      : USERID   : JOBNUMBER :       COMMENT       :"
 "EXECIO 1 DISKW OPRG (STEM OUT."
 OUT.="-----------------------------------------------------------------------"
 "EXECIO 1 DISKW OPRG (STEM OUT."
 OUT.=":" S1 "AT" S2 " :" S3 ":" J""S4   "  :" S5":"
 "EXECIO 1 DISKW OPRG (STEM OUT."
 OUT.="+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
 "EXECIO 1 DISKW OPRG (STEM OUT."

 WRITE_OPS:
 UID = SYSVAR(SYSUID)
 S1 = DATE()
 S2 = TIME("C")
 S3 = JUSTIFY(UID,8,' ')
 S4 = JUSTIFY(JNUM,6,' ')
 S5 = JUSTIFY(COMM,20,' ')
 OUT.=" "
 "EXECIO 1 DISKW OOPS (STEM OUT."
 OUT.="+++++++++++++++++ THIS IS A SPESIFIC JOB OFFLOAD ++++++++++++++++++++++"
 "EXECIO 1 DISKW OOPS (STEM OUT."
 OUT.=":     DATE AND TIME      : USERID   : JOBNUMBER :       COMMENT       :"
 "EXECIO 1 DISKW OOPS (STEM OUT."
 OUT.="-----------------------------------------------------------------------"
 "EXECIO 1 DISKW OOPS (STEM OUT."
 OUT.=":" S1 "AT" S2 " :" S3 ":" J""S4   "  :" S5":"
 "EXECIO 1 DISKW OOPS (STEM OUT."
 OUT.="+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
 "EXECIO 1 DISKW OOPS (STEM OUT."

 CALL KLAAR1

KLAAR1:
"EXECIO 0 DISKW OPRG (FINIS"
"FREE FI(OPRG)"
"EXECIO 0 DISKW OOPS (FINIS"
"FREE FI(OOPS)"
EXIT
./ ADD NAME=OFF1     0101-01016-01016-1428-00100-00100-00000-RACFCLS
/* REXX OM DAAGLIKSE OFFLOADS TE DOEN    */

MAANDTABEL = '/0131 /0260 /0391 /04121/05152/06182/07213/08244/09',
         '274/10305/11335/12366'
ARG INPUT
PARSE VALUE INPUT WITH DAY
 "ALLOC DA (MAINT.JES2.LOG) F(OPRG) MOD"
 "ALLOC DA (OPS.JES2.LOG) F(OOPS) MOD"

"PROFILE NOPREFIX"
X = MSG('OFF')
UID = SYSVAR(SYSUID)
ALLOC = '"ALLOC DA(' || UID || '.OFFJCL)',
        'DIR(0) DSORG(PS) RECFM(F B) LRECL(80) SP(1,0) TRACKS',
        'BLKSIZE(18534) FI(OPRT) UNIT(SYSDA)"'
FDP = '&SYSNAME.'
DEL = '"DEL ' || UID || '.OFFJCL"'
INTERPRET DEL
INTERPRET ALLOC

OUT. = "//" || UID || "O JOB (1,RESYS,BAC,01),'DAILY OFFLOAD',"
CALL WRITE
OUT. = "//             CLASS=L,MSGCLASS=X,NOTIFY=" || UID || ""
CALL WRITE
OUT. = "//*"
CALL WRITE
OUT. = "//STEP01  EXEC PGM=CMD@WAIT,PARM='00000100'  "
CALL WRITE
OUT. = "//SYSPRINT DD *                     "
CALL WRITE
OUT. = "//SYSIN    DD *                     "
CALL WRITE
OUT. = "  $POFF1.ST                         "
CALL WRITE
OUT. = "  $POFF1.SR                         "
CALL WRITE
OUT. = "  $POFFLOAD1                        "
CALL WRITE
OUT. = "  $TOFF1.ST,RANGE=J1-32767          "
CALL WRITE
OUT. = "  $TOFFLOAD1,DSN=TAPES." || FDP || ".OFFLOAD.JOB." || DAY || " "
CALL WRITE
OUT. = "  $SOFF1.ST                         "
CALL WRITE
OUT. = "  $SOFFLOAD1,TYPE=TRANSMIT          "
CALL WRITE
OUT. = "/*                                  "

CALL WRITE
CALL KLAAR

/**********************/
/*** WRITE USERID JCL */
/**********************/

WRITE:
 "EXECIO 1 DISKW OPRT (STEM OUT."
RETURN

KLAAR:
 "EXECIO 0 DISKW OPRT (FINIS"
 "FREE FI(OPRT)"
  SUB = '"SUB ' || UID || '.OFFJCL"'
  INTERPRET SUB
SAY "JOB " || UID || "O"
SAY "BEEN SUBMITTED"

 CALL WRITE_JES
 CALL WRITE_OPS

  /***************************/
  /* WRITE TO MAINT.JES2.LOG */
  /***************************/
 WRITE_JES:
 UID = SYSVAR(SYSUID)
 S1 = DATE()
 S2 = TIME()
 S3 = JUSTIFY(UID,8,' ')
 S4 = JUSTIFY(DAY,6,' ')
 OUT.="   " S1 " " S2 " USER=" ||S3|| "DAY=" || S4 || " DAILY JOB OFFLOAD"
 "EXECIO 1 DISKW OPRG (STEM OUT."

 WRITE_OPS:
 UID = SYSVAR(SYSUID)
 S1 = DATE()
 S2 = TIME()
 S3 = JUSTIFY(UID,8,' ')
 S4 = JUSTIFY(DAY,6,' ')
 OUT.="   " S1 " " S2 " USER=" ||S3|| "DAY=" || S4 || " DAILY JOB OFFLOAD"
 "EXECIO 1 DISKW OOPS (STEM OUT."
 CALL KLAAR1

KLAAR1:
"EXECIO 0 DISKW OPRG (FINIS"
"FREE FI(OPRG)"
"EXECIO 0 DISKW OOPS (FINIS"
"FREE FI(OOPS)"
 DEL = '"DEL ' || UID || '.OFFJCL"'
 INTERPRET DEL
EXIT
./ ADD NAME=OFF2     0101-01016-01016-1428-00102-00102-00000-RACFCLS
/* REXX OM DAAGLIKSE OFFLOADS TE DOEN    */

MAANDTABEL = '"/0131 /0260 /0391 /04121/05152/06182/07213/08244/09",
          "274/10305/11335/12366"'
ARG INPUT
PARSE VALUE INPUT WITH DAY
 "ALLOC DA (MAINT.JES2.LOG) F(OPRG) MOD"
 "ALLOC DA (OPS.JES2.LOG) F(OOPS) MOD"

"PROFILE NOPREFIX"
X = MSG('OFF')
UID = SYSVAR(SYSUID)
ALLOC = '"ALLOC DA(' || UID || '.OFFJCL)',
        'DIR(0) DSORG(PS) RECFM(F B) LRECL(80) SP(1,0) TRACKS',
        'BLKSIZE(18534) FI(OPRT) UNIT(SYSDA)"'
DEL = '"DEL ' || UID || '.OFFJCL"'
FDP = '&SYSNAME.'
INTERPRET DEL
INTERPRET ALLOC

JDT = DATE("JULIAN")

OUT. = "//" || UID || "O JOB (1,RESYS,BAC,01),'DAILY OFFLOAD',"
CALL WRITE
OUT. = "//             CLASS=L,MSGCLASS=X,NOTIFY=" || UID || ""
CALL WRITE
OUT. = "//*"
CALL WRITE
OUT. = "//STEP01  EXEC PGM=CMD@WAIT,PARM='00000100'  "
CALL WRITE
OUT. = "//SYSPRINT DD *                     "
CALL WRITE
OUT. = "//SYSIN    DD *                     "
CALL WRITE
OUT. = "  $POFF1.ST                         "
CALL WRITE
OUT. = "  $POFF1.SR                         "
CALL WRITE
OUT. = "  $POFFLOAD1                        "
CALL WRITE
OUT. = "  $TOFF1.ST,RANGE=S1-32767          "
CALL WRITE
OUT. = "  $TOFFLOAD1,DSN=TAPES." || FDP || ".OFFLOAD.STC." || DAY || " "
CALL WRITE
OUT. = "  $SOFF1.ST                         "
CALL WRITE
OUT. = "  $SOFFLOAD1,TYPE=TRANSMIT          "
CALL WRITE
OUT. = "/*                                  "

CALL WRITE
CALL KLAAR

/**********************/
/*** WRITE USERID JCL */
/**********************/

WRITE:
 "EXECIO 1 DISKW OPRT (STEM OUT."
RETURN

KLAAR:
 "EXECIO 0 DISKW OPRT (FINIS"
 "FREE FI(OPRT)"
  SUB = '"SUB ' || UID || '.OFFJCL"'
  INTERPRET SUB
SAY "JOB " || UID || "O"
SAY "BEEN SUBMITTED"

 CALL WRITE_JES
 CALL WRITE_OPS

  /***************************/
  /* WRITE TO MAINT.JES2.LOG */
  /***************************/
 WRITE_JES:
 UID = SYSVAR(SYSUID)
 S1 = DATE()
 S2 = TIME()
 S3 = JUSTIFY(UID,8,' ')
 S4 = JUSTIFY(DAY,6,' ')
 OUT.="   " S1 " " S2 " USER=" ||S3|| "DAY=" || S4 || " DAILY STC OFFLOAD"
 "EXECIO 1 DISKW OPRG (STEM OUT."

 WRITE_OPS:
 UID = SYSVAR(SYSUID)
 S1 = DATE()
 S2 = TIME()
 S3 = JUSTIFY(UID,8,' ')
 S4 = JUSTIFY(DAY,6,' ')
 OUT.="   " S1 " " S2 " USER=" ||S3|| "DAY=" || S4 || " DAILY STC OFFLOAD"
 "EXECIO 1 DISKW OOPS (STEM OUT."
 CALL KLAAR1

KLAAR1:
"EXECIO 0 DISKW OPRG (FINIS"
"FREE FI(OPRG)"
"EXECIO 0 DISKW OOPS (FINIS"
"FREE FI(OOPS)"
 DEL = '"DEL ' || UID || '.OFFJCL"'
 INTERPRET DEL
EXIT
./ ADD NAME=OFF3     0101-01016-01016-1428-00103-00103-00000-RACFCLS
/* REXX OM DAAGLIKSE OFFLOADS TE DOEN    */

MAANDTABEL = '/0131 /0260 /0391 /04121/05152/06182/07213/08244/09;
          274/10305/11335/12366'

ARG INPUT
PARSE VALUE INPUT WITH JNUM ':' JNAM
 "ALLOC DA (MAINT.JES2.LOG) F(OPRG) MOD"
 "ALLOC DA (OPS.JES2.LOG) F(OOPS) MOD"

"PROFILE NOPREFIX"
X = MSG('OFF')
UID = SYSVAR(SYSUID)
ALLOC = '"ALLOC DA(' || UID || '.OFFJCL)',
        'DIR(0) DSORG(PS) RECFM(F B) LRECL(80) SP(1,0) TRACKS',
        'BLKSIZE(18534) FI(OPRT) UNIT(SYSDA)"'
FDP = '&SYSNAME.'
DEL = '"DEL ' || UID || '.OFFJCL"'
INTERPRET DEL
INTERPRET ALLOC

JDT = DATE("JULIAN")

OUT. = "//" || UID || "O JOB (1,RESYS,BAC,01),'DAILY OFFLOAD',"
CALL WRITE
OUT. = "//             CLASS=L,MSGCLASS=X,NOTIFY=" || UID || ""
CALL WRITE
OUT. = "//*"
CALL WRITE
OUT. = "//STEP01  EXEC PGM=CMD@WAIT,PARM='00000100'  "
CALL WRITE
OUT. = "//SYSPRINT DD *                     "
CALL WRITE
OUT. = "//SYSIN    DD *                     "
CALL WRITE
OUT. = "  $POFF1.ST,OFF1.JT                 "
CALL WRITE
OUT. = "  $POFF1.SR                         "
CALL WRITE
OUT. = "  $POFFLOAD1                        "
CALL WRITE
OUT. = "  $TOFF1.ST,RANGE=J" || JNUM || " "
CALL WRITE
OUT. = "  $TOFFLOAD1,DSN=TAPES."FDP".OFFLOAD.JOB.J"JNUM".D"JDT""
CALL WRITE
OUT. = "  $SOFF1.ST                         "
CALL WRITE
OUT. = "  $SOFFLOAD1,TYPE=TRANSMIT          "
CALL WRITE
OUT. = "/*                                  "

CALL WRITE
CALL KLAAR

/**********************/
/*** WRITE USERID JCL */
/**********************/

WRITE:
 "EXECIO 1 DISKW OPRT (STEM OUT."
RETURN

KLAAR:
 "EXECIO 0 DISKW OPRT (FINIS"
 "FREE FI(OPRT)"
  SUB = '"SUB ' || UID || '.OFFJCL"'
  INTERPRET SUB
SAY "JOB " || UID || "O"
SAY "BEEN SUBMITTED"

 CALL WRITE_JES
 CALL WRITE_OPS

  /***************************/
  /* WRITE TO MAINT.JES2.LOG */
  /***************************/
 WRITE_JES:
 UID = SYSVAR(SYSUID)
 S1 = DATE()
 S2 = TIME()
 S3 = JUSTIFY(UID,8,' ')
 S4 = JUSTIFY(JNUM,6,' ')
 OUT.="   " S1 " " S2 " USER=" ||S3|| "JOB=" || S4 || " SPECIFIC JOB OFFLOAD"
 "EXECIO 1 DISKW OPRG (STEM OUT."

 WRITE_OPS:
 UID = SYSVAR(SYSUID)
 S1 = DATE()
 S2 = TIME()
 S3 = JUSTIFY(UID,8,' ')
 S4 = JUSTIFY(JNUM,6,' ')
 OUT.="   " S1 " " S2 " USER=" ||S3|| "JOB=" || S4 || " SPECIFIC JOB OFFLOAD"
 "EXECIO 1 DISKW OOPS (STEM OUT."
 CALL KLAAR1

KLAAR1:
"EXECIO 0 DISKW OPRG (FINIS"
"FREE FI(OPRG)"
"EXECIO 0 DISKW OOPS (FINIS"
"FREE FI(OOPS)"
 DEL = '"DEL ' || UID || '.OFFJCL"'
 INTERPRET DEL
EXIT
./ ADD NAME=OFF4     0101-01016-01016-1428-00103-00103-00000-RACFCLS
/* REXX OM DAAGLIKSE OFFLOADS TE DOEN    */

MAANDTABEL = '/0131 /0260 /0391 /04121/05152/06182/07213/08244/09;
          274/10305/11335/12366'

ARG INPUT
PARSE VALUE INPUT WITH SNUM
 "ALLOC DA (MAINT.JES2.LOG) F(OPRG) MOD"
 "ALLOC DA (OPS.JES2.LOG) F(OOPS) MOD"

"PROFILE NOPREFIX"
X = MSG('OFF')
UID = SYSVAR(SYSUID)
ALLOC = '"ALLOC DA(' || UID || '.OFFJCL)',
        'DIR(0) DSORG(PS) RECFM(F B) LRECL(80) SP(1,0) TRACKS',
        'BLKSIZE(18534) FI(OPRT) UNIT(SYSDA)"'
FDP = '&SYSNAME.'
DEL = '"DEL ' || UID || '.OFFJCL"'
INTERPRET DEL
INTERPRET ALLOC

JDT = DATE("JULIAN")

OUT. = "//" || UID || "O JOB (1,RESYS,BAC,01),'DAILY OFFLOAD',"
CALL WRITE
OUT. = "//             CLASS=L,MSGCLASS=X,NOTIFY=" || UID || ""
CALL WRITE
OUT. = "//*"
CALL WRITE
OUT. = "//STEP01  EXEC PGM=CMD@WAIT,PARM='00000100'  "
CALL WRITE
OUT. = "//SYSPRINT DD *                     "
CALL WRITE
OUT. = "//SYSIN    DD *                     "
CALL WRITE
OUT. = "  $POFF1.ST,OFF1.JT                 "
CALL WRITE
OUT. = "  $POFF1.SR                         "
CALL WRITE
OUT. = "  $POFFLOAD1                        "
CALL WRITE
OUT. = "  $TOFF1.ST,RANGE=S" || SNUM || " "
CALL WRITE
OUT. = "  $TOFFLOAD1,DSN=TAPES."FDP".OFFLOAD.STC.S"SNUM".D"JDT""
CALL WRITE
OUT. = "  $SOFF1.ST                         "
CALL WRITE
OUT. = "  $SOFFLOAD1,TYPE=TRANSMIT          "
CALL WRITE
OUT. = "/*                                  "

CALL WRITE
CALL KLAAR

/**********************/
/*** WRITE USERID JCL */
/**********************/

WRITE:
 "EXECIO 1 DISKW OPRT (STEM OUT."
RETURN

KLAAR:
 "EXECIO 0 DISKW OPRT (FINIS"
 "FREE FI(OPRT)"
  SUB = '"SUB ' || UID || '.OFFJCL"'
  INTERPRET SUB
SAY "JOB " || UID || "O"
SAY "BEEN SUBMITTED"

 CALL WRITE_JES
 CALL WRITE_OPS

  /***************************/
  /* WRITE TO MAINT.JES2.LOG */
  /***************************/
 WRITE_JES:
 UID = SYSVAR(SYSUID)
 S1 = DATE()
 S2 = TIME()
 S3 = JUSTIFY(UID,8,' ')
 S4 = JUSTIFY(SNUM,6,' ')
 OUT.="   " S1 " " S2 " USER=" ||S3|| "STC=" || S4 || " SPECIFIC STC OFFLOAD"
 "EXECIO 1 DISKW OPRG (STEM OUT."

 WRITE_OPS:
 UID = SYSVAR(SYSUID)
 S1 = DATE()
 S2 = TIME()
 S3 = JUSTIFY(UID,8,' ')
 S4 = JUSTIFY(SNUM,6,' ')
 OUT.="   " S1 " " S2 " USER=" ||S3|| "STC=" || S4 || " SPECIFIC STC OFFLOAD"
 "EXECIO 1 DISKW OOPS (STEM OUT."
 CALL KLAAR1

KLAAR1:
"EXECIO 0 DISKW OPRG (FINIS"
"FREE FI(OPRG)"
"EXECIO 0 DISKW OOPS (FINIS"
"FREE FI(OOPS)"
 DEL = '"DEL ' || UID || '.OFFJCL"'
 INTERPRET DEL
EXIT
./ ADD NAME=ONLOAD1  0101-01016-01016-1428-00105-00105-00000-RACFCLS
/* REXX OM DAAGLIKSE ONLOADS TE DOEN    */

MAANDTABEL = '/0131 /0260 /0391 /04121/05152/06182/07213/08244/09;
          274/10305/11335/12366'
ARG INPUT INP2
PARSE VALUE INPUT WITH DAY
PARSE VALUE INP2  WITH JOBN
 "ALLOC DA (MAINT.JES2.LOG) F(OPRG) MOD"
 "ALLOC DA (OPS.JES2.LOG) F(OOPS) MOD"

"PROFILE NOPREFIX"
X = MSG('OFF')
UID = SYSVAR(SYSUID)
ALLOC = '"ALLOC DA(' || UID || '.ONJCL)',
        'DIR(0) DSORG(PS) RECFM(F B) LRECL(80) SP(1,0) TRACKS',
        'BLKSIZE(18534) FI(OPRT) UNIT(SYSDA)"'
DEL = '"DEL ' || UID || '.ONJCL"'
INTERPRET DEL
INTERPRET ALLOC

JDT = DATE("JULIAN")

OUT. = "//" || UID || "O JOB (1,RESYS,BAC,01),'DAILY OFFLOAD',"
CALL WRITE
OUT. = "//             CLASS=L,MSGCLASS=X,NOTIFY=" || UID || ""
CALL WRITE
OUT. = "//*"
CALL WRITE
OUT. = "//STEP01  EXEC PGM=CMD@WAIT,PARM='00000100'  "
CALL WRITE
OUT. = "//SYSPRINT DD *                     "
CALL WRITE
OUT. = "//SYSIN    DD *                     "
CALL WRITE
OUT. = "  $POFF1.ST                         "
CALL WRITE
OUT. = "  $POFF1.SR                         "
CALL WRITE
OUT. = "  $POFFLOAD1                        "
CALL WRITE
IF JOBN = "" THEN
  OUT. = "  $TOFF1.SR,RANGE=J1-32767          "
ELSE
  OUT. = "  $TOFF1.SR,RANGE=J"JOBN"           "
CALL WRITE
OUT. = "  $TOFFLOAD1,DSN=TAPES.OFFLOAD.JOB." || DAY || " "
CALL WRITE
OUT. = "  $SOFF1.SR                         "
CALL WRITE
OUT. = "  $SOFFLOAD1,TYPE=RECEIVE           "
CALL WRITE
OUT. = "/*                                  "

CALL WRITE
CALL KLAAR

/**********************/
/*** WRITE USERID JCL */
/**********************/

WRITE:
 "EXECIO 1 DISKW OPRT (STEM OUT."
RETURN

KLAAR:
 "EXECIO 0 DISKW OPRT (FINIS"
 "FREE FI(OPRT)"
  SUB = '"SUB ' || UID || '.ONJCL"'
  INTERPRET SUB
SAY "JOB " || UID || "O"
SAY "BEEN SUBMITTED"

 CALL WRITE_JES
 CALL WRITE_OPS

  /***************************/
  /* WRITE TO MAINT.JES2.LOG */
  /***************************/
 WRITE_JES:
 UID = SYSVAR(SYSUID)
 S1 = DATE()
 S2 = TIME()
 S3 = JUSTIFY(UID,8,' ')
 S4 = JUSTIFY(DAY,6,' ')
 OUT.="   " S1 " " S2 " USER=" ||S3|| "DAY=" || S4 || " DAILY JOB ONLOAD"
 "EXECIO 1 DISKW OPRG (STEM OUT."

 WRITE_OPS:
 UID = SYSVAR(SYSUID)
 S1 = DATE()
 S2 = TIME()
 S3 = JUSTIFY(UID,8,' ')
 S4 = JUSTIFY(DAY,6,' ')
 OUT.="   " S1 " " S2 " USER=" ||S3|| "DAY=" || S4 || " DAILY JOB ONLOAD"
 "EXECIO 1 DISKW OOPS (STEM OUT."
 CALL KLAAR1

KLAAR1:
"EXECIO 0 DISKW OPRG (FINIS"
"FREE FI(OPRG)"
"EXECIO 0 DISKW OOPS (FINIS"
"FREE FI(OOPS)"
 DEL = '"DEL ' || UID || '.ONJCL"'
 INTERPRET DEL
EXIT
./ ADD NAME=ONLOAD2  0101-01016-01016-1428-00105-00105-00000-RACFCLS
/* REXX OM DAAGLIKSE ONLOADS TE DOEN    */

MAANDTABEL = '/0131 /0260 /0391 /04121/05152/06182/07213/08244/09;
          274/10305/11335/12366'
ARG INPUT INP2
PARSE VALUE INPUT WITH DAY
PARSE VALUE INP2  WITH JOBN
 "ALLOC DA (MAINT.JES2.LOG) F(OPRG) MOD"
 "ALLOC DA (OPS.JES2.LOG) F(OOPS) MOD"

"PROFILE NOPREFIX"
X = MSG('OFF')
UID = SYSVAR(SYSUID)
ALLOC = '"ALLOC DA(' || UID || '.ONJCL)',
        'DIR(0) DSORG(PS) RECFM(F B) LRECL(80) SP(1,0) TRACKS',
        'BLKSIZE(18534) FI(OPRT) UNIT(SYSDA)"'
DEL = '"DEL ' || UID || '.ONJCL"'
INTERPRET DEL
INTERPRET ALLOC

JDT = DATE("JULIAN")

OUT. = "//" || UID || "O JOB (1,RESYS,BAC,01),'DAILY OFFLOAD',"
CALL WRITE
OUT. = "//             CLASS=L,MSGCLASS=X,NOTIFY=" || UID || ""
CALL WRITE
OUT. = "//*"
CALL WRITE
OUT. = "//STEP01  EXEC PGM=CMD@WAIT,PARM='00000100'  "
CALL WRITE
OUT. = "//SYSPRINT DD *                     "
CALL WRITE
OUT. = "//SYSIN    DD *                     "
CALL WRITE
OUT. = "  $POFF1.ST                         "
CALL WRITE
OUT. = "  $POFF1.SR                         "
CALL WRITE
OUT. = "  $POFFLOAD1                        "
CALL WRITE
IF JOBN = "" THEN
  OUT. = "  $TOFF1.SR,RANGE=S1-32767          "
ELSE
  OUT. = "  $TOFF1.SR,RANGE=S"JOBN"           "
CALL WRITE
OUT. = "  $TOFFLOAD1,DSN=TAPES.OFFLOAD.STC." || DAY || " "
CALL WRITE
OUT. = "  $SOFF1.SR                         "
CALL WRITE
OUT. = "  $SOFFLOAD1,TYPE=RECEIVE           "
CALL WRITE
OUT. = "/*                                  "

CALL WRITE
CALL KLAAR

/**********************/
/*** WRITE USERID JCL */
/**********************/

WRITE:
 "EXECIO 1 DISKW OPRT (STEM OUT."
RETURN

KLAAR:
 "EXECIO 0 DISKW OPRT (FINIS"
 "FREE FI(OPRT)"
  SUB = '"SUB ' || UID || '.ONJCL"'
  INTERPRET SUB
SAY "JOB " || UID || "O"
SAY "BEEN SUBMITTED"

 CALL WRITE_JES
 CALL WRITE_OPS

  /***************************/
  /* WRITE TO MAINT.JES2.LOG */
  /***************************/
 WRITE_JES:
 UID = SYSVAR(SYSUID)
 S1 = DATE()
 S2 = TIME()
 S3 = JUSTIFY(UID,8,' ')
 S4 = JUSTIFY(DAY,6,' ')
 OUT.="   " S1 " " S2 " USER=" ||S3|| "DAY=" || S4 || " DAILY STC ONLOAD"
 "EXECIO 1 DISKW OPRG (STEM OUT."

 WRITE_OPS:
 UID = SYSVAR(SYSUID)
 S1 = DATE()
 S2 = TIME()
 S3 = JUSTIFY(UID,8,' ')
 S4 = JUSTIFY(DAY,6,' ')
 OUT.="   " S1 " " S2 " USER=" ||S3|| "DAY=" || S4 || " DAILY STC ONLOAD"
 "EXECIO 1 DISKW OOPS (STEM OUT."
 CALL KLAAR1

KLAAR1:
"EXECIO 0 DISKW OPRG (FINIS"
"FREE FI(OPRG)"
"EXECIO 0 DISKW OOPS (FINIS"
"FREE FI(OOPS)"
 DEL = '"DEL ' || UID || '.ONJCL"'
 INTERPRET DEL
EXIT
./ ADD NAME=ONLOAD3  0101-01016-01016-1428-00137-00137-00000-RACFCLS
/* REXX OM DAAGLIKSE ONLOADS TE DOEN    */


GGG.01 = 00
GGG.02 = 31
GGG.03 = 59
GGG.04 = 90
GGG.05 = 120
GGG.06 = 151
GGG.07 = 181
GGG.08 = 212
GGG.09 = 243
GGG.10 = 273
GGG.11 = 304
GGG.12 = 334


ARG INPUT

PARSE VALUE INPUT WITH JNUM ':' XX
YY = SUBSTR(XX,1,2)
MM = SUBSTR(XX,3,2)
DD = SUBSTR(XX,5,2)

 "ALLOC DA (MAINT.JES2.LOG) F(OPRG) MOD"
 "ALLOC DA (OPS.JES2.LOG) F(OOPS) MOD"

"PROFILE NOPREFIX"
X = MSG('OFF')
UID = SYSVAR(SYSUID)
ALLOC = '"ALLOC DA(' || UID || '.ONJCL)',
        'DIR(0) DSORG(PS) RECFM(F B) LRECL(80) SP(1,0) TRACKS',
        'BLKSIZE(18400) FI(OPRT) UNIT(SYSDA)"'
DEL = '"DEL ' || UID || '.ONJCL"'
INTERPRET DEL
INTERPRET ALLOC

DATE = YY || MM || DD

YEAR  = SUBSTR(DATE,1,2)
MONTH = SUBSTR(DATE,3,2)
DAY   = SUBSTR(DATE,5,2)


JDATE = GGG.MM + DAY


IF ((YY // 4 = 0) & (MM >= 2)) THEN JDATE = JDATE + 1


IF LENGTH(JDATE) < 3 THEN JDATE = '0' || JDATE

IF LENGTH(JDATE) < 3 THEN JDATE = '0' || JDATE

JDT = YEAR||JDATE

SAY JDT
OUT. = "//" || UID || "O JOB (1,RESYS,BAC,01),'DAILY OFFLOAD',"
CALL WRITE
OUT. = "//             CLASS=L,MSGCLASS=X,NOTIFY=" || UID || ""
CALL WRITE
OUT. = "//*"
CALL WRITE
OUT. = "//STEP01  EXEC PGM=CMD@WAIT,PARM='00000100'  "
CALL WRITE
OUT. = "//SYSPRINT DD *                     "
CALL WRITE
OUT. = "//SYSIN    DD *                     "
CALL WRITE
OUT. = "  $POFF1.JT,OFF1.JT                 "
CALL WRITE
OUT. = "  $POFF1.SR                         "
CALL WRITE
OUT. = "  $POFFLOAD1                        "
CALL WRITE
OUT. = "  $TOFF1.SR,RANGE=J" || JNUM || " "
CALL WRITE
OUT. = "  $TOFFLOAD1,DSN=TAPES.OFFLOAD.JOB.J"JNUM".D"JDT""
CALL WRITE
OUT. = "  $SOFF1.SR                         "
CALL WRITE
OUT. = "  $SOFFLOAD1,TYPE=RECEIVE           "
CALL WRITE
OUT. = "/*                                  "

CALL WRITE
CALL KLAAR

/**********************/
/*** WRITE USERID JCL */
/**********************/

WRITE:
 "EXECIO 1 DISKW OPRT (STEM OUT."
RETURN

KLAAR:
 "EXECIO 0 DISKW OPRT (FINIS"
 "FREE FI(OPRT)"
  SUB = '"SUB ' || UID || '.ONJCL"'
INTERPRET SUB
SAY "JOB " || UID || "O"
SAY "BEEN SUBMITTED"

 CALL WRITE_JES
 CALL WRITE_OPS

  /***************************/
  /* WRITE TO MAINT.JES2.LOG */
  /***************************/
 WRITE_JES:
 UID = SYSVAR(SYSUID)
 S1 = DATE()
 S2 = TIME()
 S3 = JUSTIFY(UID,8,' ')
 S4 = JUSTIFY(JNUM,6,' ')
 OUT.="   " S1 " " S2 " USER=" ||S3|| "JOB=" || S4 || " SPECIFIC JOB ONLOAD"
 "EXECIO 1 DISKW OPRG (STEM OUT."

 WRITE_OPS:
 UID = SYSVAR(SYSUID)
 S1 = DATE()
 S2 = TIME()
 S3 = JUSTIFY(UID,8,' ')
 S4 = JUSTIFY(JNUM,6,' ')
 OUT.="   " S1 " " S2 " USER=" ||S3|| "JOB=" || S4 || " SPECIFIC JOB ONLOAD"
 "EXECIO 1 DISKW OOPS (STEM OUT."
 CALL KLAAR1

KLAAR1:
"EXECIO 0 DISKW OPRG (FINIS"
"FREE FI(OPRG)"
"EXECIO 0 DISKW OOPS (FINIS"
"FREE FI(OOPS)"
 DEL = '"DEL ' || UID || '.ONJCL"'
INTERPRET DEL
EXIT
./ ADD NAME=ONLOAD4  0101-01016-01016-1428-00136-00136-00000-RACFCLS
/* REXX OM DAAGLIKSE ONLOADS TE DOEN    */


MMM.01 = 01
MMM.02 = 31
MMM.03 = 59
MMM.04 = 90
MMM.05 = 120
MMM.06 = 151
MMM.07 = 181
MMM.08 = 212
MMM.09 = 243
MMM.10 = 273
MMM.11 = 304
MMM.12 = 334



ARG INPUT
PARSE VALUE INPUT WITH SNUM ':' DD ':' MM ':' YY
 "ALLOC DA (MAINT.JES2.LOG) F(OPRG) MOD"
 "ALLOC DA (OPS.JES2.LOG) F(OOPS) MOD"

"PROFILE NOPREFIX"
X = MSG('OFF')
UID = SYSVAR(SYSUID)
ALLOC = '"ALLOC DA(' || UID || '.ONJCL)',
        'DIR(0) DSORG(PS) RECFM(F B) LRECL(80) SP(1,0) TRACKS',
        'BLKSIZE(18534) FI(OPRT) UNIT(SYSDA)"'
DEL = '"DEL ' || UID || '.ONJCL"'
INTERPRET DEL
INTERPRET ALLOC

DATE = DD"/" || MM"/" || YY

DAY   = SUBSTR(DATE,1,2)
MONTH = SUBSTR(DATE,3,3)
MM    = SUBSTR(DATE,4,2)
YEAR  = SUBSTR(DATE,7,2)


IF (YEAR // 4 = 0) & (MM > 2) THEN
   JDATE =  ((MMM.MM + 1) + DAY)
ELSE
   JDATE =  MMM.MM + DAY
IF LENGTH(JDATE) < 3 THEN JDATE = '0' || JDATE

IF MM=01 THEN
DO
 IF LENGTH(DAY) < 3 THEN DAY = '0' || DAY
   JDT = YEAR||DAY
END
ELSE
   JDT = YEAR||JDATE


OUT. = "//" || UID || "O JOB (1,RESYS,BAC,01),'DAILY OFFLOAD',"
CALL WRITE
OUT. = "//             CLASS=L,MSGCLASS=X,NOTIFY=" || UID || ""
CALL WRITE
OUT. = "//*"
CALL WRITE
OUT. = "//STEP01  EXEC PGM=CMD@WAIT,PARM='00000100'  "
CALL WRITE
OUT. = "//SYSPRINT DD *                     "
CALL WRITE
OUT. = "//SYSIN    DD *                     "
CALL WRITE
OUT. = "  $POFF1.ST,OFF1.JT                 "
CALL WRITE
OUT. = "  $POFF1.SR                         "
CALL WRITE
OUT. = "  $POFFLOAD1                        "
CALL WRITE
OUT. = "  $TOFF1.SR,RANGE=S" || SNUM || " "
CALL WRITE
OUT. = "  $TOFFLOAD1,DSN=TAPES.OFFLOAD.STC.S"SNUM".D"JDT""
CALL WRITE
OUT. = "  $SOFF1.SR                         "
CALL WRITE
OUT. = "  $SOFFLOAD1,TYPE=RECEIVE           "
CALL WRITE
OUT. = "/*                                  "

CALL WRITE
CALL KLAAR

/**********************/
/*** WRITE USERID JCL */
/**********************/

WRITE:
 "EXECIO 1 DISKW OPRT (STEM OUT."
RETURN

KLAAR:
 "EXECIO 0 DISKW OPRT (FINIS"
 "FREE FI(OPRT)"
  SUB = '"SUB ' || UID || '.ONJCL"'
  INTERPRET SUB
SAY "JOB " || UID || "O"
SAY "BEEN SUBMITTED"

 CALL WRITE_JES
 CALL WRITE_OPS

  /***************************/
  /* WRITE TO MAINT.JES2.LOG */
  /***************************/
 WRITE_JES:
 UID = SYSVAR(SYSUID)
 S1 = DATE()
 S2 = TIME()
 S3 = JUSTIFY(UID,8,' ')
 S4 = JUSTIFY(SNUM,6,' ')
 OUT.="   " S1 " " S2 " USER=" ||S3|| "STC=" || S4 || " SPECIFIC STC ONLOAD"
 "EXECIO 1 DISKW OPRG (STEM OUT."

 WRITE_OPS:
 UID = SYSVAR(SYSUID)
 S1 = DATE()
 S2 = TIME()
 S3 = JUSTIFY(UID,8,' ')
 S4 = JUSTIFY(SNUM,6,' ')
 OUT.="   " S1 " " S2 " USER=" ||S3|| "STC=" || S4 || " SPECIFIC STC ONLOAD"
 "EXECIO 1 DISKW OOPS (STEM OUT."
 CALL KLAAR1

KLAAR1:
"EXECIO 0 DISKW OPRG (FINIS"
"FREE FI(OPRG)"
"EXECIO 0 DISKW OOPS (FINIS"
"FREE FI(OOPS)"
 DEL = '"DEL ' || UID || '.ONJCL"'
 INTERPRET DEL
EXIT
./ ADD NAME=ONLOAD5  0101-01016-01016-1428-00105-00105-00000-RACFCLS
/* REXX OM DAAGLIKSE ONLOADS TE DOEN    */

MAANDTABEL = '/0131 /0260 /0391 /04121/05152/06182/07213/08244/09;
          274/10305/11335/12366'
ARG INPUT INP2
PARSE VALUE INPUT WITH DAY
PARSE VALUE INP2  WITH JOBN
 "ALLOC DA (MAINT.JES2.LOG) F(OPRG) MOD"
 "ALLOC DA (OPS.JES2.LOG) F(OOPS) MOD"

"PROFILE NOPREFIX"
X = MSG('OFF')
UID = SYSVAR(SYSUID)
ALLOC = '"ALLOC DA(' || UID || '.ONJCL)',
        'DIR(0) DSORG(PS) RECFM(F B) LRECL(80) SP(1,0) TRACKS',
        'BLKSIZE(18534) FI(OPRT) UNIT(SYSDA)"'
DEL = '"DEL ' || UID || '.ONJCL"'
INTERPRET DEL
INTERPRET ALLOC

JDT = DATE("JULIAN")

OUT. = "//" || UID || "O JOB (1,RESYS,BAC,01),'DAILY OFFLOAD',"
CALL WRITE
OUT. = "//             CLASS=L,MSGCLASS=X,NOTIFY=" || UID || ""
CALL WRITE
OUT. = "//*"
CALL WRITE
OUT. = "//STEP01  EXEC PGM=CMD@WAIT,PARM='00000100'  "
CALL WRITE
OUT. = "//SYSPRINT DD *                     "
CALL WRITE
OUT. = "//SYSIN    DD *                     "
CALL WRITE
OUT. = "  $POFF1.JT                         "
CALL WRITE
OUT. = "  $POFF1.JR                         "
CALL WRITE
OUT. = "  $POFFLOAD1                        "
CALL WRITE
IF JOBN = "" THEN
  OUT. = "  $TOFF1.JR,RANGE=J1-32767          "
ELSE
  OUT. = "  $TOFF1.JR,RANGE=J"JOBN"           "
CALL WRITE
OUT. = "  $TOFFLOAD1,DSN=TAPES.OFFLOAD.JOB." || DAY || " "
CALL WRITE
OUT. = "  $SOFF1.JR                         "
CALL WRITE
OUT. = "  $SOFFLOAD1,TYPE=RECEIVE           "
CALL WRITE
OUT. = "/*                                  "

CALL WRITE
CALL KLAAR

/**********************/
/*** WRITE USERID JCL */
/**********************/

WRITE:
 "EXECIO 1 DISKW OPRT (STEM OUT."
RETURN

KLAAR:
 "EXECIO 0 DISKW OPRT (FINIS"
 "FREE FI(OPRT)"
  SUB = '"SUB ' || UID || '.ONJCL"'
  INTERPRET SUB
SAY "JOB " || UID || "O"
SAY "BEEN SUBMITTED"

 CALL WRITE_JES
 CALL WRITE_OPS

  /***************************/
  /* WRITE TO MAINT.JES2.LOG */
  /***************************/
 WRITE_JES:
 UID = SYSVAR(SYSUID)
 S1 = DATE()
 S2 = TIME()
 S3 = JUSTIFY(UID,8,' ')
 S4 = JUSTIFY(DAY,6,' ')
 OUT.="   " S1 " " S2 " USER=" ||S3|| "DAY=" || S4 || " DAILY JOB ONLOAD"
 "EXECIO 1 DISKW OPRG (STEM OUT."

 WRITE_OPS:
 UID = SYSVAR(SYSUID)
 S1 = DATE()
 S2 = TIME()
 S3 = JUSTIFY(UID,8,' ')
 S4 = JUSTIFY(DAY,6,' ')
 OUT.="   " S1 " " S2 " USER=" ||S3|| "DAY=" || S4 || " DAILY JOB ONLOAD"
 "EXECIO 1 DISKW OOPS (STEM OUT."
 CALL KLAAR1

KLAAR1:
"EXECIO 0 DISKW OPRG (FINIS"
"FREE FI(OPRG)"
"EXECIO 0 DISKW OOPS (FINIS"
"FREE FI(OOPS)"
 DEL = '"DEL ' || UID || '.ONJCL"'
 INTERPRET DEL
EXIT
./ ADD NAME=ONSPES   0101-01016-01016-1428-00133-00133-00000-RACFCLS
/* REXX OM DAAGLIKSE OFFLOADS TE DOEN    */


MMM.01 = 01
MMM.02 = 31
MMM.03 = 59
MMM.04 = 90
MMM.05 = 120
MMM.06 = 151
MMM.07 = 181
MMM.08 = 212
MMM.09 = 243
MMM.10 = 273
MMM.11 = 304
MMM.12 = 334



ARG INPUT
PARSE VALUE INPUT WITH JNUM ':' DD ':' MM ':' YY
 "ALLOC DA (MAINT.JES2.LOG) F(OPRG) MOD"
 "ALLOC DA (OPS.JES2.LOG) F(OOPS) MOD"

"PROFILE NOPREFIX"
X = MSG('OFF')
UID = SYSVAR(SYSUID)
ALLOC = '"ALLOC DA(' || UID || '.ONJCL)',
        'DIR(0) DSORG(PS) RECFM(F B) LRECL(80) SP(1,0) TRACKS',
        'BLKSIZE(18534) FI(OPRT) UNIT(SYSDA)"'
DEL = '"DEL ' || UID || '.ONJCL"'
INTERPRET DEL
INTERPRET ALLOC

DATE = DD"/" || MM"/" || YY

DAY   = SUBSTR(DATE,1,2)
MONTH = SUBSTR(DATE,3,3)
MM    = SUBSTR(DATE,4,2)
YEAR  = SUBSTR(DATE,7,2)


IF (YEAR//4 /= 0) & (MM > 2) THEN
   JDATE =  MMM.MM - 1 + DAY
ELSE
   JDATE =  MMM.MM + DAY
IF LENGTH(JDATE) < 3 THEN JDATE = '0' || JDATE

IF MM=01 THEN
DO
 IF LENGTH(DAY) < 3 THEN DAY = '0' || DAY
   JDT = YEAR||DAY
END
ELSE
   JDT = YEAR||JDATE

OUT. = "//" || UID || "O JOB (1,RESYS,BAC,01),'DAILY OFFLOAD',"
CALL WRITE
OUT. = "//             CLASS=L,MSGCLASS=X,NOTIFY=" || UID || ""
CALL WRITE
OUT. = "//*"
CALL WRITE
OUT. = "//STEP01  EXEC PGM=CMD@WAIT,PARM='00000100'  "
CALL WRITE
OUT. = "//SYSPRINT DD *                     "
CALL WRITE
OUT. = "//SYSIN    DD *                     "
CALL WRITE
OUT. = "  $POFF1.ST,OFF1.JT                 "
CALL WRITE
OUT. = "  $POFF1.SR                         "
CALL WRITE
OUT. = "  $POFFLOAD1                        "
CALL WRITE
OUT. = "  $TOFF1.SR,RANGE=J" || JNUM || " "
CALL WRITE
OUT. = "  $TOFFLOAD1,DSN=DLY.PRDB.OFFLOAD.JOB.J" || JNUM || ".D" || JDT || ""
CALL WRITE
OUT. = "  $SOFF1.SR                         "
CALL WRITE
OUT. = "  $SOFFLOAD1,TYPE=RECEIVE           "
CALL WRITE
OUT. = "/*                                  "

CALL WRITE
CALL KLAAR

/**********************/
/*** WRITE USERID JCL */
/**********************/

WRITE:
 "EXECIO 1 DISKW OPRT (STEM OUT."
RETURN

KLAAR:
 "EXECIO 0 DISKW OPRT (FINIS"
 "FREE FI(OPRT)"
  SUB = '"SUB ' || UID || '.ONJCL"'
  INTERPRET SUB
SAY "JOB " || UID || "O"
SAY "BEEN SUBMITTED"

 CALL WRITE_JES
 CALL WRITE_OPS

  /***************************/
  /* WRITE TO MAINT.JES2.LOG */
  /***************************/
 WRITE_JES:
 UID = SYSVAR(SYSUID)
 S1 = DATE()
 S2 = TIME()
 S3 = JUSTIFY(UID,8,' ')
 S4 = JUSTIFY(JNUM,6,' ')
 OUT.="   " S1 " " S2 " USER=" ||S3|| "JOB=" || S4 || " SPECIFIC JOB ONLOAD"
 "EXECIO 1 DISKW OPRG (STEM OUT."

 WRITE_OPS:
 UID = SYSVAR(SYSUID)
 S1 = DATE()
 S2 = TIME()
 S3 = JUSTIFY(UID,8,' ')
 S4 = JUSTIFY(JNUM,6,' ')
 OUT.="   " S1 " " S2 " USER=" ||S3|| "JOB=" || S4 || " SPECIFIC JOB ONLOAD"
 "EXECIO 1 DISKW OOPS (STEM OUT."
 CALL KLAAR1

KLAAR1:
"EXECIO 0 DISKW OPRG (FINIS"
"FREE FI(OPRG)"
"EXECIO 0 DISKW OOPS (FINIS"
"FREE FI(OOPS)"
EXIT
./ ADD NAME=ON1      0101-01016-01016-1428-00106-00106-00000-RACFCLS
/* REXX OM DAAGLIKSE ONLOADS TE DOEN    */

MAANDTABEL = '/0131 /0260 /0391 /04121/05152/06182/07213/08244/09;
          274/10305/11335/12366'
ARG INPUT INP2
PARSE VALUE INPUT WITH DAY
PARSE VALUE INP2  WITH JOBN
 "ALLOC DA (MAINT.JES2.LOG) F(OPRG) MOD"
 "ALLOC DA (OPS.JES2.LOG) F(OOPS) MOD"

"PROFILE NOPREFIX"
X = MSG('OFF')
UID = SYSVAR(SYSUID)
ALLOC = '"ALLOC DA(' || UID || '.ONJCL)',
        'DIR(0) DSORG(PS) RECFM(F B) LRECL(80) SP(1,0) TRACKS',
        'BLKSIZE(18534) FI(OPRT) UNIT(SYSDA)"'
FDP = '&SYSNAME.'
DEL = '"DEL ' || UID || '.ONJCL"'
INTERPRET DEL
INTERPRET ALLOC

JDT = DATE("JULIAN")

OUT. = "//" || UID || "O JOB (1,RESYS,BAC,01),'DAILY OFFLOAD',"
CALL WRITE
OUT. = "//             CLASS=L,MSGCLASS=X,NOTIFY=" || UID || ""
CALL WRITE
OUT. = "//*"
CALL WRITE
OUT. = "//STEP01  EXEC PGM=CMD@WAIT,PARM='00000100'  "
CALL WRITE
OUT. = "//SYSPRINT DD *                     "
CALL WRITE
OUT. = "//SYSIN    DD *                     "
CALL WRITE
OUT. = "  $POFF1.ST                         "
CALL WRITE
OUT. = "  $POFF1.SR                         "
CALL WRITE
OUT. = "  $POFFLOAD1                        "
CALL WRITE
IF JOBN = "" THEN
  OUT. = "  $TOFF1.SR,RANGE=J1-32767          "
ELSE
  OUT. = "  $TOFF1.SR,RANGE=J"JOBN"           "
CALL WRITE
OUT. = "  $TOFFLOAD1,DSN=TAPES." || FDP|| ".OFFLOAD.JOB." || DAY || " "
CALL WRITE
OUT. = "  $SOFF1.SR                         "
CALL WRITE
OUT. = "  $SOFFLOAD1,TYPE=RECEIVE           "
CALL WRITE
OUT. = "/*                                  "

CALL WRITE
CALL KLAAR

/**********************/
/*** WRITE USERID JCL */
/**********************/

WRITE:
 "EXECIO 1 DISKW OPRT (STEM OUT."
RETURN

KLAAR:
 "EXECIO 0 DISKW OPRT (FINIS"
 "FREE FI(OPRT)"
  SUB = '"SUB ' || UID || '.ONJCL"'
  INTERPRET SUB
SAY "JOB " || UID || "O"
SAY "BEEN SUBMITTED"

 CALL WRITE_JES
 CALL WRITE_OPS

  /***************************/
  /* WRITE TO MAINT.JES2.LOG */
  /***************************/
 WRITE_JES:
 UID = SYSVAR(SYSUID)
 S1 = DATE()
 S2 = TIME()
 S3 = JUSTIFY(UID,8,' ')
 S4 = JUSTIFY(DAY,6,' ')
 OUT.="   " S1 " " S2 " USER=" ||S3|| "DAY=" || S4 || " DAILY JOB ONLOAD"
 "EXECIO 1 DISKW OPRG (STEM OUT."

 WRITE_OPS:
 UID = SYSVAR(SYSUID)
 S1 = DATE()
 S2 = TIME()
 S3 = JUSTIFY(UID,8,' ')
 S4 = JUSTIFY(DAY,6,' ')
 OUT.="   " S1 " " S2 " USER=" ||S3|| "DAY=" || S4 || " DAILY JOB ONLOAD"
 "EXECIO 1 DISKW OOPS (STEM OUT."
 CALL KLAAR1

KLAAR1:
"EXECIO 0 DISKW OPRG (FINIS"
"FREE FI(OPRG)"
"EXECIO 0 DISKW OOPS (FINIS"
"FREE FI(OOPS)"
 DEL = '"DEL ' || UID || '.ONJCL"'
 INTERPRET DEL
EXIT
./ ADD NAME=ON2      0101-01016-01016-1428-00106-00106-00000-RACFCLS
/* REXX OM DAAGLIKSE ONLOADS TE DOEN    */

MAANDTABEL = '/0131 /0260 /0391 /04121/05152/06182/07213/08244/09;
          274/10305/11335/12366'
ARG INPUT INP2
PARSE VALUE INPUT WITH DAY
PARSE VALUE INP2  WITH JOBN
 "ALLOC DA (MAINT.JES2.LOG) F(OPRG) MOD"
 "ALLOC DA (OPS.JES2.LOG) F(OOPS) MOD"

"PROFILE NOPREFIX"
X = MSG('OFF')
UID = SYSVAR(SYSUID)
ALLOC = '"ALLOC DA(' || UID || '.ONJCL)',
        'DIR(0) DSORG(PS) RECFM(F B) LRECL(80) SP(1,0) TRACKS',
        'BLKSIZE(18534) FI(OPRT) UNIT(SYSDA)"'
FDP = '&SYSNAME.'
DEL = '"DEL ' || UID || '.ONJCL"'
INTERPRET DEL
INTERPRET ALLOC

JDT = DATE("JULIAN")

OUT. = "//" || UID || "O JOB (1,RESYS,BAC,01),'DAILY OFFLOAD',"
CALL WRITE
OUT. = "//             CLASS=L,MSGCLASS=X,NOTIFY=" || UID || ""
CALL WRITE
OUT. = "//*"
CALL WRITE
OUT. = "//STEP01  EXEC PGM=CMD@WAIT,PARM='00000100'  "
CALL WRITE
OUT. = "//SYSPRINT DD *                     "
CALL WRITE
OUT. = "//SYSIN    DD *                     "
CALL WRITE
OUT. = "  $POFF1.ST                         "
CALL WRITE
OUT. = "  $POFF1.SR                         "
CALL WRITE
OUT. = "  $POFFLOAD1                        "
CALL WRITE
IF JOBN = "" THEN
  OUT. = "  $TOFF1.SR,RANGE=S1-32767          "
ELSE
  OUT. = "  $TOFF1.SR,RANGE=S"JOBN"           "
CALL WRITE
OUT. = "  $TOFFLOAD1,DSN=TAPES." || FDP|| ".OFFLOAD.STC." || DAY || " "
CALL WRITE
OUT. = "  $SOFF1.SR                         "
CALL WRITE
OUT. = "  $SOFFLOAD1,TYPE=RECEIVE           "
CALL WRITE
OUT. = "/*                                  "

CALL WRITE
CALL KLAAR

/**********************/
/*** WRITE USERID JCL */
/**********************/

WRITE:
 "EXECIO 1 DISKW OPRT (STEM OUT."
RETURN

KLAAR:
 "EXECIO 0 DISKW OPRT (FINIS"
 "FREE FI(OPRT)"
  SUB = '"SUB ' || UID || '.ONJCL"'
  INTERPRET SUB
SAY "JOB " || UID || "O"
SAY "BEEN SUBMITTED"

 CALL WRITE_JES
 CALL WRITE_OPS

  /***************************/
  /* WRITE TO MAINT.JES2.LOG */
  /***************************/
 WRITE_JES:
 UID = SYSVAR(SYSUID)
 S1 = DATE()
 S2 = TIME()
 S3 = JUSTIFY(UID,8,' ')
 S4 = JUSTIFY(DAY,6,' ')
 OUT.="   " S1 " " S2 " USER=" ||S3|| "DAY=" || S4 || " DAILY STC ONLOAD"
 "EXECIO 1 DISKW OPRG (STEM OUT."

 WRITE_OPS:
 UID = SYSVAR(SYSUID)
 S1 = DATE()
 S2 = TIME()
 S3 = JUSTIFY(UID,8,' ')
 S4 = JUSTIFY(DAY,6,' ')
 OUT.="   " S1 " " S2 " USER=" ||S3|| "DAY=" || S4 || " DAILY STC ONLOAD"
 "EXECIO 1 DISKW OOPS (STEM OUT."
 CALL KLAAR1

KLAAR1:
"EXECIO 0 DISKW OPRG (FINIS"
"FREE FI(OPRG)"
"EXECIO 0 DISKW OOPS (FINIS"
"FREE FI(OOPS)"
 DEL = '"DEL ' || UID || '.ONJCL"'
 INTERPRET DEL
EXIT
./ ADD NAME=ON3      0101-01016-01016-1428-00138-00138-00000-RACFCLS
/* REXX OM DAAGLIKSE ONLOADS TE DOEN    */


GGG.01 = 00
GGG.02 = 31
GGG.03 = 59
GGG.04 = 90
GGG.05 = 120
GGG.06 = 151
GGG.07 = 180
GGG.08 = 212
GGG.09 = 243
GGG.10 = 273
GGG.11 = 304
GGG.12 = 334


ARG INPUT

PARSE VALUE INPUT WITH JNUM ':' XX
YY = SUBSTR(XX,1,2)
MM = SUBSTR(XX,3,2)
DD = SUBSTR(XX,5,2)

 "ALLOC DA (MAINT.JES2.LOG) F(OPRG) MOD"
 "ALLOC DA (OPS.JES2.LOG) F(OOPS) MOD"

"PROFILE NOPREFIX"
X = MSG('OFF')
UID = SYSVAR(SYSUID)
ALLOC = '"ALLOC DA(' || UID || '.ONJCL)',
        'DIR(0) DSORG(PS) RECFM(F B) LRECL(80) SP(1,0) TRACKS',
        'BLKSIZE(18400) FI(OPRT) UNIT(SYSDA)"'
FDP = '&SYSNAME.'
DEL = '"DEL ' || UID || '.ONJCL"'
INTERPRET DEL
INTERPRET ALLOC

DATE = YY || MM || DD

YEAR  = SUBSTR(DATE,1,2)
MONTH = SUBSTR(DATE,3,2)
DAY   = SUBSTR(DATE,5,2)


JDATE = GGG.MM + DAY


IF ((YY // 4 = 0) & (MM >= 2)) THEN JDATE = JDATE + 1


IF LENGTH(JDATE) < 3 THEN JDATE = '0' || JDATE

IF LENGTH(JDATE) < 3 THEN JDATE = '0' || JDATE

JDT = YEAR||JDATE

SAY JDT
OUT. = "//" || UID || "O JOB (1,RESYS,BAC,01),'DAILY OFFLOAD',"
CALL WRITE
OUT. = "//             CLASS=L,MSGCLASS=X,NOTIFY=" || UID || ""
CALL WRITE
OUT. = "//*"
CALL WRITE
OUT. = "//STEP01  EXEC PGM=CMD@WAIT,PARM='00000100'  "
CALL WRITE
OUT. = "//SYSPRINT DD *                     "
CALL WRITE
OUT. = "//SYSIN    DD *                     "
CALL WRITE
OUT. = "  $POFF1.JT,OFF1.JT                 "
CALL WRITE
OUT. = "  $POFF1.SR                         "
CALL WRITE
OUT. = "  $POFFLOAD1                        "
CALL WRITE
OUT. = "  $TOFF1.SR,RANGE=J" || JNUM || " "
CALL WRITE
OUT. = "  $TOFFLOAD1,DSN=TAPES."FDP".OFFLOAD.JOB.J"JNUM".D"JDT""
CALL WRITE
OUT. = "  $SOFF1.SR                         "
CALL WRITE
OUT. = "  $SOFFLOAD1,TYPE=RECEIVE           "
CALL WRITE
OUT. = "/*                                  "

CALL WRITE
CALL KLAAR

/**********************/
/*** WRITE USERID JCL */
/**********************/

WRITE:
 "EXECIO 1 DISKW OPRT (STEM OUT."
RETURN

KLAAR:
 "EXECIO 0 DISKW OPRT (FINIS"
 "FREE FI(OPRT)"
  SUB = '"SUB ' || UID || '.ONJCL"'
INTERPRET SUB
SAY "JOB " || UID || "O"
SAY "BEEN SUBMITTED"

 CALL WRITE_JES
 CALL WRITE_OPS

  /***************************/
  /* WRITE TO MAINT.JES2.LOG */
  /***************************/
 WRITE_JES:
 UID = SYSVAR(SYSUID)
 S1 = DATE()
 S2 = TIME()
 S3 = JUSTIFY(UID,8,' ')
 S4 = JUSTIFY(JNUM,6,' ')
 OUT.="   " S1 " " S2 " USER=" ||S3|| "JOB=" || S4 || " SPECIFIC JOB ONLOAD"
 "EXECIO 1 DISKW OPRG (STEM OUT."

 WRITE_OPS:
 UID = SYSVAR(SYSUID)
 S1 = DATE()
 S2 = TIME()
 S3 = JUSTIFY(UID,8,' ')
 S4 = JUSTIFY(JNUM,6,' ')
 OUT.="   " S1 " " S2 " USER=" ||S3|| "JOB=" || S4 || " SPECIFIC JOB ONLOAD"
 "EXECIO 1 DISKW OOPS (STEM OUT."
 CALL KLAAR1

KLAAR1:
"EXECIO 0 DISKW OPRG (FINIS"
"FREE FI(OPRG)"
"EXECIO 0 DISKW OOPS (FINIS"
"FREE FI(OOPS)"
 DEL = '"DEL ' || UID || '.ONJCL"'
INTERPRET DEL
EXIT
./ ADD NAME=ON4      0101-01016-01016-1428-00137-00137-00000-RACFCLS
/* REXX OM DAAGLIKSE ONLOADS TE DOEN    */


MMM.01 = 01
MMM.02 = 31
MMM.03 = 59
MMM.04 = 90
MMM.05 = 120
MMM.06 = 151
MMM.07 = 181
MMM.08 = 212
MMM.09 = 243
MMM.10 = 273
MMM.11 = 304
MMM.12 = 334



ARG INPUT
PARSE VALUE INPUT WITH SNUM ':' DD ':' MM ':' YY
 "ALLOC DA (MAINT.JES2.LOG) F(OPRG) MOD"
 "ALLOC DA (OPS.JES2.LOG) F(OOPS) MOD"

"PROFILE NOPREFIX"
X = MSG('OFF')
UID = SYSVAR(SYSUID)
ALLOC = '"ALLOC DA(' || UID || '.ONJCL)',
        'DIR(0) DSORG(PS) RECFM(F B) LRECL(80) SP(1,0) TRACKS',
        'BLKSIZE(18534) FI(OPRT) UNIT(SYSDA)"'
FDP = '&SYSNAME.'
DEL = '"DEL ' || UID || '.ONJCL"'
INTERPRET DEL
INTERPRET ALLOC

DATE = DD"/" || MM"/" || YY

DAY   = SUBSTR(DATE,1,2)
MONTH = SUBSTR(DATE,3,3)
MM    = SUBSTR(DATE,4,2)
YEAR  = SUBSTR(DATE,7,2)


IF (YEAR // 4 = 0) & (MM > 2) THEN
   JDATE =  ((MMM.MM + 1) + DAY)
ELSE
   JDATE =  MMM.MM + DAY
IF LENGTH(JDATE) < 3 THEN JDATE = '0' || JDATE

IF MM=01 THEN
DO
 IF LENGTH(DAY) < 3 THEN DAY = '0' || DAY
   JDT = YEAR||DAY
END
ELSE
   JDT = YEAR||JDATE


OUT. = "//" || UID || "O JOB (1,RESYS,BAC,01),'DAILY OFFLOAD',"
CALL WRITE
OUT. = "//             CLASS=L,MSGCLASS=X,NOTIFY=" || UID || ""
CALL WRITE
OUT. = "//*"
CALL WRITE
OUT. = "//STEP01  EXEC PGM=CMD@WAIT,PARM='00000100'  "
CALL WRITE
OUT. = "//SYSPRINT DD *                     "
CALL WRITE
OUT. = "//SYSIN    DD *                     "
CALL WRITE
OUT. = "  $POFF1.ST,OFF1.JT                 "
CALL WRITE
OUT. = "  $POFF1.SR                         "
CALL WRITE
OUT. = "  $POFFLOAD1                        "
CALL WRITE
OUT. = "  $TOFF1.SR,RANGE=S" || SNUM || " "
CALL WRITE
OUT. = "  $TOFFLOAD1,DSN=TAPES."FDP".OFFLOAD.STC.S"SNUM".D"JDT""
CALL WRITE
OUT. = "  $SOFF1.SR                         "
CALL WRITE
OUT. = "  $SOFFLOAD1,TYPE=RECEIVE           "
CALL WRITE
OUT. = "/*                                  "

CALL WRITE
CALL KLAAR

/**********************/
/*** WRITE USERID JCL */
/**********************/

WRITE:
 "EXECIO 1 DISKW OPRT (STEM OUT."
RETURN

KLAAR:
 "EXECIO 0 DISKW OPRT (FINIS"
 "FREE FI(OPRT)"
  SUB = '"SUB ' || UID || '.ONJCL"'
  INTERPRET SUB
SAY "JOB " || UID || "O"
SAY "BEEN SUBMITTED"

 CALL WRITE_JES
 CALL WRITE_OPS

  /***************************/
  /* WRITE TO MAINT.JES2.LOG */
  /***************************/
 WRITE_JES:
 UID = SYSVAR(SYSUID)
 S1 = DATE()
 S2 = TIME()
 S3 = JUSTIFY(UID,8,' ')
 S4 = JUSTIFY(SNUM,6,' ')
 OUT.="   " S1 " " S2 " USER=" ||S3|| "STC=" || S4 || " SPECIFIC STC ONLOAD"
 "EXECIO 1 DISKW OPRG (STEM OUT."

 WRITE_OPS:
 UID = SYSVAR(SYSUID)
 S1 = DATE()
 S2 = TIME()
 S3 = JUSTIFY(UID,8,' ')
 S4 = JUSTIFY(SNUM,6,' ')
 OUT.="   " S1 " " S2 " USER=" ||S3|| "STC=" || S4 || " SPECIFIC STC ONLOAD"
 "EXECIO 1 DISKW OOPS (STEM OUT."
 CALL KLAAR1

KLAAR1:
"EXECIO 0 DISKW OPRG (FINIS"
"FREE FI(OPRG)"
"EXECIO 0 DISKW OOPS (FINIS"
"FREE FI(OOPS)"
 DEL = '"DEL ' || UID || '.ONJCL"'
 INTERPRET DEL
EXIT
./ ADD NAME=ON5      0101-01016-01016-1428-00106-00106-00000-RACFCLS
/* REXX OM DAAGLIKSE ONLOADS TE DOEN    */

MAANDTABEL = '/0131 /0260 /0391 /04121/05152/06182/07213/08244/09;
          274/10305/11335/12366'
ARG INPUT INP2
PARSE VALUE INPUT WITH DAY
PARSE VALUE INP2  WITH JOBN
 "ALLOC DA (MAINT.JES2.LOG) F(OPRG) MOD"
 "ALLOC DA (OPS.JES2.LOG) F(OOPS) MOD"

"PROFILE NOPREFIX"
X = MSG('OFF')
UID = SYSVAR(SYSUID)
ALLOC = '"ALLOC DA(' || UID || '.ONJCL)',
        'DIR(0) DSORG(PS) RECFM(F B) LRECL(80) SP(1,0) TRACKS',
        'BLKSIZE(18534) FI(OPRT) UNIT(SYSDA)"'
FDP = '&SYSNAME.'
DEL = '"DEL ' || UID || '.ONJCL"'
INTERPRET DEL
INTERPRET ALLOC

JDT = DATE("JULIAN")

OUT. = "//" || UID || "O JOB (1,RESYS,BAC,01),'DAILY OFFLOAD',"
CALL WRITE
OUT. = "//             CLASS=L,MSGCLASS=X,NOTIFY=" || UID || ""
CALL WRITE
OUT. = "//*"
CALL WRITE
OUT. = "//STEP01  EXEC PGM=CMD@WAIT,PARM='00000100'  "
CALL WRITE
OUT. = "//SYSPRINT DD *                     "
CALL WRITE
OUT. = "//SYSIN    DD *                     "
CALL WRITE
OUT. = "  $POFF1.JT                         "
CALL WRITE
OUT. = "  $POFF1.JR                         "
CALL WRITE
OUT. = "  $POFFLOAD1                        "
CALL WRITE
IF JOBN = "" THEN
  OUT. = "  $TOFF1.JR,RANGE=J1-32767          "
ELSE
  OUT. = "  $TOFF1.JR,RANGE=J"JOBN"           "
CALL WRITE
OUT. = "  $TOFFLOAD1,DSN=TAPES." || FDP || ".OFFLOAD.JOB." || DAY || " "
CALL WRITE
OUT. = "  $SOFF1.JR                         "
CALL WRITE
OUT. = "  $SOFFLOAD1,TYPE=RECEIVE           "
CALL WRITE
OUT. = "/*                                  "

CALL WRITE
CALL KLAAR

/**********************/
/*** WRITE USERID JCL */
/**********************/

WRITE:
 "EXECIO 1 DISKW OPRT (STEM OUT."
RETURN

KLAAR:
 "EXECIO 0 DISKW OPRT (FINIS"
 "FREE FI(OPRT)"
  SUB = '"SUB ' || UID || '.ONJCL"'
  INTERPRET SUB
SAY "JOB " || UID || "O"
SAY "BEEN SUBMITTED"

 CALL WRITE_JES
 CALL WRITE_OPS

  /***************************/
  /* WRITE TO MAINT.JES2.LOG */
  /***************************/
 WRITE_JES:
 UID = SYSVAR(SYSUID)
 S1 = DATE()
 S2 = TIME()
 S3 = JUSTIFY(UID,8,' ')
 S4 = JUSTIFY(DAY,6,' ')
 OUT.="   " S1 " " S2 " USER=" ||S3|| "DAY=" || S4 || " DAILY JOB ONLOAD"
 "EXECIO 1 DISKW OPRG (STEM OUT."

 WRITE_OPS:
 UID = SYSVAR(SYSUID)
 S1 = DATE()
 S2 = TIME()
 S3 = JUSTIFY(UID,8,' ')
 S4 = JUSTIFY(DAY,6,' ')
 OUT.="   " S1 " " S2 " USER=" ||S3|| "DAY=" || S4 || " DAILY JOB ONLOAD"
 "EXECIO 1 DISKW OOPS (STEM OUT."
 CALL KLAAR1

KLAAR1:
"EXECIO 0 DISKW OPRG (FINIS"
"FREE FI(OPRG)"
"EXECIO 0 DISKW OOPS (FINIS"
"FREE FI(OOPS)"
 DEL = '"DEL ' || UID || '.ONJCL"'
 INTERPRET DEL
EXIT
./ ADD NAME=OPERMAIN 0101-01016-01016-1428-00021-00021-00000-RACFCLS
PROC 0
/*   PUSH DOWN THE CURRENT ISPF DISPLAY AND STACK ANOTHER ON TOP   */
SET ID = &SUBSTR(1:3,&SYSUID)
IF &ID NE OPS THEN +
DO
 WRITE ACCESS DENIED
 WRITE YOU ARE NOT AUTHORIZED TO USE THIS FUNCTION
 EXIT
END
ISPEXEC CONTROL DISPLAY SAVE
ISPEXEC CONTROL ERRORS RETURN
ISPEXEC SELECT PANEL(ISP@OPS) NEWAPPL(ISR)
IF &LASTCC GT 4 THEN DO
   ISPEXEC VGET (&ZERRMSG)
   ISPEXEC GETMSG MSG(&ZERRMSG) SHORTMSG(MSG1) LONGMSG(MSG2)
   WRITE CLIST NEXTISPF FAILED BECAUSE &MSG2
END
/*   EXIT THE CURRENT ISPF DISPLAY AND POP THE PREVIOUS ONE          */
ISPEXEC CONTROL ERRORS
ISPEXEC CONTROL DISPLAY RESTORE
EXIT
./ ADD NAME=OPERSPF  0101-01016-01016-1428-00021-00021-00000-RACFCLS
PROC 0
/*   PUSH DOWN THE CURRENT ISPF DISPLAY AND STACK ANOTHER ON TOP   */
SET ID = &SUBSTR(1:3,&SYSUID)
IF &ID NE OPS THEN +
DO
 WRITE ACCESS DENIED
 WRITE YOU ARE NOT AUTHORIZED TO USE THIS FUNCTION
 EXIT
END
ISPEXEC CONTROL DISPLAY SAVE
ISPEXEC CONTROL ERRORS RETURN
ISPEXEC SELECT PANEL(ISP@OPS2) NEWAPPL(ISR)
IF &LASTCC GT 4 THEN DO
   ISPEXEC VGET (&ZERRMSG)
   ISPEXEC GETMSG MSG(&ZERRMSG) SHORTMSG(MSG1) LONGMSG(MSG2)
   WRITE CLIST NEXTISPF FAILED BECAUSE &MSG2
END
/*   EXIT THE CURRENT ISPF DISPLAY AND POP THE PREVIOUS ONE          */
ISPEXEC CONTROL ERRORS
ISPEXEC CONTROL DISPLAY RESTORE
EXIT
./ ADD NAME=Q        0101-01016-01016-1428-00015-00015-00000-RACFCLS
GETSYSN
SET SYSNUM = &LASTCC
IF &SYSNUM = 0 THEN SET SYSNAME=BIGERROR
IF &SYSNUM = 1 THEN SET SYSNAME=PRDA
IF &SYSNUM = 2 THEN SET SYSNAME=PRDB
IF &SYSNUM = 3 THEN SET SYSNAME=PRDC
IF &SYSNUM = 4 THEN SET SYSNAME=PRDD
IF &SYSNUM = 5 THEN SET SYSNAME=PRDE
IF &SYSNUM = 6 THEN SET SYSNAME=TSTF
IF &SYSNUM = 7 THEN SET SYSNAME=TSTG

SET SHRNAME = &SYSNAME
IF &SYSNUM = 4 THEN SET SHRNAME=PRDE
IF &SYSNUM = 7 THEN SET SHRNAME=PRDE

./ ADD NAME=RACFADM  0101-01016-01016-1428-00136-00136-00000-RACFCLS
/* REXX */
/* RACF ADMINISTRATOR ADD */
UID = SYSVAR(SYSUID)
IF UID != SUBSTRING(SYS0009,1,8)
SAY "INVALID USERID"
EXIT(0)

SAY ""
SAY ""
SAY ""
SAY ""
SAY ""
SAY ""
SAY "                       +----------------------------+ "
SAY "                       ø ADD ADMINISTRATOR TO GROUP ø "
SAY "                       +----------------------------+ "
INPUT:
SAY ""
SAY "ENTER USERID  EG. (OPS0AD1)"
SAY "THE FOURTH CHARACTER IS THE TEST CHARACTER"
PULL ID
PARSE VALUE ID WITH ID3 4 IDNR
SAY ""
SAY "ENTER ADMINISTRATOR DETAIL (255 CHARACTERS ALLOWED)"
SAY "EG. NAME, PLACE PHONE NUMBER ETC.)"
PULL DATA
DATA = "'"DATA"'"

 GR.0 = ''
 GR.DNS = "DIENSKRL"
 GR.NET = "NETWORK"
 GR.MED = "MEDIA"
 GR.OPS = "OPERATOR"
 GR.PRG = "PROGRAMR"

 SN.0 = ''
 SN.DNS = "DIENADMN"
 SN.NET = "NETADMN"
 SN.MED = "MEDADMN"
 SN.OPS = "OPERADMN"
 SN.PRG = "PROGADMN"

 AC.0 = ''
 AC.DNS = "$REDNS"
 AC.NET = "$RENET"
 AC.MED = "$REMED"
 AC.OPS = "$REOPS"
 AC.PRG = "$REPRG"

SELECT
 WHEN ID3 = "DNS" THEN NOP
 WHEN ID3 = "NET" THEN NOP
 WHEN ID3 = "MED" THEN NOP
 WHEN ID3 = "OPS" THEN NOP
 WHEN ID3 = "PRG" THEN NOP
OTHERWISE
 SAY ""
 SAY "                       +----------------+ "
 SAY "                       ø INVALID USERID ø "
 SAY "                       ø                ø "
 SAY "                       ø RESPECIFY .... ø "
 SAY "                       +----------------+ "
SAY ""
 CALL INPUT
END
GRP = GR.ID3
ADD = '"ADDUSER ('ID') NAME(ADMINISTRATOR) DFLTGRP('GRP') PASSWORD(A)',
       'OWNER('UID') CLAUTH(FIELD USER TSOAUTH)',
       'TSO (ACCTNUM('AC.ID3') PROC('SN.ID3') MAXSIZE(2048)',
       'SIZE(2048) UNIT(SYSDA))"'

ALT = '"ALTUSER ('ID') DATA('DATA')"'

CON = '"CONNECT ('ID') GROUP('GRP') OWNER('UID') RESUME',
      'AUTHORITY(CONNECT)',
      'SPECIAL UACC(NONE)"'

PER1 = '"PERMIT USER.TSO.TLPROC CLASS(FIELD)',
       'ID('ID') ACCESS(UPDATE)"'
PER2 = '"PERMIT USER.TSO.TLSIZE CLASS(FIELD)',
       'ID('ID') ACCESS(UPDATE)"'
PER3 = '"PERMIT USER.TSO.TMSIZE CLASS(FIELD)',
       'ID('ID') ACCESS(UPDATE)"'
PER4 = '"PERMIT USER.TSO.TACCNT CLASS(FIELD)',
       'ID('ID') ACCESS(UPDATE)"'
PER5 = '"PERMIT USER.TSO.TUNIT  CLASS(FIELD)',
       'ID('ID') ACCESS(UPDATE)"'
PER6 = '"PERMIT JCL CLASS(TSOAUTH) ID('ID') ACCESS(UPDATE)"'
PER7 = '"PERMIT OPER CLASS(TSOAUTH) ID('ID') ACCESS(NONE)"'
PER8 = '"PERMIT 'SN.ID3' CLASS(TSOPROC) ID('ID') ACCESS(READ)"'
PER9 = '"PERMIT 'AC.ID3' CLASS(ACCTNUM) ID('ID') ACCESS(READ)"'
ALIAS = '"DEF ALIAS (NAME('ID') RELATE (CAT.TSO.UCAT))',
        'CAT(CATALOG.MVS522.MASTCAT)"'

SAY ""
INTERPRET ADD
IF RC = 0 THEN SAY ID "ADDED SUCCESSFUL"
ELSE SAY "ADDUSER FAILED"
SAY ""
INTERPRET ALT
IF RC = 0 THEN SAY ID "INSTALLATION DATA ADDED"
ELSE SAY "INSTALLATION DATA FAILED - ALTUSER"
INTERPRET CON
IF RC = 0 THEN SAY ID "CONNECTED SUCCESSFUL"
ELSE SAY "CONNECT FAILED"
INTERPRET PER1
IF RC = 0 THEN SAY ID "PER1 SUCCESSFUL"
ELSE SAY "PER1 FAILED"
INTERPRET PER2
IF RC = 0 THEN SAY ID "PER2 SUCCESSFUL"
ELSE SAY "PER2 FAILED"
INTERPRET PER3
IF RC = 0 THEN SAY ID "PER3 SUCCESSFUL"
ELSE SAY "PER3 FAILED"
INTERPRET PER4
IF RC = 0 THEN SAY ID "PER4 SUCCESSFUL"
ELSE SAY "PER4 FAILED"
INTERPRET PER5
IF RC = 0 THEN SAY ID "PER5 SUCCESSFUL"
ELSE SAY "PER5 FAILED"
INTERPRET PER6
IF RC = 0 THEN SAY ID "PER6 SUCCESSFUL"
ELSE SAY "PER6 FAILED"
INTERPRET PER7
IF RC = 0 THEN SAY ID "PER7 SUCCESSFUL"
ELSE SAY "PER7 FAILED"
INTERPRET PER8
IF RC = 0 THEN SAY ID "PER8 SUCCESSFUL"
ELSE SAY "PER8 FAILED"
INTERPRET PER9
IF RC = 0 THEN SAY ID "PER9 SUCCESSFUL"
ELSE SAY "PER9 FAILED"
INTERPRET ALIAS
IF RC = 0 THEN SAY ID "ALIAS ADDED SUCCESSFUL"
ELSE SAY "ALIAS FAILED"
EXIT
./ ADD NAME=RACFEDIT 0101-01016-01016-1428-00006-00006-00000-RACFCLS
/*    REXX   */
PROFILE NOPREFIX
ARG DSN
X1='ISPEXEC EDIT DATASET('DSN')'
A='"'X1'"'
INTERPRET A
./ ADD NAME=RACFEXEC 0101-01016-01016-1428-00058-00058-00000-RACFCLS
/* REXX OM DAAGLIKSE OFFLOADS TE DOEN    */
ARG INPUT1 INPUT2
PARSE VALUE INPUT1 WITH DAY
PARSE VALUE INPUT2 WITH GROUP

"PROFILE NOPREFIX"
X = MSG('OFF')
UID = SYSVAR(SYSUID)
ALLOC = '"ALLOC DA(' || UID || '.EXEJCL)',
        'DIR(0) DSORG(PS) RECFM(F B) LRECL(80) SP(1,0) TRACKS',
        'BLKSIZE(18534) FI(OPRT) UNIT(SYSDA)"'
DEL = '"DEL ' || UID || '.EXEJCL"'
INTERPRET DEL
INTERPRET ALLOC

GRP = JUSTIFY(GROUP,8,' ')

OUT. = "//" || UID || "E JOB (1,RESYS,BAC,01),'RACF LISTS',"
CALL WRITE
OUT. = "//             CLASS=L,MSGCLASS=Z,NOTIFY=" || UID || ""
CALL WRITE
OUT. = "//*"
CALL WRITE
OUT. = "//STEP01 EXEC PGM=RACFDEFU,"
CALL WRITE
OUT. = "//   PARM=('" ||DAY|| "','" ||GRP"')  "
CALL WRITE
OUT. = "//STEPLIB  DD DSN=SYS0009.LINKLIB,DISP=SHR"
CALL WRITE
OUT. = "//SYSIN    DD DUMMY                 "
CALL WRITE
OUT. = "//UITLEER  DD SYSOUT=(A,INTRDR)"
CALL WRITE

CALL KLAAR

/**********************/
/*** WRITE USERID JCL */
/**********************/

WRITE:
 "EXECIO 1 DISKW OPRT (STEM OUT."
RETURN

KLAAR:
 "EXECIO 0 DISKW OPRT (FINIS"
 "FREE FI(OPRT)"
  SUB = '"SUB ' || UID || '.EXEJCL"'
  INTERPRET SUB
SAY "JOB " || UID || "E"
SAY "BEEN SUBMITTED"

CALL KLAAR1

KLAAR1:
 DEL = '"DEL ' || UID || '.OFFJCL"'
/* INTERPRET DEL */
EXIT
./ ADD NAME=RACFEXE1 0101-01016-01016-1428-00058-00058-00000-RACFCLS
/* REXX OM DAAGLIKSE OFFLOADS TE DOEN    */
ARG INPUT1 INPUT2
PARSE VALUE INPUT1 WITH DAY
PARSE VALUE INPUT2 WITH GROUP

"PROFILE NOPREFIX"
X = MSG('OFF')
UID = SYSVAR(SYSUID)
ALLOC = '"ALLOC DA(' || UID || '.EXEJCL)',
        'DIR(0) DSORG(PS) RECFM(F B) LRECL(80) SP(1,0) TRACKS',
        'BLKSIZE(18534) FI(OPRT) UNIT(SYSDA)"'
DEL = '"DEL ' || UID || '.EXEJCL"'
INTERPRET DEL
INTERPRET ALLOC

GRP = JUSTIFY(GROUP,8,' ')

OUT. = "//" || UID || "E JOB (1,RESYS,BAC,01),'RACF LISTS',"
CALL WRITE
OUT. = "//             CLASS=L,MSGCLASS=X,NOTIFY=" || UID || ""
CALL WRITE
OUT. = "//*"
CALL WRITE
OUT. = "//STEP01 EXEC PGM=RACFDEFU,"
CALL WRITE
OUT. = "//   PARM=('" ||DAY|| "','" ||GRP"')  "
CALL WRITE
OUT. = "//STEPLIB  DD DSN=SYS0009.LINKLIB,DISP=SHR"
CALL WRITE
OUT. = "//SYSIN    DD DUMMY                 "
CALL WRITE
OUT. = "//UITLEER  DD SYSOUT=(A,INTRDR)"
CALL WRITE

CALL KLAAR

/**********************/
/*** WRITE USERID JCL */
/**********************/

WRITE:
 "EXECIO 1 DISKW OPRT (STEM OUT."
RETURN

KLAAR:
 "EXECIO 0 DISKW OPRT (FINIS"
 "FREE FI(OPRT)"
  SUB = '"SUB ' || UID || '.EXEJCL"'
  INTERPRET SUB
SAY "JOB " || UID || "E"
SAY "BEEN SUBMITTED"

CALL KLAAR1

KLAAR1:
 DEL = '"DEL ' || UID || '.OFFJCL"'
/* INTERPRET DEL */
EXIT
./ ADD NAME=READBKUP 0101-01016-01016-1428-00162-00162-00000-RACFCLS
/* ****************************Rexx**********************************/
/* SAPD READY LOGON PROC                                            */
/* ****************************Rexx**********************************/

"PROFILE NOPREF MODE WTPMSG MSGID"
X = MSG('OFF')
UID = SYSVAR(SYSUID)
PROC = SYSVAR(SYSPROC)
TSOVER = SYSVAR(SYSTSOE)    /* TEST FOR OS/390 */
GETSYSN
IF RC = 0 THEN SYSNAME=BIGERROR
IF RC = 1 THEN SYSNAME=PRDA
IF RC = 2 THEN SYSNAME=PRDB
IF RC = 3 THEN SYSNAME=PRDC
IF RC = 4 THEN SYSNAME=PRDD
IF RC = 5 THEN SYSNAME=PRDE
IF RC = 6 THEN SYSNAME=TSTF
IF RC = 7 THEN SYSNAME=TSTG
IF RC = 8 THEN SYSNAME=TST1
SHRNAME = SYSNAME
IF RC = 4 THEN SHRNAME=PRDE
IF RC = 7 THEN SHRNAME=PRDE
IF RC = 8 THEN SHRNAME=PRDE

/*****************************************/
/* ALLOC ISPFPROF                        */
/*****************************************/
DSNAME = "'"UID"."SYSNAME".ISPF.ISPPROF'"
"FREE FI(ISPLLIB,ISPPLIB,ISPMLIB,ISPTLIB,ISPSLIB,ISPPROF,ISPTABL)"
RC = LISTDSI(DSNAME)
IF RC > 4 THEN
DO
 X = MSG('ON')
 "FREE FI(ISPCRTE)"
 "ATTRIB ISPCRTE DSORG(PO) RECFM(F B) LRECL(80) BLKSIZE(18400)"
 A1='"ALLOC DA(' || DSNAME || ') SP(10,1) TRACKS DIR(10)',
 || 'USING(ISPCRTE) FI(ISPPROF)"'
 SAY A1
 INTERPRET A1
 IF RC = 0 THEN
  SAY  "ISPF PROFILE DATA SET" DSNAME "HAS BEEN CREATED"
 ELSE
 DO
   SAY  "UNABLE TO ALLOCATE ISPF PROFILE DATA SET" DSNAME
   "FREE FI(ISPCRTE)"
   EXIT 12
 END
 "FREE FI(ISPCRTE)"
END
A1 = '"ALLOC FI(ISPPROF) SHR DA('||DSNAME||')"'
A2 = '"ALLOC FI(ISPTABL) SHR DA('||DSNAME||')"'
A3 = '"ALLOC FI(ISPTLIB) SHR DA('||DSNAME||')"'
INTERPRET A1
INTERPRET A2
INTERPRET A3

IF TSOVER = 2050 THEN DO
                                              /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
/* SPECIFY DATASETS FOR SYSPROC */            /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
C_RAC1 = 'SYS2.RACFCLST'                      /* Changes for OS/390 */
C_ISP  = 'ISP.SISPEXEC'                       /* Changes for OS/390 */
C_ISP2 = 'ISP.SISPCLIB'                       /* Changes for OS/390 */
                                              /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
/* SPECIFY DATASETS FOR ISPPLIB */            /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
P_CUS3 = 'SYS2.RACFPANL'                      /* Changes for OS/390 */
P_ISPF = 'ISP.SISPPENU'                       /* Changes for OS/390 */
                                              /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
/* SPECIFY DATASETS FOR ISPMLIB */            /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
M_ISPF = 'ISP.SISPMENU'                       /* Changes for OS/390 */
                                              /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
/* SPECIFY DATASETS FOR ISPTLIB */            /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
T_ISPF = 'ISP.SISPTENU'                       /* Changes for OS/390 */
                                              /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
/* SPECIFY DATASETS FOR ISPSLIB */            /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
S_ISPF = 'ISP.SISPSLIB'                       /* Changes for OS/390 */
                                              /* Changes for OS/390 */
/*******************************/             /* Changes for OS/390 */
/* SPECIFY DATASETS FOR SYSLOG */             /* Changes for OS/390 */
/*******************************/             /* Changes for OS/390 */
H_ISF  = "'SYS0.HASPINDX'"                    /* Changes for OS/390 */

END
ELSE DO

/********************************/
/* SPECIFY DATASETS FOR SYSPROC */
/********************************/
C_RAC1 = 'SYS2.RACFCLST'
C_ISP  = 'ISP.V4R2M0.SISPEXEC'
C_ISP2 = 'ISP.V4R2M0.SISPCLIB'

/********************************/
/* SPECIFY DATASETS FOR ISPPLIB */
/********************************/
P_CUS3 = 'SYS2.RACFPANL'
P_ISPF = 'ISP.V4R2M0.SISPPENU'

/********************************/
/* SPECIFY DATASETS FOR ISPMLIB */
/********************************/
M_ISPF = 'ISP.V4R2M0.SISPMENU'

/********************************/
/* SPECIFY DATASETS FOR ISPTLIB */
/********************************/
T_ISPF = 'ISP.V4R2M0.SISPTENU'

/********************************/
/* SPECIFY DATASETS FOR ISPSLIB */
/********************************/
S_ISPF = 'ISP.V4R2M0.SISPSLIB'

/*******************************/
/* SPECIFY DATASETS FOR SYSLOG */
/*******************************/
H_ISF  = "'SYS0."SYSNAME".HASPINDX'"

END

/*********************************/
/*  READY PROMPT USERS           */
/*********************************/
IF (PROC = "READY") THEN
DO
  SYSPROC  = C_RAC1 C_ISP  C_ISP2
  ISPPLIB  = P_CUS3 P_ISPF
  ISPMLIB  = M_ISPF
  ISPTLIB  = T_ISPF
  ISPSLIB  = S_ISPF
  HASPINDX = H_ISF
  PNL      = 'PANEL()'
END

/******************************/
/** STANDARD ISPF ALLOCTIONS **/
/******************************/
"FREE FI(SYSPROC,SYSEXEC,ISPLLIB,ISPPLIB,ISPMLIB,ISPSLIB,ISPTLIB)"
"FREE FI(HASPINDX)"

X = MSG('ON')
"ALLOC FI(SYSPROC) DA("SYSPROC") SHR"
"ALLOC FI(ISPPLIB) DA("ISPPLIB") SHR"
"ALLOC FI(ISPMLIB) DA("ISPMLIB") SHR"
"ALLOC FI(ISPTLIB) DA("ISPTLIB") SHR"
"ALLOC FI(ISPSLIB) DA("ISPSLIB") SHR"
"ALLOC FI(HASPINDX) DA("HASPINDX") SHR"
X = MSG('ON')
SAY "WRITE SEND OR RECEIVE THE FILE.....OR ENTER LOGOFF TO TERMINATE."


Exit 0  /*-------------------------------------------------------*/

./ ADD NAME=READY    0101-01016-01016-1428-00162-00162-00000-RACFCLS
/* ****************************Rexx**********************************/
/* SAPD READY LOGON PROC                                            */
/* ****************************Rexx**********************************/

"PROFILE NOPREF MODE WTPMSG MSGID"
X = MSG('OFF')
UID = SYSVAR(SYSUID)
PROC = SYSVAR(SYSPROC)
TSOVER = SYSVAR(SYSTSOE)    /* TEST FOR OS/390 */
GETSYSN
IF RC = 0 THEN SYSNAME=BIGERROR
IF RC = 1 THEN SYSNAME=PRDA
IF RC = 2 THEN SYSNAME=PRDB
IF RC = 3 THEN SYSNAME=PRDC
IF RC = 4 THEN SYSNAME=PRDD
IF RC = 5 THEN SYSNAME=PRDE
IF RC = 6 THEN SYSNAME=TSTF
IF RC = 7 THEN SYSNAME=TSTG
IF RC = 8 THEN SYSNAME=TST1
SHRNAME = SYSNAME
IF RC = 4 THEN SHRNAME=PRDE
IF RC = 7 THEN SHRNAME=PRDE
IF RC = 8 THEN SHRNAME=PRDE

/*****************************************/
/* ALLOC ISPFPROF                        */
/*****************************************/
DSNAME = "'"UID"."SYSNAME".ISPF.ISPPROF'"
"FREE FI(ISPLLIB,ISPPLIB,ISPMLIB,ISPTLIB,ISPSLIB,ISPPROF,ISPTABL)"
RC = LISTDSI(DSNAME)
IF RC > 4 THEN
DO
 X = MSG('ON')
 "FREE FI(ISPCRTE)"
 "ATTRIB ISPCRTE DSORG(PO) RECFM(F B) LRECL(80) BLKSIZE(18400)"
 A1='"ALLOC DA(' || DSNAME || ') SP(10,1) TRACKS DIR(10)',
 || 'USING(ISPCRTE) FI(ISPPROF)"'
 SAY A1
 INTERPRET A1
 IF RC = 0 THEN
  SAY  "ISPF PROFILE DATA SET" DSNAME "HAS BEEN CREATED"
 ELSE
 DO
   SAY  "UNABLE TO ALLOCATE ISPF PROFILE DATA SET" DSNAME
   "FREE FI(ISPCRTE)"
   EXIT 12
 END
 "FREE FI(ISPCRTE)"
END
A1 = '"ALLOC FI(ISPPROF) SHR DA('||DSNAME||')"'
A2 = '"ALLOC FI(ISPTABL) SHR DA('||DSNAME||')"'
A3 = '"ALLOC FI(ISPTLIB) SHR DA('||DSNAME||')"'
INTERPRET A1
INTERPRET A2
INTERPRET A3

IF TSOVER = 2050 THEN DO
                                              /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
/* SPECIFY DATASETS FOR SYSPROC */            /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
C_RAC1 = 'SYS2.RACFDUM'                       /* CHANGES FOR OS/390 */
C_ISP  = 'SYS2.RACFDUM'                       /* CHANGES FOR OS/390 */
C_ISP2 = 'SYS2.RACFDUM'                       /* CHANGES FOR OS/390 */
                                              /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
/* SPECIFY DATASETS FOR ISPPLIB */            /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
P_CUS3 = 'SYS2.RACFDUM'                       /* CHANGES FOR OS/390 */
P_ISPF = 'SYS2.RACFDUM'                       /* CHANGES FOR OS/390 */
                                              /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
/* SPECIFY DATASETS FOR ISPMLIB */            /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
M_ISPF = 'SYS2.RACFDUM'                       /* CHANGES FOR OS/390 */
                                              /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
/* SPECIFY DATASETS FOR ISPTLIB */            /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
T_ISPF = 'SYS2.RACFDUM'                       /* CHANGES FOR OS/390 */
                                              /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
/* SPECIFY DATASETS FOR ISPSLIB */            /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
S_ISPF = 'SYS2.RACFDUM'                       /* CHANGES FOR OS/390 */
                                              /* Changes for OS/390 */
/*******************************/             /* Changes for OS/390 */
/* SPECIFY DATASETS FOR SYSLOG */             /* Changes for OS/390 */
/*******************************/             /* Changes for OS/390 */
H_ISF  = "'SYS0.HASPINDX'"                    /* Changes for OS/390 */

END
ELSE DO

/********************************/
/* SPECIFY DATASETS FOR SYSPROC */
/********************************/
C_RAC1 = 'SYS2.RACFDUM'
C_ISP  = 'SYS2.RACFDUM'
C_ISP2 = 'SYS2.RACFDUM'

/********************************/
/* SPECIFY DATASETS FOR ISPPLIB */
/********************************/
P_CUS3 = 'SYS2.RACFDUM'
P_ISPF = 'SYS2.RACFDUM'

/********************************/
/* SPECIFY DATASETS FOR ISPMLIB */
/********************************/
M_ISPF = 'SYS2.RACFDUM'

/********************************/
/* SPECIFY DATASETS FOR ISPTLIB */
/********************************/
T_ISPF = 'SYS2.RACFDUM'

/********************************/
/* SPECIFY DATASETS FOR ISPSLIB */
/********************************/
S_ISPF = 'SYS2.RACFDUM'

/*******************************/
/* SPECIFY DATASETS FOR SYSLOG */
/*******************************/
H_ISF  = "'SYS0."SYSNAME".HASPINDX'"

END

/*********************************/
/*  READY PROMPT USERS           */
/*********************************/
IF (PROC = "READY") THEN
DO
  SYSPROC  = 'SYS2.RACFDUM'
  ISPPLIB  = 'SYS2.RACFDUM'
  ISPMLIB  = 'SYS2.RACFDUM'
  ISPTLIB  = 'SYS2.RACFDUM'
  ISPSLIB  = 'SYS2.RACFDUM'
  HASPINDX = H_ISF
  PNL      = 'PANEL()'
END

/******************************/
/** STANDARD ISPF ALLOCTIONS **/
/******************************/
"FREE FI(SYSPROC,SYSEXEC,ISPLLIB,ISPPLIB,ISPMLIB,ISPSLIB,ISPTLIB)"
"FREE FI(HASPINDX)"

X = MSG('ON')
"ALLOC FI(SYSPROC) DA("SYSPROC") SHR"
"ALLOC FI(ISPPLIB) DA("ISPPLIB") SHR"
"ALLOC FI(ISPMLIB) DA("ISPMLIB") SHR"
"ALLOC FI(ISPTLIB) DA("ISPTLIB") SHR"
"ALLOC FI(ISPSLIB) DA("ISPSLIB") SHR"
"ALLOC FI(HASPINDX) DA("HASPINDX") SHR"
X = MSG('ON')
SAY "WRITE SEND OR RECEIVE THE FILE.....OR ENTER LOGOFF TO TERMINATE."


Exit 0  /*-------------------------------------------------------*/

./ ADD NAME=READY#   0101-01016-01016-1428-00061-00061-00000-RACFCLS
PROC 0 PANEL()   /* READY */
CONTROL NOFLUSH NOMSG MAIN
PROFILE MODE WTPMSG MSGID NOPREFIX
GETSYSN
SET SYSNUM = &LASTCC
IF &SYSNUM = 0 THEN SET SYSNAME=BIGERROR
IF &SYSNUM = 1 THEN SET SYSNAME=PRDA
IF &SYSNUM = 2 THEN SET SYSNAME=PRDB
IF &SYSNUM = 3 THEN SET SYSNAME=PRDC
IF &SYSNUM = 4 THEN SET SYSNAME=PRDD
IF &SYSNUM = 5 THEN SET SYSNAME=PRDE
IF &SYSNUM = 6 THEN SET SYSNAME=TSTF
IF &SYSNUM = 7 THEN SET SYSNAME=TSTG

SET SHRNAME = &SYSNAME
IF &SYSNUM = 4 THEN SET SHRNAME=PRDE
IF &SYSNUM = 7 THEN SET SHRNAME=PRDE

FREE FILE(ISPLLIB,ISPPLIB,ISPMLIB,ISPTLIB,ISPSLIB, +
          ISPPROF,ISPTABL,SMPTABL)
SET &DSNAME = &SYSUID..&SYSNAME..ISPF.ISPPROF
ALLOC FI(ISPPROF) SHR  DA('&DSNAME.')
IF &LASTCC ^= 0 THEN +
  DO
    RENAME &SYSUID..ISPF.ISPPROF &SYSUID..&SYSNAME..ISPF.ISPPROF
  END
ALLOC FI(ISPPROF) SHR  DA('&DSNAME.')
IF &LASTCC ^= 0 THEN +
  DO
    CONTROL MSG
    ALLOC DA('&DSNAME.') SP(2,1) TRACKS DIR(2) +
    DSORG(PO) RECFM(F B) LRECL(80) BLKSIZE(6160) FI(ISPPROF)
    IF &LASTCC = 0 THEN +
      WRITE *** ISPF PROFILE DATA SET '&DSNAME.' HAS BEEN CREATED
    ELSE +
     DO
      WRITE  *** UNABLE TO ALLOCATE ISPF PROFILE DATA SET '&DSNAME.'
      EXIT CODE(12)
     END
  END
CONTROL MSG
ERROR EXIT
ALLOC FI(ISPTABL) SHR DA('&DSNAME.')
ALLOC FI(ISPPLIB) SHR DA( +
                         'SYS2.RACFPANL'     /* RACF CHECKING */ +
                         'ISP.V4R2M0.SISPPENU')   /* ISPF          */
ALLOC FI(ISPMLIB) SHR DA( +
                         'ISP.V4R2M0.SISPMENU')   /* ISPF          */
ALLOC FI(ISPTLIB) SHR DA( +
                         '&DSNAME'                /*               */ +
                         'ISP.V4R2M0.SISPTENU')   /* ISPF          */
ALLOC FI(ISPSLIB) SHR DA( +
                         'ISP.V4R2M0.SISPSLIB')   /* ISPF          */
ALLOC FI(HASPINDX) SHR DA('SYS0.&SYSNAME..HASPINDX') /* ISPF        */
FREE FI(SYSPROC)
ALLOC FI(SYSPROC) SHR DA( +
     'SYS2.RACFCLST'  +
     'ISP.V4R2M0.SISPEXEC'     /* RACF ADMIN  */ +
     'ISP.V4R2M0.SISPCLIB')    /* RACF ADMIN  */
WRITE SEND OR RECEIVE THE FILE..... OR ENTER LOGOFF TO TERMINATE.
ERROR RETURN
./ ADD NAME=S        0101-01016-01016-1428-00008-00008-00000-RACFCLS
 WRITE_OPS:
 UID = SYSVAR(SYSUID)
 S1 = DATE()
 S2 = TIME()
 S3 = JUSTIFY(UID,8,' ')
 S4 = JUSTIFY(JNUM,6,' ')
 OUT.="   " S1 " " S2 " USER=" ||S3|| "JOB=" || S4 || " SPECIFIC JOB OFFLOAD"
 "EXECIO 1 DISKW OOPS (STEM OUT."
./ ADD NAME=SCROLL   0101-01016-01016-1428-00073-00073-00000-RACFCLS
PROC 0
/*********************************************************************/
/*                  "SCROLLABLE" MENU EXAMPLE                        */
/*                                                                   */
/*  This CLIST is used with the CBIPO MASTER APPLICATION MENU        */
/*  to perform vertical scrolling of the data within the dynamic     */
/*  area defined in the panel.  The value of the dynamic area        */
/*  variable is initialized in the panel )INIT section.              */
/*  The variables used in this CLIST are as follows:                 */
/*                                                                   */
/* CUTP     - The dialog variable containing the truncation point    */
/*            of the scrollable menu data.                           */
/*                                                                   */
/* MENU     - The dialog variable containing the scrollable menu     */
/*            data.                                                  */
/*                                                                   */
/* LASTLN   - The dialog variable containing the number of the last  */
/*            visible line of the dynamic area.                      */
/*                                                                   */
/* LINLEN   - The dialog variable containing the length of each line */
/*            within the dynamic area.                               */
/*                                                                   */
/* ZVERB    - The ISPF system variable containing the command name   */
/*                                                                   */
/* ZSCROLLA - The ISPF system variable containing the scroll amount  */
/*            field value (four characters)                          */
/*                                                                   */
/* ZSCROLLN - The ISPF system variable containing the numeric value  */
/*            of the scroll amount                                   */
/*                                                                   */
/*  The values of these variables are retrieved from the SHARED      */
/*  variable pool by the VGET service.                               */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
ISPEXEC VGET (CUTP MENU LASTLN LINLEN ZVERB ZSCROLLA ZSCROLLN)
    SET BLN20 = &STR(                    )
    SET BLN08 = &STR(        )
    SET BLNKS = &STR(&BLN20&BLN20&BLN20&BLN08)
    SET MK = &LENGTH(&STR(&MENU))
    SET MRK = &MK // &LINLEN
    SET MRK = &LINLEN - &MRK
    IF &MRK > 0 THEN +
        SET &MENU = &STR(&MENU&SUBSTR(1:&MRK,&BLNKS))
IF &ZVERB = DOWN THEN DO                     /* IF DOWNWARD SCROLL,  */
  IF &ZSCROLLA = MAX THEN DO                 /* CHECK FOR MAX SCROLL */
/*                                                                   */
/* position data so that last menu line is on last visible line      */
/*                                                                   */
    SET CUTP = &LENGTH(&STR(&MENU)) - (&LASTLN * &LINLEN)
    IF &CUTP < 0 THEN SET CUTP = 0           /* ENSURE NON-NEGATIVE  */
  END
  ELSE DO                                   /* NOT MAX, USE ZSCROLLN */
    SET CUTP = &CUTP + (&ZSCROLLN * &LINLEN)
    IF &CUTP > (&LENGTH(&STR(&MENU)) - &LINLEN) THEN DO   /* SHOW AT */
      SET CUTP = &LENGTH(&STR(&MENU)) - &LINLEN      /* LEAST 1 LINE */
    END
  END
END
ELSE DO                                    /* NOT DOWN, CHECK FOR UP */
  IF &ZVERB = UP THEN DO
    IF &ZSCROLLA = MAX THEN DO             /* CHECK FOR MAX SCROLL   */
      SET CUTP = 0                         /* POSITION TO TOP        */
    END
    ELSE DO                                          /* USE ZSCROLLN */
      SET CUTP = &CUTP - (&ZSCROLLN * &LINLEN)
      IF &CUTP < 0 THEN SET CUTP = 0         /* ENSURE NON-NEGATIVE  */
    END
  END
  ELSE                      /* NOT UP , NO OTHER CMDS SUPPORTED */
END
ISPEXEC VPUT (CUTP)         /* SAVE CUTOFF POINT IN SHARED POOL */
EXIT
./ ADD NAME=SD       0101-01016-01016-1428-00001-00001-00000-RACFCLS
ISPEXEC SELECT PANEL(ZSDSFOP2) NEWAPPL(ISF) SERVER(SDSFC0)
./ ADD NAME=SENDMSG  0101-01016-01016-1428-00015-00015-00000-RACFCLS
/* REXX OM DAAGLIKSE ONLOADS TE DOEN    */

"PROFILE NOPREFIX"

SAY "ENTER USERID"
PULL UID
SAY "ENTER MESSAGE"
PULL MSG
MSG = "'"MSG"'"
SAY MSG
  SUB = '"SE " || MSG || ",USER(" || UID || "),LOGON"'
INTERPRET SUB
SAY "MESSAGE HAS BEEN SENT TO" UID

EXIT
./ ADD NAME=SENDMSG1 0101-01016-01016-1428-00009-00009-00000-RACFCLS
PROC 2 UID MSG

PROFILE NOPREFIX

WRITE &MSG
SE '&MSG',USER(&UID),LOGON
WRITE MESSAGE HAS BEEN SENT TO &UID

EXIT
./ ADD NAME=T        0101-01016-01016-1428-00028-00028-00000-RACFCLS
/* SPECIFY DATASETS FOR SYSPROC */            /* Changes for OS/390 */
/********************************/            /* Changes for OS/390 */
C_ISP2  = 'ISP.SISPCLIB'                      /* Changes for OS/390 */
C_RAC3  = 'SYS1.HRFCLST'                      /* Changes for OS/390 */
C_CUS1  = 'SYS2.CMDPROC'                      /* Changes for OS/390 */
C_CUS2  = "'SYS2."SHRNAME".CMDPROC'"          /* Changes for OS/390 */
C_CUS3  = 'SYS2.PRDC.CMDPROC'                 /* Changes for OS/390 */
C_OPS1  = 'OPS.CMDPROC'                       /* Changes for OS/390 */
C_OPS2  = "'OPS."SHRNAME".CMDPROC'"           /* Changes for OS/390 */
C_RAC1  = 'SYS2.RACFCLST'                     /* Changes for OS/390 */
C_RAC2  = "'SYS2."SHRNAME".RACFCLST'"         /* Changes for OS/390 */
C_SMPE  = 'GIM.SGIMCLS0'                      /* Changes for OS/390 */
C_IPCS  = 'SYS1.SBLSCLI0'                     /* Changes for OS/390 */
C_HCD   = 'SYS1.SCBDCLST'                     /* Changes for OS/390 */
C_DFSRT = 'SYS1.ICEISPC'                      /* Changes for OS/390 */
C_DFDSS = 'SYS1.DGTCLIB'                      /* Changes for OS/390 */
C_RMF   = 'SYS1.SERBCLS'                      /* Changes for OS/390 */
C_ICQ   = 'ICQ.ICQCCLIB'                      /* Changes for OS/390 */
C_EDC   = 'EDC.V2R2M0.SEDCLIST'               /* Changes for OS/390 */
C_BKM   = 'EOY.SEOYCLIB'                      /* Changes for OS/390 */
C_IOA1  = "'SYS3."SHRNAME".IOAIV410.CLIST'"   /* Changes for OS/390 */
C_IOA2  = 'SYS3.IOA.CLIST'                    /* Changes for OS/390 */
C_IOA3  = 'SYS3.IOA500.CLIST'                 /* Changes for OS/390 */
C_HACC  = 'SYS3.ZHC240.ISPCLIB'               /* Changes for OS/390 */
C_SDF   = 'SDF2.V1R4M0.SDGICMD'               /* Changes for OS/390 */
C_OMVS  = 'SYS1.SBPXEXEC'                     /* Changes for OS/390 */
C_CDCU  = ''                                  /* Changes for OS/390 */
                                              /* Changes for OS/390 */
./ ADD NAME=TEL      0101-01016-01016-1428-00054-00054-00000-RACFCLS
/* REXX PROCEDURE TO FIND telephone numbers */
SAY ' '
SAY ' '
SAY ' '
SAY ' '
BEGIN:
ARG NAME
IF NAME = "" THEN
  IF name = "END" THEN
    EXIT
  ELSE
    DO
      SAY ' '
      SAY 'Enter persons name or END to finish'
      PARSE UPPER EXTERNAL name
      IF name = "END" THEN CALL klaar
    END
STRING_LENGTH = LENGTH(name)
IF STRING_LENGTH < 3 THEN
  DO UNTIL STRING_LENGTH > 2                                            020006
    IF STRING_LENGTH < 3 THEN                                           020006
       SAY 'You must at least specify 3 characters!!!'                  020006
       SAY 'Respecify the name or END?'                                 030006
       PARSE UPPER EXTERNAL name                                        040000
    IF name = "END" THEN EXIT
       STRING_LENGTH = LENGTH(name)                                     000400
  END                                                                   040000
"ALLOC FI(INPUT1) DA(maint.tellys) SHR REUSE"
"EXECIO * DISKR INPUT1 (FINIS STEM INPUT1."
I = 0
FOUND = "FALSE"
say "   VAN       NAAM                  UITBREIDING    KANTOOR GEBOU  PR
OJEK"
say "===================================================================
==========="
DO FOREVER
  I = I + 1
  MATCH = INDEX(INPUT1.I,name)
  IF I = INPUT1.0 THEN
    DO
      SAY 'Unfortunately no match found or last match reached '
      call klaar
    END
  ELSE
    DO
      IF MATCH > 0 THEN
        DO
          say input1.i
        END
    END
END
klaar:
"FREE FI(INPUT1)"
EXIT
./ ADD NAME=THEADD   0101-01016-01016-1428-00103-00103-00000-RACFCLS
/* REXX */
/* TO ADD USERID */

 ARG INPUT
 PARSE VALUE INPUT WITH ID ':' NAME ':' GROUP ':' PSW ':' CICSID

 NM = "'"NAME"'"
 X = MSG('OFF')

 UID = SYSVAR(SYSUID)
/* PARSE VALUE UID WITH AD3 4 DUMMY */


           IF (GROUP <> "MID")
               THEN DO
                  CALL MSG1
                  EXIT
               END

 ADD = '"ADDUSER ('ID') NAME('NM'),
        DFLTGRP(MID) PASSWORD('PSW') OWNER(MID)"'
 INTERPRET ADD
 RRC=RC

 IF RRC = 0 THEN
  CALL MSG2

 IF RRC <> 0 THEN
  CALL MSG3

 ALT = '"ALTUSER ('ID') CICS(OPIDENT('CICSID'))"'
 INTERPRET ALT
 RRC=RC

 IF RRC = 0 THEN
  CALL MSG5

 IF RRC <> 0 THEN
  CALL MSG4

 EXIT


 MSG1: SAY ""
   SAY "               +---------------------------------------+"
   SAY "               ø        ---- INVALID GROUP ----        ø"
   SAY "               ø                                       ø"
   SAY "               ø            VALID GROUP IS MID         ø"
   SAY "               +---------------------------------------+"
   SAY ""
 RETURN

 MSG2: SAY ""
   SAY "                       --- RACF USER ---"
   SAY ""
   SAY "                       RETURN CODE :" RRC
   SAY ""
   SAY "                       USERID      :" ID
   SAY "                       NAME        :" NAME
   SAY "                       GROUP       :" GROUP
   SAY "                       PASSWORD    :" PSW
   SAY "                       OPIDENT     :" CICSID
   SAY ""
   SAY "                       SUCCESSFULLY ADDED"
 RETURN

 MSG3: SAY ""
   SAY "               +-----------------------------------------+"
   SAY "               ø            ---- ERROR ----              ø"
   SAY "               ø                                         ø"
   SAY "               ø RACF USER NOT ADDED DUE TO CONDITION    ø"
   SAY "               ø CODE IT IS POSSIBLE THAT THE ID ALREADY ø"
   SAY "               ø EXITS                                   ø"
   SAY "               ø       RETURN CODE :" RRC "              ø"
   SAY "               ø                                         ø"
   SAY "               ø PLEASE CALL YOUR SYSTEM PROGRAMMER FOR  ø"
   SAY "               ø HELP ( ROSS )                           ø"
   SAY "               +-----------------------------------------+"
   SAY ""
 RETURN

 MSG4: SAY ""
   SAY "               +-----------------------------------------+"
   SAY "               ø            ---- ERROR ----              ø"
   SAY "               ø                                         ø"
   SAY "               ø RACF USER'S OPIDENT SEGMENT FOR CICS    ø"
   SAY "               ø          DIDN'T ADD CORRECTLY           ø"
   SAY "               ø                                         ø"
   SAY "               ø       RETURN CODE :" RRC "              ø"
   SAY "               ø PLEASE CALL YOUR SYSTEM PROGRAMMER FOR  ø"
   SAY "               ø         HELP ( ROSS )                   ø"
   SAY "               +-----------------------------------------+"
   SAY ""
 RETURN

 MSG5: SAY ""
   SAY "                       RETURN CODE :" RRC
   SAY ""
   SAY "                       OPIDENT     :" CICSID
   SAY ""
   SAY "                       SUCCESSFULLY ADDED"
 RETURN

./ ADD NAME=THEDEL   0101-01016-01016-1428-00070-00070-00000-RACFCLS
/* REXX */
 ARG INPUT
 PARSE VALUE INPUT WITH ID
 PARSE VALUE ID WITH ID3 4 DUMMY

 SAY ""
 SAY ""
 SAY ""
 SAY ""
 SAY ""
 SAY ""
 SAY ""

 UID = SYSVAR(SYSUID)
 PARSE VALUE UID WITH AD3 4 DUMMY


 NCI = '"ALU ('ID') NOCICS"'
 DEL = '"DELUSER ('ID')"'

 MS = MSG('OFF')
 INTERPRET NCI
 INTERPRET DEL
 IF RC = 0 THEN
  DO
   SAY ""
   SAY "                       RETURN CODE :" RC
   SAY ""
   SAY "                       USERID      :" ID
   SAY ""
   SAY "                       SUCCESSFULLY DELETED"
  END
  ELSE
  DO
   SAY ""
   SAY "                       RETURN CODE :" RC
   SAY ""
   SAY "                       "ID "NOT DELETED"
   SAY ""
   SAY "                       IT IS POSSIBLE THAT"
   SAY "                       THE ID DOES NOT EXITS"
   SAY ""
   SAY "                       ELSE:"
   SAY "                       PLEASE CALL YOUR"
   SAY "                       SYSTEM PROGRAMMER"
   SAY "                       FOR HELP"
  END
  MS = MSG('ON')
  EXIT

  /***********/
  /* MESAGES */
  /***********/

  MSG1: SAY ""
  SAY "                       +----------------+ "
  SAY "                       ø INVALID USERID ø "
  SAY "                       ø                ø "
  SAY "                       ø RESPECIFY .... ø "
  SAY "                       +----------------+ "
  SAY ""
  EXIT

  MSG2: SAY ""
  SAY "            +------------------------------------------+"
  SAY "            ø YOU ARE NOT AUTHORIZED TO DELETE THIS ID ø"
  SAY "            +------------------------------------------+"
  SAY ""
  EXIT

./ ADD NAME=THELST   0101-01016-01016-1428-00034-00034-00000-RACFCLS
/* REXX */
 ARG INPUT
 PARSE VALUE INPUT WITH ID
 PARSE VALUE ID WITH ID3 2 DUMMY

 SAY ""
 SAY ""

 UID = SYSVAR(SYSUID)
 PARSE VALUE UID WITH AD3 4 DUMMY

 LST = '"LISTUSER ('ID') CICS"'

 MS = MSG('OFF')
 INTERPRET LST
 IF RC <> 0 THEN
 DO
  SAY ""
  SAY ""
  SAY ""
  SAY "                       RETURN CODE :" RC
  SAY ""
  SAY "                       "ID "NOT LISTED"
  SAY ""
  SAY "                       IT IS POSSIBLE THAT"
  SAY "                       THE ID DOES NOT EXITS"
  SAY ""
  SAY "                       ELSE:"
  SAY "                       PLEASE CALL YOUR"
  SAY "                       SYSTEM PROGRAMMER"
  SAY "                       FOR HELP"
 END
  MS = MSG('ON')
  EXIT
./ ADD NAME=THEOPT   0101-01016-01016-1428-00051-00051-00000-RACFCLS
/* REXX */
/* REXX TO CHANGE PASSWORD, NAME OF EXISTING USERID */

 ARG INPUT
 PARSE VALUE INPUT WITH ID ':' CICSID
 PARSE VALUE ID WITH ID3 4 DUMMY

 SAY ""
 SAY ""
 SAY ""
 SAY ""
 SAY ""
 SAY ""
 SAY ""

 UID = SYSVAR(SYSUID)
 PARSE VALUE UID WITH AD3 4 DUMMY

 IF CICSID  <> '' THEN
  ALT = '"ALTUSER ('ID') CICS(OPIDENT('CICSID'))"'
 ELSE
  EXIT

 MS = MSG('OFF')
 INTERPRET ALT
 IF RC = 0 THEN
  DO
   SAY ""
   SAY "                       RETURN CODE :" RC
   SAY "                       USERID      :" ID
   SAY "                       OPIDENT     :" CICSID
   SAY ""
   SAY "                       SUCCESSFULLY CHANGED"
  END
  ELSE
  DO
   SAY ""
   SAY "                       RETURN CODE :" RC
   SAY ""
   SAY "                       "ID "NOT CHANGED"
   SAY ""
   SAY "                       "IT IS POSSIBLE THAT"
   SAY "                       "THE ID DOES NOT EXITS"
   SAY ""
   SAY "                       ELSE:"
   SAY "                       PLEASE CALL YOUR"
   SAY "                       SYSTEM PROGRAMMER"
   SAY "                       FOR HELP"
  END
  MS = MSG('ON')
  EXIT
./ ADD NAME=THEPID   0101-01016-01016-1428-00092-00092-00000-RACFCLS
/* REXX */
/****************************/
/**  ADD ISIS PRINTERS     **/
/****************************/
"PROF NOPREF"
ARG INPUT
 PARSE VALUE INPUT WITH ACTION ':' PID ':' WEB ':' LOC
"ALLOC DA('MAINT.ISIS.WEBNR') FI(XXX) OLD"
IF RC <> 0 THEN
DO
 SAY " "
 SAY " "
 SAY " "
 SAY " "
 SAY " "
 SAY " "
 SAY " "
 SAY " "
 SAY " "
 SAY " "
 SAY "                          +--------------------+"
 SAY "                          ø DATASET IN USE BY  ø"
 SAY "                          ø ANOTHER USER       ø"
 SAY "                          ø PLEASE WAIT ....   ø"
 SAY "                          +--------------------+"
 EXIT
END

"EXECIO * DISKR XXX (FINIS STEM IN."
"FREE FI(XXX)"

X = MSG('OFF')

SELECT
WHEN ACTION = "ADD" THEN
 CALL ADD
WHEN ACTION = "DEL" THEN
 CALL DEL
WHEN ACTION = "LIST" THEN
 "ISPEXEC BROWSE DATASET('MAINT.ISIS.WEBNR')"
WHEN ACTION = "PRT" THEN
DO
 L = "PRINTOFF 'MAINT.ISIS.WEBNR' DEST("PID")"
 L = '"'||L||'"'
 INTERPRET L
 IF RC = 0 THEN SAY "LISTING ROUTED TO" PID
 ELSE SAY "LISTING NOT ROUTED - PLEASE CALL FOR HELP - RC="||RC
END
OTHERWISE NOP
END
EXIT

ADD:
"ALLOC DA('MAINT.ISIS.WEBNR') FI(XXX) OLD"
TEL=0
DO UNTIL TEL >= IN.0
 TEL=TEL+1
 OUT. = IN.TEL
 IN_PID = SUBSTR(IN.TEL,1,8)
 IF PID <> IN_PID THEN
  "EXECIO 1 DISKW XXX (STEM OUT."
END

"EXECIO 0 DISKW XXX (FINIS"
"FREE FI(XXX)"

"ALLOC DA('MAINT.ISIS.WEBNR') FI(XXX) MOD"
 OUT. = PID WEB LOC
"EXECIO 1 DISKW XXX (FINIS STEM OUT."
 "FREE FI(XXX)"
 SAY PID WEB " - ADDED SUCCESSFUL"
 RETURN

DEL:
TEL=0
FOUND="FALSE"
"ALLOC DA('MAINT.ISIS.WEBNR') FI(XXX) OLD"
DO UNTIL TEL >= IN.0
 TEL=TEL+1
 OUT. = IN.TEL
 IN_PID = SUBSTR(IN.TEL,1,8)
 IF PID <> IN_PID THEN
 "EXECIO 1 DISKW XXX (STEM OUT."
 ELSE FOUND = "TRUE"
END

 "EXECIO 0 DISKW XXX (FINIS"
 "FREE FI(XXX)"

 IF FOUND = "FALSE" THEN SAY PID "- NOT IN DATASET"
 ELSE SAY PID "- DELETED"
 RETURN
./ ADD NAME=THERES   0101-01016-01016-1428-00077-00077-00000-RACFCLS
/* REXX */
/* REXX TO CHANGE PASSWORD, NAME OF EXISTING USERID */

 ARG INPUT
 PARSE VALUE INPUT WITH ID ':' NAME ':' PSW
 PARSE VALUE ID WITH ID3 4 DUMMY

 IF NAME <> '' THEN NM = "'"NAME"'"

 SAY ""
 SAY ""
 SAY ""
 SAY ""
 SAY ""
 SAY ""
 SAY ""

 UID = SYSVAR(SYSUID)
 PARSE VALUE UID WITH AD3 4 DUMMY


 IF NAME  <> '' THEN
  ALT = '"ALTUSER ('ID') NAME('NM') PASSWORD('PSW') RESUME"'
 ELSE
  ALT = '"ALTUSER ('ID') PASSWORD('PSW') RESUME"'

 MS = MSG('OFF')
 INTERPRET ALT
 IF RC = 0 THEN
  DO
   SAY ""
   SAY "                       RETURN CODE :" RC
   SAY "                       USERID      :" ID
   IF NAME <> '' THEN
   SAY "                       NAME        :" NAME
   SAY "                       PASSWORD    :" PSW
   SAY ""
   SAY "                       SUCCESSFULLY CHANGED"
  END
  ELSE
  DO
   SAY ""
   SAY "                       RETURN CODE :" RC
   SAY ""
   SAY "                       "ID "NOT CHANGED"
   SAY ""
   SAY "                       "IT IS POSSIBLE THAT"
   SAY "                       "THE ID DOES NOT EXITS"
   SAY ""
   SAY "                       ELSE:"
   SAY "                       PLEASE CALL YOUR"
   SAY "                       SYSTEM PROGRAMMER"
   SAY "                       FOR HELP"
  END
  MS = MSG('ON')
  EXIT

  /***********/
  /* MESAGES */
  /***********/

  MSG1: SAY ""
  SAY "                       +----------------+ "
  SAY "                       ø INVALID USERID ø "
  SAY "                       ø                ø "
  SAY "                       ø RESPECIFY .... ø "
  SAY "                       +----------------+ "
  SAY ""
  EXIT

  MSG2: SAY ""
  SAY "            +------------------------------------------+"
  SAY "            ø YOU ARE NOT AUTHORIZED TO CHANGE THIS ID ø"
  SAY "            +------------------------------------------+"
  SAY ""
  EXIT

./ ADD NAME=THETSP   0101-01016-01016-1428-00254-00254-00000-RACFCLS
/* THIS REXX PROCEDURE search for spesific printer in tsp  */

BEGIN:

SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
ARG INPUT
PARSE VALUE INPUT WITH LUNAME

STRING_LENGTH = LENGTH(LUNAME)

    IF STRING_LENGTH < 4 | STRING_LEGTH > 8                             020006
      THEN DO                                                           020006
        CALL MSG1                                                       020006
        EXIT                                                            020006
      END

ELSE DO

"ALLOC FI(INPUT1) DA(TSPRINT.V4R2M0.CNTL(ASMJES1)) SHR REUSE"
"ALLOC FI(INPUT2) DA(TSPRINT.V4R2M0.CNTL(ASMJES2)) SHR REUSE"
"ALLOC FI(INPUT3) DA(TSPRINT.V4R2M0.CNTL(ASMJES3)) SHR REUSE"
"ALLOC FI(INPUT4) DA(TSPRINT.V4R2M0.CNTL(ASMJES4)) SHR REUSE"
"ALLOC FI(INPUT5) DA(TSPRINT.V4R2M0.CNTL(ASMJES5)) SHR REUSE"
"ALLOC FI(INPUT6) DA(TSPRINT.V4R2M0.CNTL(ASMJES6)) SHR REUSE"
"EXECIO * DISKR INPUT1 (FINIS STEM INPUT1."
"EXECIO * DISKR INPUT2 (FINIS STEM INPUT2."
"EXECIO * DISKR INPUT3 (FINIS STEM INPUT3."
"EXECIO * DISKR INPUT4 (FINIS STEM INPUT4."
"EXECIO * DISKR INPUT5 (FINIS STEM INPUT5."
"EXECIO * DISKR INPUT6 (FINIS STEM INPUT6."
"FREE FI(INPUT1)"
"FREE FI(INPUT2)"
"FREE FI(INPUT3)"
"FREE FI(INPUT4)"
"FREE FI(INPUT5)"
"FREE FI(INPUT6)"
SAY 'NOTE: SEARCHING FOR 'LUNAME
I = 1
FOUND = "FALSE"
DO FOREVER
  MATCH = INDEX(INPUT1.I,LUNAME)
  IF I = INPUT1.0 THEN
    DO
      SAY LUNAME || ' NOT FOUND IN TSPRINT1'
      CALL TWO
    END
  ELSE
    DO
      IF MATCH > 0 THEN
        DO
          SAY LUNAME || ' FOUND IN TSPRINT1'
          SAY ' '
          SAY 'DO YOU WANT TO ACCESS TSPRINT1'
          SAY '(Y)ES OR (N)O'
          PARSE UPPER EXTERNAL ANSWER
          IF ANSWER = "Y" THEN
            CALL TSP1
          ELSE
            EXIT
        END
      ELSE
        I = I + 1
    END
END

TWO:
I = 1
DO FOREVER
  MATCH = INDEX(INPUT2.I,LUNAME)
  IF I = INPUT2.0 THEN
    DO
      SAY LUNAME || ' NOT FOUND IN TSPRINT2'
      CALL THREE
    END
  ELSE
    DO
      IF MATCH > 0 THEN
        DO
          SAY LUNAME || ' FOUND IN TSPRINT2'
          SAY ' '
          SAY 'DO YOU WANT TO ACCESS TSPRINT2'
          SAY '(Y)ES OR (N)O'
          PARSE UPPER EXTERNAL ANSWER
          IF ANSWER = "Y" THEN
            CALL TSP2
          ELSE
            EXIT
        END
      ELSE
        I = I + 1
    END
END

THREE:
I = 1
DO FOREVER
  MATCH = INDEX(INPUT3.I,LUNAME)
  IF I = INPUT3.0 THEN
    DO
      SAY LUNAME || ' NOT FOUND IN TSPRINT3'
      CALL FOUR
    END
  ELSE
    DO
      IF MATCH > 0 THEN
        DO
          SAY LUNAME || ' FOUND IN TSPRINT3'
          SAY ' '
          SAY 'DO YOU WANT TO ACCESS TSPRINT3'
          SAY '(Y)ES OR (N)O'
          PARSE UPPER EXTERNAL ANSWER
          IF ANSWER = "Y" THEN
            CALL TSP3
          ELSE
            EXIT
        END
      ELSE
        I = I + 1
    END
END

FOUR:
I = 1
DO FOREVER
  MATCH = INDEX(INPUT4.I,LUNAME)
  IF I = INPUT4.0 THEN
    DO
      SAY LUNAME || ' NOT FOUND IN TSPRINT4'
      CALL FIVE
    END
  ELSE
    DO
      IF MATCH > 0 THEN
        DO
          SAY LUNAME || ' FOUND IN TSPRINT4'
          SAY ' '
          SAY 'DO YOU WANT TO ACCESS TSPRINT4'
          SAY '(Y)ES OR (N)O'
          PARSE UPPER EXTERNAL ANSWER
          IF ANSWER = "Y" THEN
            CALL TSP4
          ELSE
            EXIT
        END
      ELSE
        I = I + 1
    END
END

FIVE:
I = 1
DO FOREVER
  MATCH = INDEX(INPUT5.I,LUNAME)
  IF I = INPUT5.0 THEN
    DO
      SAY LUNAME || ' NOT FOUND IN TSPRINT5'
      CALL SIX
    END
  ELSE
    DO
      IF MATCH > 0 THEN
        DO
          SAY LUNAME || ' FOUND IN TSPRINT5'
          SAY ' '
          SAY 'DO YOU WANT TO ACCESS TSPRINT5'
          SAY '(Y)ES OR (N)O'
          PARSE UPPER EXTERNAL ANSWER
          IF ANSWER = "Y" THEN
            CALL TSP5
          ELSE
            EXIT
        END
      ELSE
        I = I + 1
    END
END

SIX:
I = 1
DO FOREVER
  MATCH = INDEX(INPUT6.I,LUNAME)
  IF I = INPUT6.0 THEN
    DO
      SAY LUNAME || ' NOT FOUND IN TSPRINT6'
      CALL MSG2
    END
  ELSE
    DO
      IF MATCH > 0 THEN
        DO
          SAY LUNAME || ' FOUND IN TSPRINT6'
          SAY ' '
          SAY 'DO YOU WANT TO ACCESS TSPRINT6'
          SAY '(Y)ES OR (N)O'
          PARSE UPPER EXTERNAL ANSWER
          IF ANSWER = "Y" THEN
            CALL TSP6
          ELSE
            EXIT
        END
      ELSE
        I = I + 1
    END
END

MSG1: SAY ""
SAY ""
SAY "----------------------------------------------------"
SAY "ø                                                  ø"
SAY "ø  PRINTER ADRESS MUST BE MORE THE 4 CHARACTERS    ø"
SAY "ø  AND LESS THEN 8                                 ø"
SAY "ø                                                  ø"
SAY "----------------------------------------------------"
EXIT

MSG2: SAY ""
SAY "----------------------------------------------------"
SAY "ø                                                  ø"
SAY "ø  PRINTER ADRESS WAS NOT FOUND IN ANY TSPRINT     ø"
SAY "ø  PLEASE CHECK YOUR INPUT                         ø"
SAY "ø                                                  ø"
SAY "----------------------------------------------------"
EXIT

TSP1:
TSOEXEC TSPRINT
EXIT

TSP2:
TSOEXEC TSP TSPRINT2
EXIT

TSP3:
TSOEXEC TSP TSPRINT3
EXIT

TSP4:
TSOEXEC TSP TSPRINT4
EXIT

TSP5:
TSOEXEC TSP TSPRINT5
EXIT

TSP6:
TSOEXEC TSP TSPRINT6
EXIT

./ ADD NAME=THEUTIL  0101-01016-01016-1428-00136-00136-00000-RACFCLS
/* REXX */
/****************************/
/**THE PRINT MAINT         **/
/****************************/
"PROF NOPREF"
ARG INPUT
PARSE VALUE INPUT WITH INPUT ':' PRN

X = MSG('OFF')

SELECT
WHEN INPUT = "CREATE" THEN
 CALL ISISDSF
WHEN INPUT = "LIST" THEN
DO
 "ALLOC DA('MAINT.ISIS.FAULTY.PRINTER') FI(XXX) OLD"
 IF RC <> 0 THEN
 DO
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
  SAY "                          +--------------------+"
  SAY "                          ø CREATE FACILITY IS ø"
  SAY "                          ø STILL BUSY         ø"
  SAY "                          ø PLEASE WAIT ....   ø"
  SAY "                          +--------------------+"
 END
ELSE
DO
 "FREE FI(XXX)"
 "ISPEXEC BROWSE DATASET('MAINT.ISIS.FAULTY.PRINTER')"
END
END
WHEN INPUT = "SUMMARY" THEN
DO
 "ALLOC DA('MAINT.ISIS.FAULTY.PRINTER.SUM') FI(XXX) OLD"
 IF RC <> 0 THEN
 DO
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
  SAY "                          +--------------------+"
  SAY "                          ø CREATE FACILITY IS ø"
  SAY "                          ø STILL BUSY         ø"
  SAY "                          ø PLEASE WAIT ....   ø"
  SAY "                          +--------------------+"
 END
ELSE
DO
 "FREE FI(XXX)"
 "ISPEXEC BROWSE DATASET('MAINT.ISIS.FAULTY.PRINTER.SUM')"
END
END
WHEN INPUT = "PRINTER" THEN
DO
 "ALLOC DA('MAINT.ISIS.PRINTER') FI(XXX) OLD"
 IF RC <> 0 THEN
 DO
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
  SAY "                          +--------------------+ "
  SAY "                          ø CREATE FACILITY IS ø "
  SAY "                          ø STILL BUSY         ø "
  SAY "                          ø PLEASE WAIT ....   ø "
  SAY "                          +--------------------+ "
 END
ELSE
DO
 "FREE FI(XXX)"
 "ISPEXEC EDIT DATASET('MAINT.ISIS.PRINTER')"
END
END
WHEN INPUT = "PRINT1" THEN
DO
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
  SAY "                          +--------------------+ "
  SAY "                          ø LISTING ROUTED TO  ø "
  SAY "                          ø "PRN"           ø "
  SAY "                          +--------------------+ "
 PR = '"PRINTOFF MAINT.ISIS.FAULTY.PRINTER DEST('PRN')"'
 INTERPRET PR
END
WHEN INPUT = "PRINT2" THEN
DO
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
SAY " "
  SAY "                          +--------------------+ "
  SAY "                          ø LISTING ROUTED TO  ø "
  SAY "                          ø "PRN"           ø "
  SAY "                          +--------------------+ "
 PR = '"PRINTOFF MAINT.ISIS.FAULTY.PRINTER.SUM DEST('PRN')"'
 INTERPRET PR
END
OTHERWISE
NOP
END
EXIT
./ ADD NAME=TSOALST  0101-01016-01016-1428-00045-00045-00000-RACFCLS
PROC 0 PRINTER() OUTCLASS()
WRITE
WRITE
WRITE
SET PROCID = &SUBSTR(5:6,&SYSUID)
SET SPROC =  &SUBSTR(5:&LENGTH(&SYSPROC),&SYSPROC)
IF &PROCID NE AD AND &SPROC NE ADMN THEN +
DO
  WRITE
  WRITE   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  WRITE   !!!!                  &SYSUID                      !!!!
  WRITE   !!!!                  -------                      !!!!
  WRITE   !!!!  YOU ARE NOT AUTHORIZED TO USE THIS FUNCTION  !!!!
  WRITE   !!!!                                               !!!!
  WRITE   !!!!  YOUR SYSTEM PROGRAMMERS ARE NOTIFIED OF THIS !!!!
  WRITE   !!!!  ATTEMPT TO LIST USERID'S                     !!!!
  WRITE   !!!!                                               !!!!
  WRITE   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  SE '&SYSUID HET PROBEER OM USERIDS TE LIST',U(SYS0006),LOGON
  SE '&SYSDATE &SYSTIME                     ',U(SYS0006),LOGON
  GOTO XXX
END
WRITE
WRITE LIST ALL RACF USERS IN YOUR GROUP
SET LYN = &STR(---------------------------------)
WRITE &LYN
WRITE
WRITE JOBNAME            : &SYSUID.N
WRITE OUTPUT DIRECTED TO : &PRINTER
WRITE PRINTCLASS         : &OUTCLASS
WRITE
SET SLSPRNT = &STR(/*ROUTE PRINT )
SUBMIT * END($$)
//&SYSUID.L JOB (1,REOPS,OPS,01),'USERID LIST',MSGCLASS=V,
//             NOTIFY=&SYSUID,CLASS=A
//*************************************
//*  PRINTS A LISTING OF ALL USERIDS  *
//*************************************
&SLSPRNT.&PRINTER
//LISTING  EXEC PGM=IKJEFT01,DYNAMNBR=20
//SYSTSPRT DD  SYSOUT=&OUTCLASS
//SYSTSIN  DD  *
   LISTUSER *
$$
XXX:WRITE
./ ADD NAME=TSOKASTI 0101-01016-01016-1428-00257-00257-00000-RACFCLS
/* REXX */
/* TO INITIALIE CARTRIDGE */

 ARG INPUT
 PARSE VALUE INPUT WITH REQUEST ':' REASON ':' KAST1 ':' KAST2 ':',
 KAST3 ':' KAST4 ':' KAST5 ':' KAST6 ':' KAST7 ':' KAST8 ':' KAST9 ':',
 KAST10':' KAST11':' KAST12':' KAST13':' KAST14':' KAST15':' KAST16':',
 KAST17':' KAST18':' KAST19':' KAST20
 SAY ""
 SAY ""
 SAY ""
 SAY ""
 SAY ""
 SAY ""
 X=MSG(OFF)
"ALLOC DA('TMS.KAST') F(KASTW1) OLD REUSE"
IF RC <> 0 THEN CALL BUSY
"ALLOC DA('TMS.TEMPKAST') F(KASTW2) OLD REUSE"
IF RC <> 0 THEN CALL BUSY


 TEL = 0
 IF DATATYPE(KAST1) = NUM THEN CALL FOUT1
 IF DATATYPE(KAST2) = NUM THEN CALL FOUT1
 IF DATATYPE(KAST3) = NUM THEN CALL FOUT1
 IF DATATYPE(KAST4) = NUM THEN CALL FOUT1
 IF DATATYPE(KAST5) = NUM THEN CALL FOUT1
 IF DATATYPE(KAST6) = NUM THEN CALL FOUT1
 IF DATATYPE(KAST7) = NUM THEN CALL FOUT1
 IF DATATYPE(KAST8) = NUM THEN CALL FOUT1
 IF DATATYPE(KAST9) = NUM THEN CALL FOUT1
 IF DATATYPE(KAST10) = NUM THEN CALL FOUT1
 IF DATATYPE(KAST11) = NUM THEN CALL FOUT1
 IF DATATYPE(KAST12) = NUM THEN CALL FOUT1
 IF DATATYPE(KAST13) = NUM THEN CALL FOUT1
 IF DATATYPE(KAST14) = NUM THEN CALL FOUT1
 IF DATATYPE(KAST15) = NUM THEN CALL FOUT1
 IF DATATYPE(KAST16) = NUM THEN CALL FOUT1
 IF DATATYPE(KAST17) = NUM THEN CALL FOUT1
 IF DATATYPE(KAST18) = NUM THEN CALL FOUT1
 IF DATATYPE(KAST19) = NUM THEN CALL FOUT1
 IF DATATYPE(KAST20) = NUM THEN CALL FOUT1

 IF KAST1 <> '' THEN
 DO
  TEL = TEL + 1
  VOL.TEL = KAST1
  OUT1. = "SYSUT1 INITT SER=" || KAST1
  CALL WRITE1
 END
 IF KAST2 <> '' THEN
 DO
  TEL = TEL + 1
  VOL.TEL = KAST2
  OUT1. = "SYSUT1 INITT SER=" || KAST2
  CALL WRITE1
 END
 IF KAST3 <> '' THEN
 DO
  TEL = TEL + 1
  VOL.TEL = KAST3
  OUT1. = "SYSUT1 INITT SER=" || KAST3
  CALL WRITE1
 END
 IF KAST4 <> '' THEN
 DO
  TEL = TEL + 1
  VOL.TEL = KAST4
  OUT1. = "SYSUT1 INITT SER=" || KAST4
  CALL WRITE1
 END
 IF KAST5 <> '' THEN
 DO
  TEL = TEL + 1
  VOL.TEL = KAST5
  OUT1. = "SYSUT1 INITT SER=" || KAST5
  CALL WRITE1
 END
 IF KAST6 <> '' THEN
 DO
  TEL = TEL + 1
  VOL.TEL = KAST6
  OUT1. = "SYSUT1 INITT SER=" || KAST6
  CALL WRITE1
 END
 IF KAST7 <> '' THEN
 DO
  TEL = TEL + 1
  VOL.TEL = KAST7
  OUT1. = "SYSUT1 INITT SER=" || KAST7
  CALL WRITE1
 END
 IF KAST8 <> '' THEN
 DO
  TEL = TEL + 1
  VOL.TEL = KAST8
  OUT1. = "SYSUT1 INITT SER=" || KAST8
  CALL WRITE1
 END
 IF KAST9 <> '' THEN
 DO
  TEL = TEL + 1
  VOL.TEL = KAST9
  OUT1. = "SYSUT1 INITT SER=" || KAST9
  CALL WRITE1
 END
 IF KAST10 <> '' THEN
 DO
  TEL = TEL + 1
  VOL.TEL = KAST10
  OUT1. = "SYSUT1 INITT SER=" || KAST10
  CALL WRITE1
 END
 IF KAST11 <> '' THEN
 DO
  TEL = TEL + 1
  VOL.TEL = KAST11
  OUT1. = "SYSUT1 INITT SER=" || KAST11
  CALL WRITE1
 END
 IF KAST12 <> '' THEN
 DO
  TEL = TEL + 1
  VOL.TEL = KAST12
  OUT1. = "SYSUT1 INITT SER=" || KAST12
  CALL WRITE1
 END
 IF KAST13 <> '' THEN
 DO
  TEL = TEL + 1
  VOL.TEL = KAST13
  OUT1. = "SYSUT1 INITT SER=" || KAST13
  CALL WRITE1
 END
 IF KAST14 <> '' THEN
 DO
  TEL = TEL + 1
  VOL.TEL = KAST14
  OUT1. = "SYSUT1 INITT SER=" || KAST14
  CALL WRITE1
 END
 IF KAST15 <> '' THEN
 DO
  TEL = TEL + 1
  VOL.TEL = KAST15
  OUT1. = "SYSUT1 INITT SER=" || KAST15
  CALL WRITE1
 END
 IF KAST16 <> '' THEN
 DO
  TEL = TEL + 1
  VOL.TEL = KAST16
  OUT1. = "SYSUT1 INITT SER=" || KAST16
  CALL WRITE1
 END
 IF KAST17 <> '' THEN
 DO
  TEL = TEL + 1
  VOL.TEL = KAST17
  OUT1. = "SYSUT1 INITT SER=" || KAST17
  CALL WRITE1
 END
 IF KAST18 <> '' THEN
 DO
  TEL = TEL + 1
  VOL.TEL = KAST18
  OUT1. = "SYSUT1 INITT SER=" || KAST18
  CALL WRITE1
 END
 IF KAST19 <> '' THEN
 DO
  TEL = TEL + 1
  VOL.TEL = KAST19
  OUT1. = "SYSUT1 INITT SER=" || KAST19
  CALL WRITE1
 END
 IF KAST20 <> '' THEN
 DO
  TEL = TEL + 1
  VOL.TEL = KAST20
  OUT1. = "SYSUT1 INITT SER=" || KAST20
  CALL WRITE1
 END

USER = SYSVAR(SYSUID)

/* WRITE TO STATS FILE */

OUT2. = "--------------------------------------------------------------
-----------------------------------"
CALL WRITE2
OUT2. = " INIT JOB STARTED BY "  USER "  " DATE(ORDERED) "  " TIME()
CALL WRITE2
OUT2. = "REQUESTED BY : " || REQUEST
CALL WRITE2
OUT2. = "REASON       : " || REASON
CALL WRITE2
OUT2. = "CARTRIDGES INITIALIZED : "
CALL WRITE2
A=1
DO WHILE A <> TEL
 OUT2. = "CARTRIDGE : " || VOL.A
 CALL WRITE2
 A = A + 1
END
OUT2. = ""
CALL WRITE2

"EXECIO 0 DISKW KASTW1 (FINIS"
"EXECIO 0 DISKW KASTW2 (FINIS"

"FREE  FI(KASTW1)"
"FREE  FI(KASTW2)"
CALL SUBMIT


WRITE1:
"EXECIO 1 DISKW KASTW1 (STEM OUT1."
RETURN

WRITE2:
"EXECIO 1 DISKW KASTW2 (STEM OUT2."
RETURN

FOUT1:
SAY "                      +------------ WARNING --------------+ "
SAY "                      |                                   | "
SAY "                      | YOU ARE NOT ALLOWED TO INITIALIZE | "
SAY "                      | ANY ROBOT CARTRIDGES              | "
SAY "                      | THIS INIT JOB IS TERMINATED       | "
SAY "                      |                                   | "
SAY "                      +-----------------------------------+ "
EXIT

BUSY:
SAY "                      +-----------------------------------+ "
SAY "                      |                                   | "
SAY "                      | INITITALIZATION DATASETS NOT      | "
SAY "                      | AVAILABLE                         | "
SAY "                      | ANOTHER INIT JOB IS RUNNING       | "
SAY "                      | TRY LATER               .......   | "
SAY "                      | ELSE CALL YOUR SYSTEM PROGRAMMER  | "
SAY "                      | FOR HELP                          | "
SAY "                      |                                   | "
SAY "                      +-----------------------------------+ "
EXIT

SUBMIT:
SAY ""
SAY ""
SAY ""
SAY "                           +-------------------------+ "
SAY "                           | KASTINIT JOB SUBMITTED  | "
SAY "                           +-------------------------+ "
SAY ""
"SUBMIT ('SYS2.RACFCLST(KASTINIT)')"
EXIT
./ ADD NAME=TSOUADD  0101-01016-01016-1428-00253-00253-00000-RACFCLS
/* REXX */
/* TO ADD USERID */

 ARG INPUT
 PARSE VALUE INPUT WITH ID ':' NAME ':' PSW
 PARSE VALUE ID WITH ID3 4 DUMMY
 PARSE VALUE ID WITH ID4 5 DUMMY
 PARSE VALUE ID WITH DUMMY 4 TSTNR 5 IDNR


 NM = "'"NAME"'"

 SAY ""
 SAY ""
 SAY ""
 SAY ""
 SAY ""
 SAY ""
 SAY ""

 UID = SYSVAR(SYSUID)
 PARSE VALUE UID WITH DUMMY 4 ADNR 5 DUMMY
 PARSE VALUE UID WITH AD3 4 DUMMY

 /**********/
 /* GROUP  */
 /**********/
 PR. =''
 /* PR.DNS = "DIENSKRL" */
 PR.DNSA = "DNSA"
 PR.DNSB = "DNSB"
 PR.DNSC = "DNSC"
 PR.DNSD = "DNSD"
 PR.DNSE = "DNSE"
 PR.DNSF = "DNSF"
 PR.DNSG = "DNSG"
 PR.DNSH = "DNSH"
 PR.DNSI = "DNSI"
 PR.DNSJ = "DNSJ"
 PR.DNSK = "DNSK"
 PR.KRI0 = "KRS"
 PR.NET0 = "NETWORK"
 PR.MED0 = "MEDIA"
 PR.OPS0 = "OPERATOR"
 PR.PRG0 = "PROGRAMR"
 PR.PRG1 = "PROGRAMR"
 PR.PRG2 = "PROGRAMR"
 PR.PRG3 = "PROGRAMR"

 /*************************************************************/
 /* MAXIMUM USERS FOR EVERY ADMINISTRATOR                     */
 /* THE FOURTH CHARACTER IS THE TEST CAHARACTER FOR EVERY ADM */
 /*************************************************************/
 MAX. = 0
 MAX.DNSA = 30
 MAX.DNSB = 30
 MAX.DNSC = 30
 MAX.DNSD = 30
 MAX.DNSE = 30
 MAX.DNSF = 30
 MAX.DNSG = 30
 MAX.DNSH = 30
 MAX.DNSE = 30
 MAX.DNSF = 30
 MAX.DNSI = 30
 MAX.DNSJ = 30
 MAX.DNSK = 30
 MAX.KRI0 = 30
 MAX.NET0 = 25
 MAX.MED0 = 15
 MAX.OPS0 = 50
 MAX.PRG0 = 07
 MAX.PRG1 = 75
 MAX.PRG2 = 75
 MAX.PRG3 = 75
 MAX.PRG4 = 00
 MAX.PRG5 = 00
 MAX.PRG6 = 00
 MAX.PRG7 = 00
 MAX.PRG8 = 00
 MAX.PRG9 = 00
 MAX.PRGA = 00

 /***************/
 /* SIGNON PROC */
 /***************/
 SN. = ''
 SN.DNS = "DIENSKRL"
 SN.KRI = "SPFKRI"
 SN.NET = "NETWORK"
 SN.MED = "MEDIA"
 SN.OPS = "OPERATOR"
 SN.PRG = "PROGRAMR"

 /**************/
 /* ACCOUNTING */
 /**************/
 AC. = ''
 AC.DNS = "$REDNS"
 AC.KRI = "$REKRI"
 AC.NET = "$RENET"
 AC.MED = "$REMED"
 AC.OPS = "$REOPS"
 AC.PRG = "$REPRG"

 /***********************/
 /* DEFAULT REGION SIZE */
 /***********************/
 RS. = 1024
 RS.DNS = 1024
 RS.KRI = 1024
 RS.NET = 2048
 RS.MED = 2048
 RS.OPS = 4096
 RS.PRG = 4096

 /***********************/
 /* MAXIMUM REGION SIZE */
 /***********************/
 RM. = 1024
 RM.DNS = 2048
 RM.KRI = 2048
 RM.NET = 2048
 RM.MED = 2048
 RM.OPS = 4096
 RM.PRG = 8192

 IF IDNR <= 0 OR IDNR >= 999 THEN CALL MSG1
 IF AD3 <> ID3 THEN CALL MSG2

 SELECT
  WHEN ID3 = "DNS" THEN NOP
  WHEN ID3 = "KRI" THEN NOP
  WHEN ID3 = "NET" THEN NOP
  WHEN ID3 = "MED" THEN NOP
  WHEN ID3 = "OPS" THEN NOP
  WHEN ID3 = "PRG" THEN NOP
 OTHERWISE
  CALL MSG1
 END

 IF TSTNR <> ADNR THEN CALL MSG2
 IF IDNR > MAX.ID4 THEN CALL MSG3

 DSN =  ID'.JCL.LIB'
 AT1 =  "ALLOC FI(JCLLIB) SHR DA('"ID".JCL.LIB')"
 AT2 =  "ALLOC DA('"ID".JCL.LIB') SP(15,15) TRACKS DSNTYPE=LIBRARY",
     "DIR(20) DSORG(PO) RECFM(F B) LRECL(80) BLKSIZE(18400) FI(JCLLIB)"
 AL1 = '"'AT1'"'
 AL2 = '"'AT2'"'
 AD1 = '"AD" 'ID'".* GENERIC UACC(NONE)"'
 ADD = '"ADDUSER ('ID') NAME('NM') DFLTGRP('PR.ID4')',
        'PASSWORD('PSW')',
        'OWNER('PR.ID4')',
        'TSO (ACCTNUM('AC.ID3') PROC('SN.ID3') MAXSIZE('RM.ID3')',
        'SIZE('RS.ID3') UNIT(SYSDA))"'
 FR = '"FREE FI(JCLLIB)"'
 COPY1 = "SMCOPY FROMDATASET('SYS2.RACFCLST($$$COIBM)')",
         "TODATASET('"ID".JCL.LIB($$$COIBM)')"
 COPY2 = "SMCOPY FROMDATASET('SYS2.RACFCLST(COMPRESS)')",
         "TODATASET('"ID".JCL.LIB(COMPRESS)')"

 COPY1 = '"'COPY1'"'
 COPY2 = '"'COPY2'"'

 ALIAS = '"DEFINE ALIAS (NAME('ID') REL(CAT.TSOUSER.UCAT))"'
 IF IDNR <= MAX.ID4 THEN
 DO
  MS = MSG('OFF')
  INTERPRET ALIAS
  IF ID3 <> DNS THEN
  DO
   INTERPRET AL1
   IF RC <> 0 THEN INTERPRET AL2
   IF RC = 0 THEN
    SAY "                       DATASET: '"DSN"' ALLOCATED"
   INTERPRET COPY1
   INTERPRET COPY2
  END

  INTERPRET ADD
  IF RC = 0 THEN
  DO
   SAY ""
   SAY "                       RETURN CODE :" RC
   SAY "                       USERID      :" ID
   SAY "                       NAME        :" NAME
   SAY "                       PASSWORD    :" PSW
   SAY ""
   SAY "                       SUCCESSFULLY ADDED"
  END
  ELSE
  DO
   SAY ""
   SAY "                       RETURN CODE :" RC
   SAY ""
   SAY "                       "ID "NOT ADDED DUE TO CONDITION CODE"
   SAY "                       IT IS POSSIBLE THAT "ID" ALREADY EXIST"
  END

  INTERPRET AD1
  IF RC = 0 THEN
  DO
   SAY ""
   SAY "                       RETURN CODE :" RC
   SAY "                       USERID      :" ID
   SAY ""
   SAY "                   DATASET SUCCESSFULLY ADDED"
  END
  ELSE
  DO
   SAY ""
   SAY "                       RETURN CODE :" RC
   SAY ""
   SAY "                       DATASET NOT ADDED DUE TO CONDITION CODE"
   SAY "                       PHONE SUPPORT"
  END

  IF ID3 <> DNS THEN INTERPRET FR
  MS = MSG('ON')
  EXIT
 END

  /***********/
  /* MESAGES */
  /***********/

  MSG1: SAY ""
  SAY "                       +----------------+ "
  SAY "                       ø INVALID USERID ø "
  SAY "                       ø                ø "
  SAY "                       ø RESPECIFY .... ø "
  SAY "                       +----------------+ "
  SAY ""
  EXIT

  MSG2: SAY ""
  SAY "               +---------------------------------------+"
  SAY "               ø YOU ARE NOT AUTHORIZED TO ADD THIS ID ø"
  SAY "               ø                                       ø"
  SAY "               ø ONLY "AD3||ADNR"*** ALLOWED                  ø"
  SAY "               +---------------------------------------+"
  SAY ""
  EXIT

  MSG3: SAY ""
  SAY "               +-----------------------------------------+ "
  SAY "               ø INVALID USERID - NUMERIC VALUE TO LARGE ø"
  SAY "               ø                                         ø"
  SAY "               ø   PLEASE CALL YOUR SYSTEM PROGRAMMER    ø"
  SAY "               +-----------------------------------------+ "
  SAY ""
  EXIT
./ ADD NAME=TSOUDEL  0101-01016-01016-1428-00109-00109-00000-RACFCLS
/* REXX */
 ARG INPUT
 PARSE VALUE INPUT WITH ID
 PARSE VALUE ID WITH ID3 4 DUMMY
 PARSE VALUE ID WITH ID4 5 DUMMY
 PARSE VALUE ID WITH DUMMY 4 TSTNR 5 IDNR


 SAY ""
 SAY ""
 SAY ""
 SAY ""
 SAY ""
 SAY ""
 SAY ""

 UID = SYSVAR(SYSUID)
 PARSE VALUE UID WITH DUMMY 4 ADNR 5 DUMMY
 PARSE VALUE UID WITH AD3 4 DUMMY

 IF IDNR <= 0 OR IDNR >= 999 THEN CALL MSG1
 IF AD3 <> ID3 THEN CALL MSG2

 SELECT
  WHEN ID3 = "DNS" THEN NOP
  WHEN ID3 = "KRI" THEN NOP
  WHEN ID3 = "NET" THEN NOP
  WHEN ID3 = "MED" THEN NOP
  WHEN ID3 = "OPS" THEN NOP
  WHEN ID3 = "PRG" THEN NOP
 OTHERWISE
  CALL MSG1
 END

 IF TSTNR <> ADNR THEN CALL MSG2

 DEL = '"DELUSER ('ID')"'
 DE1 = '"DD" 'ID'".* GENERIC NOSET"'

 MS = MSG('OFF')
 INTERPRET DE1
 IF RC = 0 THEN
  DO
   SAY ""
   SAY "                       RETURN CODE :" RC
   SAY ""
   SAY "                       USERID      :" ID
   SAY ""
   SAY "            DATASET SUCCESSFULLY DELETED"
  END
  ELSE
  DO
   SAY ""
   SAY "                       RETURN CODE :" RC
   SAY ""
   SAY "               DATASET " ID "NOT DELETED"
   SAY ""
   SAY "                 PHONE SYSTEM SUPPORT"
  END
 INTERPRET DEL
 IF RC = 0 THEN
  DO
   SAY ""
   SAY "                       RETURN CODE :" RC
   SAY ""
   SAY "                       USERID      :" ID
   SAY ""
   SAY "                       SUCCESSFULLY DELETED"
  END
  ELSE
  DO
   SAY ""
   SAY "                       RETURN CODE :" RC
   SAY ""
   SAY "                       "ID "NOT DELETED"
   SAY ""
   SAY "                       IT IS POSSIBLE THAT"
   SAY "                       THE ID DOES NOT EXITS"
   SAY ""
   SAY "                       ELSE:"
   SAY "                       PLEASE CALL YOUR"
   SAY "                       SYSTEM PROGRAMMER"
   SAY "                       FOR HELP"
  END
  MS = MSG('ON')
  EXIT

  /***********/
  /* MESAGES */
  /***********/

  MSG1: SAY ""
  SAY "                       +----------------+ "
  SAY "                       ø INVALID USERID ø "
  SAY "                       ø                ø "
  SAY "                       ø RESPECIFY .... ø "
  SAY "                       +----------------+ "
  SAY ""
  EXIT

  MSG2: SAY ""
  SAY "            +------------------------------------------+"
  SAY "            ø YOU ARE NOT AUTHORIZED TO DELETE THIS ID ø"
  SAY "            ø                                          ø"
  SAY "            ø ONLY "AD3||ADNR"*** ALLOWED                     ø"
  SAY "            +------------------------------------------+"
  SAY ""
  EXIT

./ ADD NAME=TSOULST  0101-01016-01016-1428-00082-00082-00000-RACFCLS
/* REXX */
 ARG INPUT
 PARSE VALUE INPUT WITH ID
 PARSE VALUE ID WITH ID3 4 DUMMY
 PARSE VALUE ID WITH ID4 5 DUMMY
 PARSE VALUE ID WITH DUMMY 4 TSTNR 5 IDNR


 SAY ""
 SAY ""

 UID = SYSVAR(SYSUID)
 PARSE VALUE UID WITH DUMMY 4 ADNR 5 DUMMY
 PARSE VALUE UID WITH AD3 4 DUMMY

 IF IDNR <= 0 OR IDNR >= 999 THEN CALL MSG1
 IF AD3 <> ID3 THEN CALL MSG2

 SELECT
  WHEN ID3 = "DNS" THEN NOP
  WHEN ID3 = "KRI" THEN NOP
  WHEN ID3 = "NET" THEN NOP
  WHEN ID3 = "MED" THEN NOP
  WHEN ID3 = "OPS" THEN NOP
  WHEN ID3 = "PRG" THEN NOP
  WHEN ID3 = "RAD" THEN NOP
 OTHERWISE
  CALL MSG1
 END


 LST = '"LISTUSER ('ID') "'

 MS = MSG('OFF')
 INTERPRET LST
 IF RC <> 0 THEN
 DO
  SAY ""
  SAY ""
  SAY ""
  SAY "                       RETURN CODE :" RC
  SAY ""
  SAY "                       "ID "NOT LISTED"
  SAY ""
  SAY "                       IT IS POSSIBLE THAT"
  SAY "                       THE ID DOES NOT EXITS"
  SAY ""
  SAY "                       ELSE:"
  SAY "                       PLEASE CALL YOUR"
  SAY "                       SYSTEM PROGRAMMER"
  SAY "                       FOR HELP"
 END
  MS = MSG('ON')
  EXIT

  /***********/
  /* MESAGES */
  /***********/

  MSG1: SAY ""
  SAY "                       +----------------+ "
  SAY "                       ø INVALID USERID ø "
  SAY "                       ø                ø "
  SAY "                       ø RESPECIFY .... ø "
  SAY "                       +----------------+ "
  SAY ""
  EXIT

  MSG2: SAY ""
  SAY ""
  SAY ""
  SAY ""
  SAY ""
  SAY ""
  SAY "             +----------------------------------------+"
  SAY "             ø YOU ARE NOT AUTHORIZED TO LIST THIS ID ø"
  SAY "             ø                                        ø"
  SAY "             ø ONLY "AD3||ADNR"*** ALLOWED                   ø"
  SAY "             +----------------------------------------+"
  SAY ""
  EXIT

./ ADD NAME=TSOURES  0101-01016-01016-1428-00098-00098-00000-RACFCLS
/* REXX */
/* REXX TO CHANGE PASSWORD, NAME OF EXISTING USERID */

 ARG INPUT
 PARSE VALUE INPUT WITH ID ':' NAME ':' PSW
 PARSE VALUE ID WITH ID3 4 DUMMY
 PARSE VALUE ID WITH ID4 5 DUMMY
 PARSE VALUE ID WITH DUMMY 4 TSTNR 5 IDNR

 IF NAME <> '' THEN NM = "'"NAME"'"

 SAY ""
 SAY ""
 SAY ""
 SAY ""
 SAY ""
 SAY ""
 SAY ""

 UID = SYSVAR(SYSUID)
 PARSE VALUE UID WITH DUMMY 4 ADNR 5 DUMMY
 PARSE VALUE UID WITH AD3 4 DUMMY


 IF IDNR <= 0 OR IDNR >= 999 THEN CALL MSG1
 IF AD3 <> ID3  /* OR AD3 <> "DOK" */ THEN CALL MSG2

 SELECT
  WHEN ID3 = "DNS" THEN NOP
  WHEN ID3 = "KRI" THEN NOP
  WHEN ID3 = "NET" THEN NOP
  WHEN ID3 = "MED" THEN NOP
  WHEN ID3 = "OPS" THEN NOP
  WHEN ID3 = "PRG" THEN NOP
 OTHERWISE
  CALL MSG1
 END

 /* IF TSTNR <> ADNR THEN CALL MSG2 */

 IF NAME  <> '' THEN
  ALT = '"ALTUSER ('ID') NAME('NM') PASSWORD('PSW') RESUME"'
 ELSE
  ALT = '"ALTUSER ('ID') PASSWORD('PSW') RESUME"'

 MS = MSG('OFF')
 INTERPRET ALT
 IF RC = 0 THEN
  DO
   SAY ""
   SAY "                       RETURN CODE :" RC
   SAY "                       USERID      :" ID
   IF NAME <> '' THEN
   SAY "                       NAME        :" NAME
   SAY "                       PASSWORD    :" PSW
   SAY ""
   SAY "                       SUCCESSFULLY CHANGED"
  END
  ELSE
  DO
   SAY ""
   SAY "                       RETURN CODE :" RC
   SAY ""
   SAY "                       "ID "NOT CHANGED"
   SAY ""
   SAY "                       "IT IS POSSIBLE THAT"
   SAY "                       "THE ID DOES NOT EXITS"
   SAY ""
   SAY "                       ELSE:"
   SAY "                       PLEASE CALL YOUR"
   SAY "                       SYSTEM PROGRAMMER"
   SAY "                       FOR HELP"
  END
  MS = MSG('ON')
  EXIT

  /***********/
  /* MESAGES */
  /***********/

  MSG1: SAY ""
  SAY "                       +----------------+ "
  SAY "                       ø INVALID USERID ø "
  SAY "                       ø                ø "
  SAY "                       ø RESPECIFY .... ø "
  SAY "                       +----------------+ "
  SAY ""
  EXIT

  MSG2: SAY ""
  SAY "            +------------------------------------------+"
  SAY "            ø YOU ARE NOT AUTHORIZED TO CHANGE THIS ID ø"
  SAY "            ø                                          ø"
  SAY "            ø ONLY "AD3||ADNR"*** ALLOWED                     ø"
  SAY "            +------------------------------------------+"
  SAY ""
  EXIT

./ ADD NAME=TSPDAREK 0101-01016-01016-1428-00345-00345-00000-RACFCLS
/* THIS REXX PROCEDURE SEARCH FOR SPESIFIC PRINTER IN TSP BATCH */
SAY ' '
SAY ' '
SAY ' '
SAY ' '
BEGIN:
ARG LUNAME
IF LUNAME = "" THEN
  IF LUNAME = "END" THEN
    EXIT
  ELSE
    DO
      SAY ' '
      SAY 'Specify the VTAM LUNAME or END to finish?'
      PARSE UPPER EXTERNAL LUNAME
      IF LUNAME = "END" THEN CALL END
    END
STRING_LENGTH = LENGTH(LUNAME)
IF STRING_LENGTH < 4 | STRING_LENGTH > 8 THEN
  DO UNTIL STRING_LENGTH > 3 & STRING_LENGTH < 9                        020006
    IF STRING_LENGTH < 4 THEN                                           020006
      SAY 'You must at least specify 4 characters!!!'                   020006
    IF STRING_LENGTH > 8 THEN                                           020006
      SAY 'The name can only be up to 8 characters - See...'            020006
    SAY 'Guess what? - Respecify the VTAM LUNAME or END?'               030006
    PARSE UPPER EXTERNAL LUNAME                                         040000
    IF LUNAME = "END" THEN EXIT
    STRING_LENGTH = LENGTH(LUNAME)                                      000400
  END                                                                   040000
"ALLOC FI(INPUT1) DA(SYS2.TSPRINT.ASMJES1) SHR REUSE"
"ALLOC FI(INPUT2) DA(SYS2.TSPRINT.ASMJES2) SHR REUSE"
"ALLOC FI(INPUT3) DA(SYS2.TSPRINT.ASMJES3) SHR REUSE"
"ALLOC FI(INPUT4) DA(SYS2.TSPRINT.ASMJES4) SHR REUSE"
"ALLOC FI(INPUT5) DA(SYS2.TSPRINT.ASMJES5) SHR REUSE"
"ALLOC FI(INPUT6) DA(SYS2.TSPRINT.ASMJES6) SHR REUSE"
"ALLOC FI(INPUT7) DA(SYS2.TSPRINT.ASMJES7) SHR REUSE"
"ALLOC FI(INPUT8) DA(SYS2.TSPRINT.ASMJES8) SHR REUSE"
"ALLOC FI(INPUT9) DA(SYS2.TSPRINT.ASMJES9) SHR REUSE"
"ALLOC FI(INPUT10) DA(SYS2.TSPRINT.ASMOFS) SHR REUSE"
"ALLOC FI(INPUT0) DA(SYS2.JES2PRT) SHR REUSE"
"EXECIO * DISKR INPUT1 (FINIS STEM INPUT1."
"EXECIO * DISKR INPUT2 (FINIS STEM INPUT2."
"EXECIO * DISKR INPUT3 (FINIS STEM INPUT3."
"EXECIO * DISKR INPUT4 (FINIS STEM INPUT4."
"EXECIO * DISKR INPUT5 (FINIS STEM INPUT5."
"EXECIO * DISKR INPUT6 (FINIS STEM INPUT6."
"EXECIO * DISKR INPUT7 (FINIS STEM INPUT7."
"EXECIO * DISKR INPUT8 (FINIS STEM INPUT8."
"EXECIO * DISKR INPUT9 (FINIS STEM INPUT9."
"EXECIO * DISKR INPUT0 (FINIS STEM INPUT0."
"EXECIO * DISKR INPUT10 (FINIS STEM INPUT10."
"FREE FI(INPUT1)"
"FREE FI(INPUT2)"
"FREE FI(INPUT3)"
"FREE FI(INPUT4)"
"FREE FI(INPUT5)"
"FREE FI(INPUT6)"
"FREE FI(INPUT7)"
"FREE FI(INPUT8)"
"FREE FI(INPUT9)"
"FREE FI(INPUT0)"
"FREE FI(INPUT10)"
SAY 'NOTE: You ask me to look for 'LUNAME
I = 1
FOUND = "FALSE"
DO FOREVER
  MATCH = INDEX(INPUT1.I,LUNAME)
  IF I = INPUT1.0 THEN
    DO
      SAY 'Unfortunately no match found in batch of TSPRINT1'
      CALL TWO
    END
  ELSE
    DO
      IF MATCH > 0 THEN
        DO
          SAY 'There is a match in batch of TSPRINT1 !!'
          SAY ' '
          SAY 'Do you want to search throught the next TSPRINTS(Y/N)?'
          PARSE UPPER EXTERNAL ANSWER
          IF ANSWER = "Y" THEN
            CALL TWO
          ELSE
            CALL JES2
        END
      ELSE
        I = I + 1
    END
END
TWO:
i = 1
DO FOREVER
  MATCH = INDEX(INPUT2.I,LUNAME)
  IF I = INPUT2.0 THEN
    DO
      SAY 'Unfortunately no match found in batch of TSPRINT2'
      CALL THREE
    END
  ELSE
    DO
      IF MATCH > 0 THEN
        DO
          SAY 'There is a match in batch of TSPRINT2 !!'
          SAY ' '
          SAY 'Do you want to search throught the next TSPRINTS(Y/N)?'
          PARSE UPPER EXTERNAL ANSWER
          IF ANSWER = "Y" THEN
            CALL THREE
          ELSE
            CALL JES2
        END
      ELSE
        I = I + 1
    END
END
THREE:
i = 1
DO FOREVER
  MATCH = INDEX(INPUT3.I,LUNAME)
  IF I = INPUT3.0 THEN
    DO
      SAY 'Unfortunately no match found in batch of TSPRINT3'
      CALL FOUR
    END
  ELSE
    DO
      IF MATCH > 0 THEN
        DO
          SAY 'There is a match in batch of TSPRINT3 !!'
          SAY ' '
          SAY 'Do you want to search throught the next TSPRINTS(Y/N)?'
          PARSE UPPER EXTERNAL ANSWER
          IF ANSWER = "Y" THEN
            CALL FOUR
          ELSE
            CALL JES2
        END
      ELSE
        I = I + 1
    END
END
FOUR:
i = 1
DO FOREVER
  MATCH = INDEX(INPUT4.I,LUNAME)
  IF I = INPUT4.0 THEN
    DO
      SAY 'Unfortunately no match found in batch of TSPRINT4'
      CALL FIVE
    END
  ELSE
    DO
      IF MATCH > 0 THEN
        DO
          SAY 'There is a match in batch of TSPRINT4 !!'
          SAY ' '
          SAY 'Do you want to search throught the next TSPRINTS(Y/N)?'
          PARSE UPPER EXTERNAL ANSWER
          IF ANSWER = "Y" THEN
            CALL FIVE
          ELSE
            CALL JES2
        END
      ELSE
        I = I + 1
    END
END
FIVE:
i = 1
DO FOREVER
  MATCH = INDEX(INPUT5.I,LUNAME)
  IF I = INPUT5.0 THEN
    DO
      SAY 'Unfortunately no match found in batch of TSPRINT5'
      CALL SIX
    END
  ELSE
    DO
      IF MATCH > 0 THEN
        DO
          SAY 'There is a match in batch of TSPRINT5 !!'
          SAY ' '
          SAY 'Do you want to search throught the next TSPRINTS(Y/N)?'
          PARSE UPPER EXTERNAL ANSWER
          IF ANSWER = "Y" THEN
            CALL SIX
          ELSE
            CALL JES2
        END
      ELSE
        I = I + 1
    END
END
SIX:
i = 1
DO FOREVER
  MATCH = INDEX(INPUT6.I,LUNAME)
  IF I = INPUT6.0 THEN
    DO
      SAY 'Unfortunately no match found in batch of TSPRINT6'
      CALL SEVEN
    END
  ELSE
    DO
      IF MATCH > 0 THEN
        DO
          SAY 'There is a match in batch of TSPRINT6 !!'
          SAY ' '
          SAY 'Do you want to search throught the next TSPRINTS(Y/N)?'
          PARSE UPPER EXTERNAL ANSWER
          IF ANSWER = "Y" THEN
            CALL SEVEN
          ELSE
            CALL JES2
        END
      ELSE
        I = I + 1
    END
END
seven:
i = 1
DO FOREVER
  MATCH = INDEX(INPUT7.I,LUNAME)
  IF I = INPUT7.0 THEN
    DO
      SAY 'Unfortunately no match found in batch of TSPRINT7'
      CALL eight
    END
  ELSE
    DO
      IF MATCH > 0 THEN
        DO
          SAY 'There is a match in batch of TSPRINT7 !!'
          SAY ' '
          SAY 'Do you want to search throught the next TSPRINTS(Y/N)?'
          PARSE UPPER EXTERNAL ANSWER
          IF ANSWER = "Y" THEN
            CALL eight
          ELSE
            CALL JES2
        END
      ELSE
        I = I + 1
    END
END
eight:
i = 1
DO FOREVER
  MATCH = INDEX(INPUT8.I,LUNAME)
  IF I = INPUT8.0 THEN
    DO
      SAY 'Unfortunately no match found in batch of TSPRINT8'
      CALL nine
    END
  ELSE
    DO
      IF MATCH > 0 THEN
        DO
          SAY 'There is a match in batch of TSPRINT8 !!'
          SAY ' '
          SAY 'Do you want to search throught the next TSPRINTS(Y/N)?'
          PARSE UPPER EXTERNAL ANSWER
          IF ANSWER = "Y" THEN
            CALL nine
          ELSE
            CALL JES2
        END
      ELSE
        I = I + 1
    END
END
NINE:
i = 1
DO FOREVER
  MATCH = INDEX(INPUT9.I,LUNAME)
  IF I = INPUT9.0 THEN
    DO
      SAY 'Unfortunately no match found in batch of TSPRINT9'
      CALL TEN
    END
  ELSE
    DO
      IF MATCH > 0 THEN
        DO
          SAY 'There is a match in batch of TSPRINT9 !!'
          SAY ' '
          SAY 'Do you want to search throught the next TSPRINTS(Y/N)?'
          PARSE UPPER EXTERNAL ANSWER
          IF ANSWER = "Y" THEN
            CALL TEN
          ELSE
            CALL JES2
        END
      ELSE
        I = I + 1
    END
END
TEN:
i = 1
DO FOREVER
  MATCH = INDEX(INPUT10.I,LUNAME)
  IF I = INPUT10.0 THEN
    DO
      SAY 'Unfortunately no match found in batch of TSPOFS'
      CALL JES2
    END
  ELSE
    DO
      IF MATCH > 0 THEN
        DO
          SAY 'There is a match in batch of TSPOFS !!'
          SAY ' '
          SAY 'Do you want to search throught the next TSPRINTS(Y/N)?'
          PARSE UPPER EXTERNAL ANSWER
          IF ANSWER = "Y" THEN
            CALL JES2
          ELSE
            CALL JES2
        END
      ELSE
        I = I + 1
    END
END
JES2:
i = 1
DO FOREVER
  MATCH = INDEX(INPUT0.I,LUNAME)
  IF I = INPUT0.0 THEN
    DO
      SAY 'Unfortunately no match found in SYS2.JES2PRT'
      CALL BEGIN
    END
  ELSE
    DO
      IF MATCH > 0 THEN
        DO
          SAY 'There is a match in SYS2.JES2PRT !!'
          CALL BEGIN
        END
      ELSE
        I = I + 1
    END
END
END:
EXIT
./ ADD NAME=TSPFIND  0101-01016-01016-1428-00345-00345-00000-RACFCLS
/* THIS REXX PROCEDURE SEARCH FOR SPESIFIC PRINTER IN TSP BATCH */
SAY ' '
SAY ' '
SAY ' '
SAY ' '
BEGIN:
ARG LUNAME
IF LUNAME = "" THEN
  IF LUNAME = "END" THEN
    EXIT
  ELSE
    DO
      SAY ' '
      SAY 'Specify the VTAM LUNAME or END to finish?'
      PARSE UPPER EXTERNAL LUNAME
      IF LUNAME = "END" THEN CALL END
    END
STRING_LENGTH = LENGTH(LUNAME)
IF STRING_LENGTH < 4 | STRING_LENGTH > 8 THEN
  DO UNTIL STRING_LENGTH > 3 & STRING_LENGTH < 9                        020006
    IF STRING_LENGTH < 4 THEN                                           020006
      SAY 'You must at least specify 4 characters!!!'                   020006
    IF STRING_LENGTH > 8 THEN                                           020006
      SAY 'The name can only be up to 8 characters - See...'            020006
    SAY 'Guess what? - Respecify the VTAM LUNAME or END?'               030006
    PARSE UPPER EXTERNAL LUNAME                                         040000
    IF LUNAME = "END" THEN EXIT
    STRING_LENGTH = LENGTH(LUNAME)                                      000400
  END                                                                   040000
"ALLOC FI(INPUT1) DA(SYS2.TSPRINT.ASMJES1) SHR REUSE"
"ALLOC FI(INPUT2) DA(SYS2.TSPRINT.ASMJES2) SHR REUSE"
"ALLOC FI(INPUT3) DA(SYS2.TSPRINT.ASMJES3) SHR REUSE"
"ALLOC FI(INPUT4) DA(SYS2.TSPRINT.ASMJES4) SHR REUSE"
"ALLOC FI(INPUT5) DA(SYS2.TSPRINT.ASMJES5) SHR REUSE"
"ALLOC FI(INPUT6) DA(SYS2.TSPRINT.ASMJES6) SHR REUSE"
"ALLOC FI(INPUT7) DA(SYS2.TSPRINT.ASMJES7) SHR REUSE"
"ALLOC FI(INPUT8) DA(SYS2.TSPRINT.ASMJES8) SHR REUSE"
"ALLOC FI(INPUT9) DA(SYS2.TSPRINT.ASMJES9) SHR REUSE"
"ALLOC FI(INPUT10) DA(SYS2.TSPRINT.ASMOFS) SHR REUSE"
"ALLOC FI(INPUT0) DA(SYS2.JES2PRT) SHR REUSE"
"EXECIO * DISKR INPUT1 (FINIS STEM INPUT1."
"EXECIO * DISKR INPUT2 (FINIS STEM INPUT2."
"EXECIO * DISKR INPUT3 (FINIS STEM INPUT3."
"EXECIO * DISKR INPUT4 (FINIS STEM INPUT4."
"EXECIO * DISKR INPUT5 (FINIS STEM INPUT5."
"EXECIO * DISKR INPUT6 (FINIS STEM INPUT6."
"EXECIO * DISKR INPUT7 (FINIS STEM INPUT7."
"EXECIO * DISKR INPUT8 (FINIS STEM INPUT8."
"EXECIO * DISKR INPUT9 (FINIS STEM INPUT9."
"EXECIO * DISKR INPUT0 (FINIS STEM INPUT0."
"EXECIO * DISKR INPUT10 (FINIS STEM INPUT10."
"FREE FI(INPUT1)"
"FREE FI(INPUT2)"
"FREE FI(INPUT3)"
"FREE FI(INPUT4)"
"FREE FI(INPUT5)"
"FREE FI(INPUT6)"
"FREE FI(INPUT7)"
"FREE FI(INPUT8)"
"FREE FI(INPUT9)"
"FREE FI(INPUT0)"
"FREE FI(INPUT10)"
SAY 'NOTE: You ask me to look for 'LUNAME
I = 1
FOUND = "FALSE"
DO FOREVER
  MATCH = INDEX(INPUT1.I,LUNAME)
  IF I = INPUT1.0 THEN
    DO
      SAY 'Unfortunately no match found in batch of TSPRINT1'
      CALL TWO
    END
  ELSE
    DO
      IF MATCH > 0 THEN
        DO
          SAY 'There is a match in batch of TSPRINT1 !!'
          SAY ' '
          SAY 'Do you want to search throught the next TSPRINTS(Y/N)?'
          PARSE UPPER EXTERNAL ANSWER
          IF ANSWER = "Y" THEN
            CALL TWO
          ELSE
            CALL JES2
        END
      ELSE
        I = I + 1
    END
END
TWO:
i = 1
DO FOREVER
  MATCH = INDEX(INPUT2.I,LUNAME)
  IF I = INPUT2.0 THEN
    DO
      SAY 'Unfortunately no match found in batch of TSPRINT2'
      CALL THREE
    END
  ELSE
    DO
      IF MATCH > 0 THEN
        DO
          SAY 'There is a match in batch of TSPRINT2 !!'
          SAY ' '
          SAY 'Do you want to search throught the next TSPRINTS(Y/N)?'
          PARSE UPPER EXTERNAL ANSWER
          IF ANSWER = "Y" THEN
            CALL THREE
          ELSE
            CALL JES2
        END
      ELSE
        I = I + 1
    END
END
THREE:
i = 1
DO FOREVER
  MATCH = INDEX(INPUT3.I,LUNAME)
  IF I = INPUT3.0 THEN
    DO
      SAY 'Unfortunately no match found in batch of TSPRINT3'
      CALL FOUR
    END
  ELSE
    DO
      IF MATCH > 0 THEN
        DO
          SAY 'There is a match in batch of TSPRINT3 !!'
          SAY ' '
          SAY 'Do you want to search throught the next TSPRINTS(Y/N)?'
          PARSE UPPER EXTERNAL ANSWER
          IF ANSWER = "Y" THEN
            CALL FOUR
          ELSE
            CALL JES2
        END
      ELSE
        I = I + 1
    END
END
FOUR:
i = 1
DO FOREVER
  MATCH = INDEX(INPUT4.I,LUNAME)
  IF I = INPUT4.0 THEN
    DO
      SAY 'Unfortunately no match found in batch of TSPRINT4'
      CALL FIVE
    END
  ELSE
    DO
      IF MATCH > 0 THEN
        DO
          SAY 'There is a match in batch of TSPRINT4 !!'
          SAY ' '
          SAY 'Do you want to search throught the next TSPRINTS(Y/N)?'
          PARSE UPPER EXTERNAL ANSWER
          IF ANSWER = "Y" THEN
            CALL FIVE
          ELSE
            CALL JES2
        END
      ELSE
        I = I + 1
    END
END
FIVE:
i = 1
DO FOREVER
  MATCH = INDEX(INPUT5.I,LUNAME)
  IF I = INPUT5.0 THEN
    DO
      SAY 'Unfortunately no match found in batch of TSPRINT5'
      CALL SIX
    END
  ELSE
    DO
      IF MATCH > 0 THEN
        DO
          SAY 'There is a match in batch of TSPRINT5 !!'
          SAY ' '
          SAY 'Do you want to search throught the next TSPRINTS(Y/N)?'
          PARSE UPPER EXTERNAL ANSWER
          IF ANSWER = "Y" THEN
            CALL SIX
          ELSE
            CALL JES2
        END
      ELSE
        I = I + 1
    END
END
SIX:
i = 1
DO FOREVER
  MATCH = INDEX(INPUT6.I,LUNAME)
  IF I = INPUT6.0 THEN
    DO
      SAY 'Unfortunately no match found in batch of TSPRINT6'
      CALL SEVEN
    END
  ELSE
    DO
      IF MATCH > 0 THEN
        DO
          SAY 'There is a match in batch of TSPRINT6 !!'
          SAY ' '
          SAY 'Do you want to search throught the next TSPRINTS(Y/N)?'
          PARSE UPPER EXTERNAL ANSWER
          IF ANSWER = "Y" THEN
            CALL SEVEN
          ELSE
            CALL JES2
        END
      ELSE
        I = I + 1
    END
END
seven:
i = 1
DO FOREVER
  MATCH = INDEX(INPUT7.I,LUNAME)
  IF I = INPUT7.0 THEN
    DO
      SAY 'Unfortunately no match found in batch of TSPRINT7'
      CALL eight
    END
  ELSE
    DO
      IF MATCH > 0 THEN
        DO
          SAY 'There is a match in batch of TSPRINT7 !!'
          SAY ' '
          SAY 'Do you want to search throught the next TSPRINTS(Y/N)?'
          PARSE UPPER EXTERNAL ANSWER
          IF ANSWER = "Y" THEN
            CALL eight
          ELSE
            CALL JES2
        END
      ELSE
        I = I + 1
    END
END
eight:
i = 1
DO FOREVER
  MATCH = INDEX(INPUT8.I,LUNAME)
  IF I = INPUT8.0 THEN
    DO
      SAY 'Unfortunately no match found in batch of TSPRINT8'
      CALL nine
    END
  ELSE
    DO
      IF MATCH > 0 THEN
        DO
          SAY 'There is a match in batch of TSPRINT8 !!'
          SAY ' '
          SAY 'Do you want to search throught the next TSPRINTS(Y/N)?'
          PARSE UPPER EXTERNAL ANSWER
          IF ANSWER = "Y" THEN
            CALL nine
          ELSE
            CALL JES2
        END
      ELSE
        I = I + 1
    END
END
NINE:
i = 1
DO FOREVER
  MATCH = INDEX(INPUT9.I,LUNAME)
  IF I = INPUT9.0 THEN
    DO
      SAY 'Unfortunately no match found in batch of TSPRINT9'
      CALL TEN
    END
  ELSE
    DO
      IF MATCH > 0 THEN
        DO
          SAY 'There is a match in batch of TSPRINT9 !!'
          SAY ' '
          SAY 'Do you want to search throught the next TSPRINTS(Y/N)?'
          PARSE UPPER EXTERNAL ANSWER
          IF ANSWER = "Y" THEN
            CALL TEN
          ELSE
            CALL JES2
        END
      ELSE
        I = I + 1
    END
END
TEN:
i = 1
DO FOREVER
  MATCH = INDEX(INPUT10.I,LUNAME)
  IF I = INPUT10.0 THEN
    DO
      SAY 'Unfortunately no match found in batch of TSPOFS'
      CALL JES2
    END
  ELSE
    DO
      IF MATCH > 0 THEN
        DO
          SAY 'There is a match in batch of TSPOFS !!'
          SAY ' '
          SAY 'Do you want to search throught the next TSPRINTS(Y/N)?'
          PARSE UPPER EXTERNAL ANSWER
          IF ANSWER = "Y" THEN
            CALL JES2
          ELSE
            CALL JES2
        END
      ELSE
        I = I + 1
    END
END
JES2:
i = 1
DO FOREVER
  MATCH = INDEX(INPUT0.I,LUNAME)
  IF I = INPUT0.0 THEN
    DO
      SAY 'Unfortunately no match found in SYS2.JES2PRT'
      CALL BEGIN
    END
  ELSE
    DO
      IF MATCH > 0 THEN
        DO
          SAY 'There is a match in SYS2.JES2PRT !!'
          CALL BEGIN
        END
      ELSE
        I = I + 1
    END
END
END:
EXIT
./ ADD NAME=X        0101-01016-01016-1428-00037-00037-00000-RACFCLS
/* REXX */
X = MSG('OFF')
CVTADDR   = STORAGE(00000010,4)
CVTSNAME@ = D2X(X2D(C2X(CVTADDR))+X2D(154))
SNAME     = STORAGE(CVTSNAME@,4)
UID       = SYSVAR(SYSUID)
SAY"*** LOGGING OFF FROM SYSTEM" SNAME "***"
"DELETE "UID"."SNAME".SPFTEMP0.CNTL"
"DELETE "UID"."SNAME".SPFTEMP1.CNTL"
"DELETE "UID"."SNAME".SPFTEMP2.CNTL"
"DELETE "UID"."SNAME".SPFTEMP3.CNTL"
"DELETE "UID"."SNAME".SPFTEMP4.CNTL"
"DELETE "UID"."SNAME".SPFTEMP5.CNTL"
"DELETE "UID"."SNAME".SPFTEMP6.CNTL"
"DELETE "UID"."SNAME".SPFLOG0.LIST"
"DELETE "UID"."SNAME".SPFLOG1.LIST"
"DELETE "UID"."SNAME".SPFLOG2.LIST"
"DELETE "UID"."SNAME".SPFLOG3.LIST"
"DELETE "UID"."SNAME".SPFLOG4.LIST"
"DELETE "UID"."SNAME".SPFLOG5.LIST"
"DELETE "UID"."SNAME".SPFLOG6.LIST"
"DELETE "UID"."SNAME".SPFTEMP0.LIST"
"DELETE "UID"."SNAME".SPFTEMP1.LIST"
"DELETE "UID"."SNAME".SPFTEMP2.LIST"
"DELETE "UID"."SNAME".SPFTEMP3.LIST"
"DELETE "UID"."SNAME".SPFTEMP4.LIST"
"DELETE "UID"."SNAME".SPFTEMP5.LIST"
"DELETE "UID"."SNAME".SPFTEMP6.LIST"
"DELETE "UID".NETVAS1.ADD"
"DELETE "UID".NETVAS2.ADD"
"DELETE "UID".NETVAS3.ADD"
"DELETE "UID".NETVAS4.ADD"
"DELETE "UID".NETVAS1.LISTALL"
"DELETE "UID".NETVAS2.LISTALL"
"DELETE "UID".NETVAS3.LISTALL"
"DELETE "UID".NETVAS4.LISTALL"
"LOGOFF"
./ ADD NAME=X1       0101-01016-01016-1428-00036-00036-00000-RACFCLS
/* REXX */
X = MSG('OFF')
CVTADDR   = STORAGE(00000010,4)
CVTSNAME@ = D2X(X2D(C2X(CVTADDR))+X2D(154))
SNAME     = STORAGE(CVTSNAME@,4)
UID       = SYSVAR(SYSUID)
SAY"*** LOGGING OFF FROM SYSTEM" SNAME "***"
"DELETE "UID"."SNAME".SPFTEMP0.CNTL"
"DELETE "UID"."SNAME".SPFTEMP1.CNTL"
"DELETE "UID"."SNAME".SPFTEMP2.CNTL"
"DELETE "UID"."SNAME".SPFTEMP3.CNTL"
"DELETE "UID"."SNAME".SPFTEMP4.CNTL"
"DELETE "UID"."SNAME".SPFTEMP5.CNTL"
"DELETE "UID"."SNAME".SPFTEMP6.CNTL"
"DELETE "UID"."SNAME".SPFLOG0.LIST"
"DELETE "UID"."SNAME".SPFLOG1.LIST"
"DELETE "UID"."SNAME".SPFLOG2.LIST"
"DELETE "UID"."SNAME".SPFLOG3.LIST"
"DELETE "UID"."SNAME".SPFLOG4.LIST"
"DELETE "UID"."SNAME".SPFLOG5.LIST"
"DELETE "UID"."SNAME".SPFLOG6.LIST"
"DELETE "UID"."SNAME".SPFTEMP0.LIST"
"DELETE "UID"."SNAME".SPFTEMP1.LIST"
"DELETE "UID"."SNAME".SPFTEMP2.LIST"
"DELETE "UID"."SNAME".SPFTEMP3.LIST"
"DELETE "UID"."SNAME".SPFTEMP4.LIST"
"DELETE "UID"."SNAME".SPFTEMP5.LIST"
"DELETE "UID"."SNAME".SPFTEMP6.LIST"
"DELETE "UID".NETVAS1.ADD"
"DELETE "UID".NETVAS2.ADD"
"DELETE "UID".NETVAS3.ADD"
"DELETE "UID".NETVAS4.ADD"
"DELETE "UID".NETVAS1.LISTALL"
"DELETE "UID".NETVAS2.LISTALL"
"DELETE "UID".NETVAS3.LISTALL"
"DELETE "UID".NETVAS4.LISTALL"
