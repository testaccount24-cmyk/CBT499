VTOC@HDR CSECT
VTOC@HDR AMODE 31
VTOC@HDR RMODE ANY
***=================================================================***
***  GET LIST OF THE DSCB4 AND FREE SPACE INFO OF A VOLUME.
***=================================================================***
         EDCPRLG BASEREG=((12))         .HOUSEKEEPING FOR C INTERFACE
*
         LM    R03,R04,0(R01)           .VOLSER AND DSCB AREA.
         USING HDR_BUFF,R04             .MAP RETURN BUFFER
         MVC   VOLSER,0(R03)            .SAVE VOLSER
         LA    R11,BUF_WORK             .BUFFER FOR DSCB4
         XC    RET_CODE,RET_CODE        .CLEAR RETURN CODE FIELD
*
***=================================================================***
***  GET THE UCB ADDRESS FOR THE VTOC READ.
***=================================================================***
         LA    R10,HDR_UCBA             .LOAD UCB COMMON SEGMENT ADDR.
         MODESET KEY=ZERO,MODE=SUP      .SET SUPERVISOR STATE & KEY 0
         UCBLOOK VOLSER=(R03),          .GET UCB ADDRESS               +
               UCBPTR=(R10),            .WHERE TO PUT UCB ADDRESS      +
               NOPIN,                   .DO NOT PIN UCB - NO UPDATES   +
               LOC=ANY,                 .ALSO UCB ABOVE 16M LINE       +
               DYNAMIC=YES,             .ALSO HCD DEVICES              +
               RANGE=ALL,               .INCLUDE 4-DIGIT DEVICE ADDR'S +
               DEVCLASS=DASD            .ONLY DASD
         LTR   R15,R15                  .SAVE RETURN CODE
         BNZ   ERR_UCB                  .NO - SET ERROR
         MODESET KEY=NZERO,MODE=PROB    .RETURN TO PROBLEM STATE
         L     R10,HDR_UCBA             .LOAD UCB ADDRESS
*
***=================================================================***
***  SET UP BUFFER LIST HEADER AND ENTRY.
***=================================================================***
         XC    BFLHDR(BFLHLN),BFLHDR    .CLEAR BUFFER HEADER
         OI    BFLHFL,BFLHDSCB          .DESCRIBES DSCB ENTRIES
         MVI   BFLHNOE,X'01'            .NUMBER OF DSCB'S IN BUFFER
         XC    BUF_WORK,BUF_WORK        .CLEAR WORK AREA
*
         LA    R02,BFLE                 .BUFFER LIST ENTRY
         USING BFLE,R02                 .MAP BUFFER LIST ENTRY
         XC    BFLE(BFLELN),BFLE        .CLEAR BUFFER ENTRY
         ST    R11,BFLEBUF              .STORE DSCB BUFFER ADDRESS
         MVI   BFLELTH,DSCB_LEN         .FULL DSCB LENGTH
         DROP  R02                      .END OF ADRESSABILITY
*
***=================================================================***
***  READ THE VTOC.
***=================================================================***
         CVAFSEQ ACCESS=GTEQ,           .READ ONLY DSCB4               +
               BUFLIST=BFLHDR,          .STORE DSCB'S IN HERE          +
               DSN=0,                   .PHYSICAL SEQUENTIAL READ      +
               UCB=(R10),               .UCB ADRESS FROM UCBLOOK MACRO +
               MF=(E,CVPL_MAP)          .POINTER TO LIST FORM MACRO
         LTR   R15,R15                  .CHECK RETURN CODE
         BNZ   ERR_SEQ                  .MORE DATA TO READ
*
***=================================================================***
***  MOVE DSCB4 INFORMATION TO BUFFER.
***=================================================================***
         LA    R11,44(,R11)             .OFFSET FOR DATA SET NAME
         USING IECSDSL4,R11             .SET ADDRESSABILITY TO DSCB4
*
         XR    R03,R03                  .CLEAR
         IC    R03,DS4DEVDT             .LOAD # OF DSCBS/TRK
         STH   R03,HDR_DTRK             .     AND STORE
         IC    R03,DS4DEVDB             .LOAD # OF DIR.BLKS/TRK
         STH   R03,HDR_DIRT             .     AND STORE
         MVC   HDR_VTOC,DS4VTOCE+2      .MOVE VTOC ADDRESS
         MVC   HDR_TRKS,DS4DEVTK        .SIZE OF TRACK
         MVC   HDR_DEVS,DS4DEVSZ        .# CYLS & TRKS/CYL
         MVC   HDR_NUMA,DS4NOATK        .# OF ALT. TRKS
         MVC   HDR_ALTT,DS4HCCHH        .ALT TRK ADDRESS
*
         LA    R03,1                    .SMS-MANAGED
         TM    DS4SMSFG,DS4SMS          .SMS-MANAGED
         BO    FOUNDSMS
         LA    R03,2                    .SMS INITIAL STATUS
         TM    DS4SMSFG,DS4SMSCV        .SMS INITIAL STATUS
         BO    FOUNDSMS
         XR    R03,R03                  .NOT SMS-MANAGED
FOUNDSMS EQU   *
         STH   R03,HDR_SMSI             .STORE SMS STATUS
*
***=================================================================***
***  CALCULATE ALLOCATED SPACE FOR THE VTOC
***=================================================================***
         XR    R05,R05                  .CLEAR FOR TOTAL # TRKS
         XR    R09,R09                  .CLEAR FOR TOTAL # CYLS
         LH    R08,HDR_DEVS+2           .LOAD # TRKS/CYL
         LH    R06,HDR_VTOC             .START CYL ADDR.
         LH    R07,HDR_VTOC+4           .END CYL ADDR.
*
         SR    R07,R06                  .CALC # FULL CYLS USED
         BZ    TRKONE                   .START + END ON SAME CYL
         BCT   R07,CYLADD               .ADD CYL TO TOTAL
         B     TRKBEG                   .START + END ON ADJ. CYL
CYLADD   EQU   *
         AR    R09,R07                  .ADD TO TOTAL # CYLS
TRKBEG   EQU   *
         LH    R06,HDR_VTOC+2           .START TRK ADDR.
         LTR   R06,R06                  .START TRK ADDRESS=0 ?
         BNZ   CALCBEG                  .NO, CALCULATE TRKS
         LA    R09,1(,R09)              .ANOTHER FULL CYLINDER
         B     TRKEND                   .DO END TRK CALC.
CALCBEG  EQU   *
         LR    R07,R08                  .# TRKS/CYL
         SR    R07,R06                  .CALC # TRKS
         AR    R05,R07                  .ADD TO TOTAL TRKS
TRKEND   EQU   *
         LH    R07,HDR_VTOC+6           .END TRK ADDR.
         LA    R07,1(,R07)              .CORRECTION FOR CALCULATION
         CR    R07,R08                  .END TRK ADDRESS=TRKS/CYL ?
         BNE   CALCEND                  .NO, CALCULATE TRKS
         LA    R09,1(,R09)              .ANOTHER FULL CYLINDER
         B     CALCEND1                 .DO NEXT CALCULATION
CALCEND  EQU   *
         AR    R05,R07                  .ADD TO TOTAL TRKS
         B     CALCEND1                 .DO NEXT CALCULATION
TRKONE   EQU   *
         LH    R06,HDR_VTOC+2           .START TRK ADDR.
         LH    R07,HDR_VTOC+6           .END TRK ADDR.
         LA    R07,1(,R07)              .CORRECTION FOR CALCULATION
         LTR   R06,R06                  .START TRK ADDRESS=0 ?
         BNZ   CALCONE                  .NO, CALCULATE TRKS
         CR    R07,R08                  .END TRK ADDRESS=TRKS/CYL ?
         BNZ   CALCONE                  .NO, CALCULATE TRKS
         LA    R09,1(,R09)              .ONE FULL CYLINDER
         B     CALCEND1                 .DO NEXT CALCULATION
CALCONE  EQU   *
         SR    R07,R06                  .CALC # TRKS
         AR    R05,R07                  .ADD TO TOTAL TRKS
CALCEND1 EQU   *
         STH   R05,HDR_TRKA             .SAVE # TRKS IN VTOC
         STH   R09,HDR_CYLA             .SAVE # CYLS IN VTOC
*
END_VTOC EQU   *
         XR    R06,R06                  .CLEAR EVEN REGISTER
         LR    R07,R09                  .# OF CYLS
         MR    R06,R08                  .# OF TRKS FROM CYLS
         AR    R07,R05                  .CALC. # OF TRKS
         LH    R08,HDR_DTRK             .# DSCB'S/TRK
         MR    R06,R08                  .CALC # OF DSCB'S
         STH   R07,HDR_NUMD             .SAVE TOTAL # OF DSCB'S
*
         DROP  R11                      .END OF ADRESSABILITY
*
***=================================================================***
***  GET FREE SPACE INFORMATION.
***=================================================================***
         XC    BUF_WORK,BUF_WORK        .CLEAR BUFFER AREA
         LA    R11,BUF_WORK             .BUFFER FOR FREE SPACE INFO
         LA    R02,LSPA                 .MF=L FORM OF MACRO
         LSPACE MF=(E,(R02)),           .GET FREE SPACE INFO           X
               UCB=(R10),               .UCB ADDRESS                   X
               DATA=(R11)               .DATA RETURN AREA
         LTR   R15,R15                  .CHECK RETURN CODE
         BNZ   ERR_FREE                 .ERROR ON FREE LSPACE
         USING LSPD,R11                 .MAPPING DATA RETURN AREA
*
         L     R03,LSPDF0S              .LOAD # OF AVAILABLE DSCBS
         STH   R03,HDR_AVAD             .     AND STORE
         L     R03,LSPDLCYL             .LOAD LARGEST FREE CYL EXT
         STH   R03,HDR_CYLC             .     AND STORE
         L     R03,LSPDLTRK             .LOAD LARGEST FREE TRKS
         STH   R03,HDR_TRKC             .     AND STORE
         L     R03,LSPDFRAG             .LOAD FRAGMENTATION INDEX
         STH   R03,HDR_FRAG             .     AND STORE
         L     R03,LSPDNEXT             .LOAD # OF FREE EXTENTS
         STH   R03,HDR_EXTF             .     AND STORE
         L     R03,LSPDTCYL             .LOAD # OF FREE CYLS
         STH   R03,HDR_CYLF             .     AND STORE
         L     R03,LSPDTTRK             .LOAD # OF FREE TRKS
         STH   R03,HDR_TRKF             .     AND STORE
*
         L     R09,LSPDTCYL             .# FREE CYLINDERS
         XR    R08,R08                  .CLEAR EVEN REGISTER
         LH    R06,HDR_DEVS+2           .LOAD # TRKS/CYL
         MR    R08,R06                  .# OF FREE TRKS IN CYLS
         AR    R03,R09                  .TOTAL # OF FREE TRKS
         STH   R03,HDR_TRKT             .     AND STORE
*
         TM    LSPDSTAT,LSPDIXDS        .INDEXED VTOC ?
         BZ    IDX_NOT                  .NO
         MVC   HDR_IDX1,=CL30'THE VTOC IS IN INDEXED FORMAT '
         TM    LSPDSTAT,LSPDIXAC        .INDEX ACTIVE ?
         BO    IDX_YES                  .YES
         MVC   HDR_IDX2,=CL30', BUT THE INDEX IS NOT ACTIVE.'
         B     IDX_VIRS                 .CALC. VIRS
IDX_YES  EQU   *
         MVC   HDR_IDX2,=CL30'AND THE INDEX IS ACTIVE.      '
*
IDX_VIRS EQU   *
         L     R03,LSPDVIRS             .LOAD # OF FREE VIRS
         STH   R03,HDR_VIRS             .     AND STORE
         B     IDX_END
*
IDX_NOT  EQU   *
         MVC   HDR_IDX1,=CL30'THE VTOC IS NOT INDEXED.      '
         MVC   HDR_IDX2,=CL30'                              '
         XC    HDR_VIRS,HDR_VIRS        .NO INDEX
*
IDX_END  EQU   *
         DROP  R11                      .END OF ADRESSABILITY
*
***=================================================================***
***  ERROR ROUTINES
***=================================================================***
         B     END_PROG                 .END OF PROGRAM
ERR_FREE EQU   *
         ST    R15,RET_CODE             .SAVE RETURN CODE
         LA    R01,WTO_FREE             .MOVE VOLSER INTO MESSAGE
         MVC   20(6,R01),VOLSER         .MOVE VOLSER
WTO_FREE EQU   *
         WTO   '*** VOLSER: ......  --- RETURN CODE > 0 FROM LSPACE '
         B     END_PROG                 .END OF PROGRAM
*
ERR_SEQ  EQU   *
         ST    R15,RET_CODE             .SAVE RETURN CODE
         LA    R01,WTO_SEQ              .MOVE VOLSER INTO MESSAGE
         MVC   20(6,R01),VOLSER         .MOVE VOLSER
WTO_SEQ  EQU   *
         WTO   '*** VOLSER: ......  --- RETURN CODE > 0 FROM CVAFSEQ'
         B     END_PROG                 .END OF PROGRAM
*
ERR_UCB  EQU   *
         A     R15,=F'40'               .UCB NOT FOUND
         ST    R15,RET_CODE             .SAVE RETURN CODE
         MODESET KEY=NZERO,MODE=PROB    .RETURN TO PROBLEM STATE
         LA    R01,WTO_UCB              .MOVE VOLSER INTO MESSAGE
         MVC   20(6,R01),VOLSER         .MOVE VOLSER
WTO_UCB  EQU   *
         WTO   '*** VOLSER: ......  --- RETURN CODE > 0 FROM UCBLOOK'
*
***=================================================================***
***  END OF PROGRAM.
***=================================================================***
END_PROG EQU   *
         L     R15,RET_CODE             .SET RETURN CODE
         EDCEPIL                        .PROGRAM EPILOG FOR C
*
***=================================================================***
***  VARIABLES, CONSTANTS AND UCB
***=================================================================***
         LTORG
         EQUATES1
*
RET_CODE DS    F                        .RETURN CODE
VOLSER   DS    CL6                      .VOLSER
*
BUF_WORK DS    CL(DSCB_LEN)             .DATA FOR DSCB4 STORAGE
*
CVPL_MAP CVAFSEQ ACCESS=GTEQ,           .ALL DSCB'S FROM BEGINNING     +
               BUFLIST=BFLHDR,          .STORE DSCB'S IN HERE          +
               DSN=0,                   .PHYSICAL SEQUENTIAL READ      +
               UCB=(R10),               .UCB ADRESS FROM UCBLOOK MACRO +
               MF=L                     .LIST FORM OF MACRO
         ORG   CVPL_MAP
         ICVAFPL DSECT=NO
*
         ORG   ,                        .RESET POINTER
         ICVAFBFL DSECT=NO              .BUFFER LIST
*
LSPA     LSPACE MF=L
LSPD     LSPACE MF=(D,DATA)
*
         EDCDSAD                        .SAVE AREA FOR C INTERFACE
*
         VTC@HDRB                       .MAPPING FOR BUFFER AREA
*
         DSECT                          .DSCB
         IECSDSL1 (1)                   .DSCB1
DSCB_LEN EQU   *-IECSDSL1               .LENGTH OF DSCB
         IECSDSL1 (4)                   .DSCB4
*
         END
