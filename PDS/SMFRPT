         TITLE 'SMFRPT - OMEGAMON SMF SECURITY AUDIT POST-PROCESSOR ANDX
                REPORT GENERATOR'
***********************************************************************
*                                                                     *
*                         S M F R P T                                 *
*                                                                     *
* ******************************************************************* *
* *                                                                 * *
* *  N   =====> PLEASE NOTE THAT THIS CODE IS *NOT* SUPPORTED BY    * *
* *      =====> CANDLE.  IT IS MERELY AN EXAMPLE OF A WORKING SMF   * *
* *  O   =====> POST-PROCESSOR AND REPORT GENERATOR WHICH MAY BE    * *
* *      =====> USED IN CONJUNCTION WITH OMEGAMON'S SMF SECURITY    * *
* *  T   =====> AUDIT FEATURE.  PLEASE FEEL FREE TO MODIFY OR       * *
* *      =====> EMBELLISH THIS PROGRAM AS YOU SEE FIT TO SUIT       * *
* *  E   =====> THE NEEDS OF YOUR INSTALLATION.                     * *
* *                                                                 * *
* ******************************************************************* *
*                                                                     *
*                                                                     *
*        PROGRAM NAME:                                                *
*                                                                     *
*        SMFRPT.                                                      *
*                                                                     *
*                                                                     *
*                                                                     *
*        FUNCTION ABSTRACT:                                           *
*                                                                     *
*        THIS PROGRAM WILL FORMAT A REPORT BASED ON SMF DATA DERIVED  *
*        FROM THE OMEGAMON/BASE AUDIT PROCESS.                        *
*                                                                     *
*                                                                     *
*                                                                     *
*        CALLING CONVENTIONS:                                         *
*                                                                     *
*        //SMFRPT EXEC PGM=SMFRPT                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*        INPUT (SYSIN):                                               *
*                                                                     *
*        OMEGAMON/BASE SECURITY AUDIT SMF RECORDS, SORTED AND         *
*        EXTRACTED VIA IFASMFDP.  DCB ATTRIBUTES ARE RECFM=VBS,       *
*        LRECL=32767,BLKSIZE=4096.                                    *
*                                                                     *
*                                                                     *
*                                                                     *
*        OUTPUT (SYSPRINT):                                           *
*                                                                     *
*        FORMATTED OMEGAMON SECURITY AUDIT REPORT.  DCB ATTRIBUTES    *
*        ARE RECFM=FBA,LRECL=133,BLKSIZE=25*133.                      *
*                                                                     *
*                                                                     *
*                                                                     *
*        ATTRIBUTES:                                                  *
*                                                                     *
*        REFRESHABLE, REENTRANT, REUSABLE, RMODE(24), AMODE(24)       *
*        (MAY BE PLACED IN PLPA, IF DESIRED).                         *
*                                                                     *
*                                                                     *
*                                                                     *
*        USER ABENDS:                                                 *
*                                                                     *
*        1137 - INPUT FILE FAILED TO OPEN.                            *
*        1237 - OUTPUT FILE FAILED TO OPEN.                           *
*        4000 - INTERNAL LOGIC ERROR (SHOULD NEVER OCCUR).            *
*                                                                     *
*                                                                     *
*                                                                     *
*        SUBROUTINES CALLED:                                          *
*                                                                     *
*        NONE.                                                        *
*                                                                     *
*                                                                     *
*                                                                     *
*        MACROS USED:                                                 *
*                                                                     *
*        (IBM)                                                        *
*        ABEND, CLOSE, DCB, DCBD, FREEMAIN, GET, GETMAIN, IFASMFR,    *
*        IHAPIE, OPEN, PUT, RETURN, SAVE, SPIE, TIME.                 *
*                                                                     *
*        (CANDLE)                                                     *
*        $AUDIT, $CANHDR.                                             *
*                                                                     *
*                                                                     *
*                                                                     *
*        RETURN CODES:                                                *
*                                                                     *
*        0 - SUCCESSFUL COMPLETION.                                   *
*        4 - NO ELIGIBLE SMF RECORDS WERE PROCESSED.                  *
*        8 - AT LEAST ONE RECORD IN ERROR WAS PROCESSED.              *
*                                                                     *
*                                                                     *
*                                                                     *
*        REGISTER USAGE:                                              *
*                                                                     *
*        R0  - USED TO PASS TIME TO FORMATTING SUBROUTINE.            *
*        R1  - USED TO PASS DATE TO FORMATTING SUBROUTINE.            *
*        R2  - WORK.                                                  *
*        R3  - BASE FOR IBM SMF HEADER (IFASMFR).                     *
*        R4  - BASE FOR CANDLE COMMON HEADER ($CANHDR)                *
*              (NOTE: ONLY SELECTED $CANHDR FIELDS NECESSARY TO       *
*              IDENTIFY OMEGAMON/BASE SECURITY AUDIT SMF RECORDS      *
*              WILL BE PRESENT).                                      *
*        R5  - BASE FOR SECURITY AUDIT RECORD ($AUDIT).               *
*        R6  - WORK.                                                  *
*        R7  - WORK.                                                  *
*        R8  - WORK/SUBROUTINE LINKAGE.                               *
*        R9  - WORK/SUBROUTINE LINKAGE.                               *
*        R10 - ADDR OF INPUT DCB.                                     *
*        R11 - ADDR OF OUTPUT DCB.                                    *
*        R12 - CSECT BASE REGISTER.                                   *
*        R13 - ADDR OF GETMAINED WORK AREA (EXPLICIT BASE).           *
*        R14 - RETURN ADDRESS.                                        *
*        R15 - ENTRY POINT ADDRESS.                                   *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*| NO. |             CHANGE DESCRIPTION             |   DATE   | WHO |*
*|     |                                            |          |     |*
*| @00 | INITIAL CODING                             | 04/22/88 | ASG |*
*| @01 | STANDARDIZE $CANHDR FIELD ASSIGNMENTS      | 07/08/88 | ASG |*
*| @02 | ENHANCE RECORD VALIDATION PROCESS          | 08/22/88 | ASG |*
*| @03 | FIX MINOR FORMATTING PROBLEM               | 01/27/89 | ASG |*
*|     |                                            |          |     |*
***********************************************************************
         SPACE 3
*
*        PERFORM HOUSEKEEPING REQUIRED FOR A REENTRANT ROUTINE.
*
OMSMFRPT CSECT
         SAVE  (14,12),,*                SAVE CALLER'S REGISTERS
         LR    R12,R15                   GET ENTRY POINT ADDRESS
         USING OMSMFRPT,R12              ESTABLISH ADDRESSABILITY
         B     P000050                   BRANCH AROUND EYE-CATCHER
         DC    C'****&SYSDATE****&SYSTIME****'
         SPACE 3
P000050  DS    0H
         GETMAIN R,LV=WORKSZ             GETMAIN A WORK AREA
         ST    R1,8(R13)                 ESTABLISH BACKWARD CHAIN
         LR    R2,R1                     SAVE WORK AREA ADDR
         LA    R3,WORKSZ                 SIZE OF WORK AREA
         LA    R6,X                      ADDR OF WORK AREA TEMPLATE
         LA    R7,WORKSZ                 SIZE OF WORK AREA
         MVCL  R2,R6                     INITIALIZE WORK AREA
         ST    R13,4(R1)                 ESTABLISH FORWARD CHAIN
         LR    R13,R1                    POINT R13 TO MY SAVE AREA
         SPACE 3
*
*        OPEN THE INPUT AND OUTPUT FILES.
*
P000100  DS    0H
         LA    R10,INDCB-X(,R13)         ADDR OF INPUT FILE
         LA    R11,OUTDCB-X(,R13)        ADDR OF OUTPUT FILE
         OPEN  ((R10),INPUT,(R11),OUTPUT),MF=(E,OPENFI-X(,R13))
         TM    DCBOFLGS-IHADCB(R10),DCBOFOPN  WAS FILE OPENED?
         BO    P000200                   +YES, SKIP NEXT SECTION
         ABEND 1137,,,,REASON=0          ELSE, ABEND U1137
         SPACE 3
P000200  DS    0H
         TM    DCBOFLGS-IHADCB(R11),DCBOFOPN  WAS FILE OPENED?
         BO    P000250                   +YES, SKIP NEXT SECTION
         ABEND 1237,,,,REASON=0          ELSE, ABEND U1237
         SPACE 3
*
*        OBTAIN THE CURRENT DATE AND TIME VIA THE TIME MACRO.
*
P000250  DS    0H
         TIME  DEC                       GET CURRENT TIME AND DATE
         BAL   R9,P001400                PERFORM CONVERSION ROUTINE
         MVC   TIME-X(8,R13),HHMMSS-X(R13)  MOVE TIME TO HEADING
         MVC   DATE-X(8,R13),GREGDATE-X(R13)  MOVE DATE TO HEADING
         SPACE 3
*
*        THIS SECTION CONSTITUTES THE MAIN PROCESSING LOOP OF THE
*        ROUTINE.
*
P000300  DS    0H
         GET   (R10)                     GET A RECORD - QSAM (GL)
         LR    R3,R1                     R3 POINTS TO THE RECORD
         USING SMFRCD0,R3                ESTABLISH ADDRESSABILITY
         CLI   SMF0RTY,X'FF'
         BNE   P000300
         CLI   SMF0RTY,X'02'             SMF DUMP HEADER RECORD?
         BE    P000300                   +YES, GET ANOTHER RECORD
         CLI   SMF0RTY,X'03'             SMF DUMP TRAILER RECORD?
         BE    P000300                   +YES, GET ANOTHER RECORD
         L     R1,TOTCNT-X(,R13)         GET TOTAL RECORD COUNT     @02
         LA    R1,1(,R1)                 BUMP THE COUNT             @02
         ST    R1,TOTCNT-X(,R13)         SAVE TOTAL RECORD COUNT    @02
         LA    R4,SMF0BUF+2              BUMP OVER IBM SMF HEADER
         DROP  R3                        DROP ADDRESSABILITY
         USING C#RDW,R4                  ESTABLISH ADDRESSABILITY   @01
*        DC    X'0000'
         CLC   C#PRDFM1(2),=AL2(C@PFC1CM)  GOOD PROD FAMILY CODE?   @01
         BNE   P003000                   +NO, PROCESS ERROR         @01
         CLC   C#PRDID1(2),=AL2(C@PID1OB)  GOOD PROD ID CODE?       @01
         BNE   P003000                   +NO, PROCESS ERROR         @01
         CLC   C#PRDFM2(2),=AL2(C@PFC2CM)  GOOD PROD FAMILY?        @01
         BNE   P003000                   +NO, PROCESS ERROR         @01
         CLC   C#PRDID2(2),=AL2(C@PID2OB)  GOOD PROD ID?            @01
         BNE   P003000                   +NO, PROCESS ERROR         @01
         LA    R5,C#CMNLEN(,R4)          BUMP OVER CANDLE COMMON HEADER
         DROP  R4                        DROP ADDRESSABILITY
         USING A#AUDIT,R5                ESTABLISH ADDRESSABILITY
         CLI   A#TYPE,A@COMMND           COMMAND-TYPE RECORD?
         BNE   P003000                   +NO, PROCESS ERROR
         MVC   JOBNAME-X(8,R13),A#CNJOB  MOVE JOB NAME
         MVC   PRSTPNM-X(8,R13),A#CSTEP  MOVE PROCSTEP NAME
         MVC   STPNM-X(8,R13),A#CSTEP+8  MOVE STEP NAME
         MVC   USERID-X(8,R13),A#USERID  MOVE USERID
         MVC   UNIT-X(8,R13),A#LUNAME    MOVE UNIT
         MVC   SYSID-X(4,R13),A#SYSID    MOVE SYSID
         MVC   JOBID-X(8,R13),A#JOBID    MOVE JOBID
         SPACE 3                                                    @02
P000350  DS    0H                                                   @02
         OI    MISCSW-X(R13),SPIEACT     INDICATE SPIE ACTIVE       @02
         SPIE  P003000,(7),MF=(E,STOP0C7-X(R13))  ESTABLISH SPIE    @02
         ICM   R0,B'1111',A#TIME         GET TIME
         ICM   R1,B'1111',A#DATE         GET DATE
         BAL   R9,P001400                PERFORM CONVERSION ROUTINE
         SPACE 3                                                    @02
P000360  DS    0H                                                   @02
         SPIE  0,MF=(E,STOP0C7-X(R13))   CANCEL SPIE                @02
         NI    MISCSW-X(R13),255-SPIEACT  RESET SWITCH              @02
         SPACE 3                                                    @02
P000365  DS    0H                                                   @02
         TM    MISCSW-X(R13),ERROR       DID AN ERROR OCCURR?       @02
         BNO   P000370                   +NO, CONTINUE PROCESSING   @02
         NI    MISCSW-X(R13),255-ERROR   ELSE, RESET ERROR SWITCH   @02
         B     P000300                   ...AND, GET ANOTHER RECORD @02
         SPACE 3                                                    @02
P000370  DS    0H                                                   @02
         MVC   REPTIME-X(8,R13),HHMMSS-X(R13)  MOVE TIME INTO DETAIL
         MVC   REPDATE-X(8,R13),GREGDATE-X(R13)  MOVE DATE INTO DETAIL
         LA    R7,COMMTBL                POINT TO COMMAND TYPE TABLE
         LA    R8,CTBLSZ                 # OF ENTRIES IN TABLE
         SPACE 3
*
*        COMMAND TYPE TABLE LOOK-UP LOOP.
*
P000400  DS    0H
         CLC   A#STYPE(1),0(R7)          DO WE HAVE A MATCH?
         BE    P000500                   +YES, SKIP NEXT SECTION
         LA    R7,16(,R7)                ELSE, BUMP POINTER
         BCT   R8,P000400                LOOP THROUGH TABLE
         MVC   CMTYPE-X(15,R13),=CL15'*** UNKNOWN ***'  NOT FOUND
         B     P000600                   SKIP NEXT SECTION
         SPACE 3
P000500  DS    0H
         MVC   CMTYPE-X(15,R13),1(R7)    MOVE COMM TYPE INTO DETAIL
         SPACE 3
P000600  DS    0H
         LA    R7,DISPTBL                POINT TO DISPOSITION TABLE
         LA    R8,DTBLSZ                 # OF ENTRIES IN TABLE
         SPACE 3
*
*        DISPOSITION TABLE LOOK-UP LOOP.
*
P000700  DS    0H
         CLC   A#DISP(1),0(R7)           DO WE HAVE A MATCH?
         BE    P000800                   +YES, SKIP NEXT SECTION
         LA    R7,24(,R7)                ELSE, BUMP POINTER
         BCT   R8,P000700                LOOP THROUGH TABLE
         MVC   DISP-X(23,R13),=CL23'    *** UNKNOWN ***    '  NOT FOUND
         B     P000900                   SKIP NEXT SECTION
         SPACE 3
P000800  DS    0H
         MVC   DISP-X(23,R13),1(R7)      MOVE DISP INTO DETAIL
         SPACE 3
*
*        PROCESS COMMAND INFORMATION.
*
P000900  DS    0H
         MVI   COMMAND-X(R13),C' '       USING BLANKS...
         MVC   COMMAND+1-X(8,R13),COMMAND-X(R13)  ...CLEAR THE FIELD
         MVI   ASSOCMAJ-X(R13),C' '      USING BLANKS...
         MVC   ASSOCMAJ+1-X(15,R13),ASSOCMAJ-X(R13)  ...CLEAR THE FIELD
         CLI   A#STYPE,A@MINCOM          IS THIS A MINOR?
         BE    P000925                   +YES, SKIP NEXT SECTION
         CLI   A#STYPE,A@GENMIN          IS THIS A GENERALIZED MINOR?
         BNE   P000975                   +NO, SKIP NEXT SECTION
         SPACE 3
P000925  DS    0H
         MVC   COMMAND+1-X(4,R13),A#COMMND+4  MOVE MINOR
         CLC   A#COMMND(4),=4X'00'       GENERALIZED MINOR W/O MAJOR?
         BE    P000985                   +YES, SKIP NEXT SECTION
         MVC   MAJCMD-X(4,R13),A#COMMND  MOVE ASSOCIATED MAJOR
         MVC   ASSOCMAJ-X(16,R13),MAJTAG-X(R13)  MOVE MAJOR ADDENDUM
         MVI   AUXBUFF-X(R13),C' '       USING BLANKS...
         MVC   AUXBUFF+1-X(79,R13),AUXBUFF-X(R13)  ...CLEAR THE FIELD
         LH    R3,A#BUFLN2               LENGTH OF AUX BUFFER
         CH    R3,=H'80'                 IS LENGHTH LE 80?
         BNH   P000950                   +YES, SKIP NEXT SECTION
         LH    R3,=H'80'                 ELSE, SET LENGTH AT 80
         SPACE 3
P000950  DS    0H
         BCTR  R3,0                      DECREMENT FOR EXECUTE
         EX    R3,MVCBUFAU               MOVE THE AUX BUFFER
*
*        IF YOUR PRINTER CANNOT HANDLE LOWER-CASE CHARACTERS, UNCOMMENT
*        THE FOLLOWING COMMAND IN ORDER TO FORCE ALL UPPER-CASE
*        CHARACTERS.
*
*        EX    R3,OCBUFAU                FORCE UPPER-CASE CHARACTERS
         B     P000985                   SKIP NEXT SECTION
         SPACE 3
P000975  DS    0H
         MVC   COMMAND+1-X(8,R13),A#COMMND  MOVE COMMAND TO DETAIL
         CLI   A#STYPE,A@ILCCOM          INFO-LINE COMMAND?
         BNE   P000985                   +NO, SKIP NEXT SECTION
         MVI   COMMAND-X(R13),C'/'       ELSE, STUFF A SLASH
         TR    A#BUFPR(16),TRTABLE       AND, ELIMINATE UNDERSCORES
         SPACE 3
P000985  DS    0H
         MVI   PRMBUFF-X(R13),C' '       USING BLANKS...
         MVC   PRMBUFF+1-X(79,R13),PRMBUFF-X(R13)  ...CLEAR THE FIELD
         LH    R3,A#BUFLN1               LENGTH OF PRM BUFFER
         BCTR  R3,0                      DECREMENT FOR EXECUTE
         EX    R3,MVCBUFPR               MOVE THE PRM BUFFER
         L     R1,GOODCNT-X(,R13)        GET GOOD RECORD COUNT      @02
         LA    R1,1(,R1)                 BUMP THE COUNT             @02
         ST    R1,GOODCNT-X(,R13)        STORE GOOD RECORD COUNT    @02
         SPACE 3
*
*        PREPARE THE DATA FOR THE FORMATTING AND OUTPUT PROCESSING
*        SUBROUTINES.
*
P000990  DS    0H
         CLI   A#STYPE,A@MINCOM          MINOR COMMAND?
         BE    P000990A                  +YES, SKIP NEXT SECTION
         CLI   A#STYPE,A@GENMIN          GENERALIZED MINOR COMMAND?
         BNE   P000991                   +NO, SKIP NEXT SECTION
         CLC   A#COMMND(4),=4X'00'       GENERALIZED MINOR W/O MAJOR?
         BE    P000991                   +YES, SKIP NEXT SECTION
         SPACE 3
P000990A DS    0H
         CP    LNCOUNT-X(2,R13),=PL2'9'  ENOUGH ROOM LEFT ON PAGE?
         B     P000992                   MERGE
         SPACE 3
P000991  DS    0H
         CP    LNCOUNT-X(2,R13),=PL2'8'  ENOUGH ROOM LEFT ON PAGE?
         SPACE 3
P000992  DS    0H
         BNL   P000993                   +YES, SKIP NEXT SECTION
         OI    MISCSW-X(R13),PGEJECT     INDICATE PAGE EJECT REQUIRED
         SPACE 3
P000993  DS    0H
         LA    R8,LINE1-X(,R13)          POINT TO REPORT LINE
         BAL   R9,P001010                PERFORM FORMATTING SUBROUTINE
         LA    R8,LINE2-X(,R13)          POINT TO REPORT LINE
         BAL   R9,P001010                PERFORM FORMATTING SUBROUTINE
         LA    R8,LINE3-X(,R13)          POINT TO REPORT LINE
         BAL   R9,P001010                PERFORM FORMATTING SUBROUTINE
         LA    R8,BLANKS-X(,R13)         POINT TO REPORT LINE
         BAL   R9,P001010                PERFORM FORMATTING SUBROUTINE
         CLI   A#STYPE,A@MINCOM          MINOR COMMAND?
         BE    P000994                   +YES, SKIP NEXT SECTION
         CLI   A#STYPE,A@GENMIN          GENERALIZED MINOR COMMAND?
         BNE   P000995                   +NO, SKIP NEXT SECTION
         CLC   A#COMMND(4),=4X'00'       GENERALIZED MINOR W/O MAJOR?
         BE    P000995                   +YES, SKIP NEXT SECTION
         SPACE 3
P000994  DS    0H
         LA    R8,LINE4A-X(,R13)         POINT TO REPORT LINE
         BAL   R9,P001010                PERFORM FORMATTING SUBROUTINE
         SPACE 3
P000995  DS    0H
         LA    R8,LINE4B-X(,R13)         POINT TO REPORT LINE
         BAL   R9,P001010                PERFORM FORMATTING SUBROUTINE
         LA    R8,LINE5-X(,R13)          POINT TO REPORT LINE
         BAL   R9,P001010                PERFORM FORMATTING SUBROUTINE
         B     P000300                   GET ANOTHER RECORD!
         SPACE 3
*
*        FORMATTING AND OUTPUT PROCESSING SUBROUTINES.
*
P001010  DS    0H
         TM    MISCSW-X(R13),PGEJECT     PAGE EJECT INDICATED?
         BNO   P001015                   +NO, SKIP NEXT SECTION
         NI    MISCSW-X(R13),255-PGEJECT  TURN OFF PAGE EJECT SWITCH
         AP    PGCOUNT-X(8,R13),=PL8'1'  INCREMENT PAGE COUNT
*
*        TO CHANGE THE LINE COUNT, PLACE THE VALUE OF THE DESIRED
*        LINE COUNT IN THE LITERAL IN THE FOLLOWING INSTRUCTION.
*
         ZAP   LNCOUNT-X(2,R13),=PL2'55'  <-- SPECIFY LINE COUNT
         MVC   PAGE-X(8,R13),=XL8'4020202020202020'  SET PATTERN
         ED    PAGE-X(8,R13),PGCOUNT+4-X(R13)  FORMAT PAGE COUNT
         LA    R6,HEADING-X(,R13)        POINT TO OUTPUT LINE
         BAL   R7,P001200                PERFORM OUTPUT SUBROUTINE
         LA    R6,BLANKS-X(,R13)         POINT TO OUTPUT LINE
         BAL   R7,P001200                PERFORM OUTPUT SUBROUTINE
         SPACE 3
P001015  DS    0H
         LR    R6,R8                     POINT TO REPORT LINE
         BAL   R7,P001200                PERFORM OUTPUT SUBROUTINE
         BR    R9                        RETURN
         SPACE 3
P001200  DS    0H
         CLI   0(R6),C'-'                SPACE 3 LINES?
         BNE   P001210                   +NO, SKIP NEXT SECTION
         SP    LNCOUNT-X(2,R13),=PL2'3'  ELSE, DECREMENT LINE COUNT 3
         B     P001220                   MERGE
         SPACE 3
P001210  DS    0H
         SP    LNCOUNT-X(2,R13),=PL2'1'  ELSE, DECREMENT LINE COUNT 1
         SPACE 3
P001220  DS    0H
         PUT   (R11),(R6)                PUT A RECORD - QSAM (PM)
         BR    R7                        RETURN
         SPACE 3
*
*        TIME AND DATE CONVERSION SUBROUTINE.  TIME MUST BE IN
*        REGISTER 0 (HHMMSSTH) AND DATE MUST BE IN REGISTER 1
*        (00YYDDDF).
*
P001400  DS    0H
         SRL   R0,4                      TIME - 0HHMMSST
         O     R0,=X'0000000F'           TIME - 0HHMMSSF
         STCM  R0,B'1111',TIMEWORK+6-X(R13)  STORE IN WORK AREA
         UNPK  TIMEWORK-X(6,R13),TIMEWORK+6-X(4,R13)  UNPACK IT!
         MVC   HH-X(2,R13),TIMEWORK-X(R13)  MOVE HOURS
         MVC   MM-X(2,R13),TIMEWORK+2-X(R13)  MOVE MINUTES
         MVC   SS-X(2,R13),TIMEWORK+4-X(R13)  MOVE SECONDS
         LR    R7,R1                     SAVE JULIAN DATE
         SRL   R7,12                     DATE - 00000YYD
         O     R7,=X'0000000F'           DATE - 00000YYF
         STCM  R7,B'0011',DATEWORK+6-X(R13)  STORE YEAR PORTION
         UNPK  YR-X(2,R13),DATEWORK+6-X(2,R13)  UNPACK IT!
         LA    R2,TABLE1                 ASSUME NOT A LEAP YEAR
         DP    DATEWORK+5-X(3,R13),=PL1'4'  DIVIDE YEAR BY 4
         CP    DATEWORK+7-X(1,R13),=PL1'0'  ZERO REMAINDER?
         BNE   P001500                   +NO, NOT A LEAP YEAR
         LA    R2,TABLE2                 ELSE, USE LEAP YEAR TABLE
         SPACE 3
P001500  DS    0H
         N     R1,=X'0000FFFF'           ZERO YEAR PORTION OF DATE
         SPACE 3
P001600  DS    0H
         CLM   R1,B'0011',0(R2)          COMPARE JULIAN DATE IN TABLE
         BH    P001700                   BRANCH IF HIGH
         S     R2,=F'4'                  ELSE, POINT TO PREVIOUS ENTRY
         MVC   MO-X(2,R13),2(R2)         GET MONTH
         XC    DATEWORK-X(8,R13),DATEWORK-X(R13)  CLEAR WORK AREA
         STCM  R1,B'0011',DATEWORK-X(R13)  STORE JULIAN DATE
         SP    DATEWORK-X(2,R13),0(2,R2)  SUBTRACT FOR DATE OF MONTH
         OI    DATEWORK+1-X(R13),X'0F'   FIX THE SIGN
         UNPK  DA-X(2,R13),DATEWORK-X(2,R13)  UNPACK IT!
         B     P001800                   ALL DONE, PREPARE TO EXIT
         SPACE 3
P001700  DS    0H
         LA    R2,4(,R2)                 BUMP TABLE POINTER
         B     P001600                   KEEP CHECKING
         SPACE 3
P001800  DS    0H
         BR    R9                        RETURN
         SPACE 3
*
*        TERMINATION, VALIDATION, AND SUMMARIZATION.
*
P002000  DS    0H
         XR    R3,R3                     CLEAR R3 TO ZEROS          @02
         CLC   TOTCNT-X(4,R13),=F'0'     WERE ANY RCDS PROCESSED?   @02
         BNE   P002010                   +YES, SKIP NEXT SECTION    @02
         LA    R3,4                      ELSE, SET RC=4             @02
         SPACE 3                                                    @02
P002010  DS    0H
         CP    LNCOUNT-X(2,R13),=PL2'5'  ENOUGH ROOM LEFT ON PAGE?  @02
         BNL   P002020                   +YES, SKIP NEXT SECTION    @02
         OI    MISCSW-X(R13),PGEJECT     INDICATE PAGE EJECT REQ'D  @02
         SPACE 3                                                    @02
P002020  DS    0H                                                   @02
         L     R6,GOODCNT-X(,R13)        GET GOOD COUNT             @02
         L     R7,BADCNT-X(,R13)         GET BAD COUNT              @02
         ALR   R6,R7                     GET TOTAL COUNT            @02
         CL    R6,TOTCNT-X(,R13)         DO TOTALS AGREE?           @02
         BE    P002025                   +THEY DARN WELL BETTER!    @02
         ABEND 4000,,,,REASON=0          ELSE, ADIOS...             @02
         SPACE 3                                                    @02
P002025  DS    0H                                                   @02
         L     R6,GOODCNT-X(,R13)        GET GOOD COUNT             @02
         CVD   R6,DOUBLE-X(,R13)         CONVERT TO DECIMAL         @02
         OI    DOUBLE+7-X(R13),X'0F'     FIX THE SIGN               @02
         UNPK  GOODNUM-X(7,R13),DOUBLE+4-X(4,R13)  UNPK THE NUMBER  @02
         LA    R8,TERMLN1-X(,R13)        POINT TO REPORT LINE       @02
         BAL   R9,P001010                PERFORM FORMATTING SUBRTN  @02
         ICM   R6,B'1111',BADCNT-X(R13)  GET BAD COUNT              @02
         BZ    P002027                   ZERO, SKIP RC SETTING      @02
         LA    R3,8                      SET RETURN CODE            @02
         SPACE 3                                                    @02
P002027  DS    0H                                                   @02
         CVD   R6,DOUBLE-X(,R13)         CONVERT TO DECIMAL         @02
         OI    DOUBLE+7-X(R13),X'0F'     FIX THE SIGN               @02
         UNPK  BADNUM-X(7,R13),DOUBLE+4-X(4,R13)  UNPK THE NUMBER   @02
         LA    R8,TERMLN2-X(,R13)        POINT TO REPORT LINE       @02
         BAL   R9,P001010                PERFORM FORMATTING SUBRTN  @02
         L     R6,TOTCNT-X(,R13)         GET TOTAL COUNT            @02
         CVD   R6,DOUBLE-X(,R13)         CONVERT TO DECIMAL         @02
         OI    DOUBLE+7-X(R13),X'0F'     FIX THE SIGN               @02
         UNPK  TOTNUM-X(7,R13),DOUBLE+4-X(4,R13)  UNPK THE NUMBER   @02
         LA    R8,TERMLN3-X(,R13)        POINT TO REPORT LINE       @02
         BAL   R9,P001010                PERFORM FORMATTING SUBRTN  @02
         SPACE 3                                                    @02
P002030  DS    0H                                                   @02
         CLOSE ((R10),,(R11)),MF=(E,CLOSFI-X(,R13))  CLOSE FILES
         L     R8,4(R13)                 SAVE ADDR CALLER'S SAVE AREA
         FREEMAIN R,LV=WORKSZ,A=(R13)    FREE THE WORK AREA
         LR    R13,R8                    ADDR CALLER'S SAVE AREA
         LR    R15,R3                    LOAD RETURN CODE           @02
         RETURN (14,12),,RC=(15)         RESTORE REGS AND RETURN
         SPACE 3
*                                                                   @02
*        ERROR ROUITNE.                                             @02
*                                                                   @02
P003000  DS    0H                                                   @02
         TM    MISCSW-X(R13),SPIEACT     ENTERED BECAUSE OF 0C7?    @02
         BO    P003005                   +YES, SKIP NEXT SECTION    @02
         LA    R14,P000365               RETURN POINT (NO SPIE)     @02
         B     P003007                   MERGE                      @02
         SPACE 3                                                    @02
P003005  DS    0H                                                   @02
         LR    R2,R1                     SAVE ADDR OF PIE           @02
         USING PIE,R2                    ESTABLISH ADDRESSABILITY   @02
         SPACE 3                                                    @02
P003007  DS    0H                                                   @02
         ST    R14,SPIESAVE-X(,R13)      SAVE REGISTER 14           @02
         OI    MISCSW-X(R13),ERROR       INDICATE ERROR DETECTED    @02
         CP    LNCOUNT-X(2,R13),=PL2'6'  ENOUGH ROOM LEFT ON PAGE?  @02
         BNL   P003010                   +YES, SKIP NEXT SECTION    @02
         OI    MISCSW-X(R13),PGEJECT     INDICATE PAGE EJECT REQ'D  @02
         SPACE 3                                                    @02
P003010  DS    0H                                                   @02
         L     R1,TOTCNT-X(,R13)         GET RUNNING TOTAL COUNT    @02
         CVD   R1,DOUBLE-X(,R13)         CONVERT TO DECIMAL         @02
         OI    DOUBLE+7-X(R13),X'0F'     FIX THE SIGN               @02
         UNPK  RECNUM-X(7,R13),DOUBLE+4-X(4,R13)  UNPACK THE NUMBER @02
         LA    R8,ERRORLN1-X(,R13)       POINT TO REPORT LINE       @02
         BAL   R9,P001010                PERFORM FORMATTING SUBRTN  @02
         LA    R8,ERRORLN2-X(,R13)       POINT TO REPORT LINE       @02
         BAL   R9,P001010                PERFORM FORMATTING SUBRTN  @02
         LA    R8,ERRORLN3-X(,R13)       POINT TO REPORT LINE       @02
         BAL   R9,P001010                PERFORM FORMATTING SUBRTN  @02
         LA    R8,ERRORLN4-X(,R13)       POINT TO REPORT LINE       @02
         BAL   R9,P001010                PERFORM FORMATTING SUBRTN  @02
         L     R1,BADCNT-X(,R13)         GET BAD RECORD COUNT       @02
         LA    R1,1(,R1)                 BUMP THE COUNT             @02
         ST    R1,BADCNT-X(,R13)         SAVE BAD RECORD COUNT      @02
         TM    MISCSW-X(R13),SPIEACT     SPIE ACTIVE?               @02
         BNO   P003020                   +NO, SKIP NEXT SECTION     @02
         MVC   PIEPSW+5(3),=AL3(P000360)  RETURN POINT IN MAINLINE  @02
         DROP  R2                        DROP ADDRESSABILITY        @02
         SPACE 3                                                    @02
P003020  DS    0H                                                   @02
         L     R14,SPIESAVE-X(,R13)      RESTORE REGSITER 14        @02
         BR    R14                       RETURN                     @02
         SPACE 3                                                    @02
*
*        EXECUTED INSTRUCTIONS.
*
MVCBUFAU MVC   AUXBUFF-X(*-*,R13),A#BUFAU  MOVE AUX BUFFER
MVCBUFPR MVC   PRMBUFF-X(*-*,R13),A#BUFPR  MOVE PRM BUFFER
         DROP  R5                        DROP ADDRESSABILITY
OCBUFAU  OC    AUXBUFF-X(*-*,R13),=80X'40' FORCE UPPER-CASE AUX BUFFER
         SPACE 3
*
*        TABLE OF COMMAND TYPES.
*
COMMTBL  DS    0F
         DC    AL1(A@IMMCOM),CL15'IMMEDIATE      '
         DC    AL1(A@MAJCOM),CL15'MAJOR          '
         DC    AL1(A@MINCOM),CL15'MINOR          '
         DC    AL1(A@GENMIN),CL15'GENERAL MINOR  '
         DC    AL1(A@ILCCOM),CL15'INFO-LINE      '
         DC    AL1(A@SUPCOM),CL15'SUPERSEDED     '
CTBLSZ   EQU   (*-COMMTBL)/16
         SPACE 3
*
*        TABLE OF COMMAND DISPOSITIONS.
*
DISPTBL  DS    0F
         DC    AL1(A@ALLOW),CL23'ACCESS ALLOWED         '
         DC    AL1(A@DISALW),CL23'ACCESS DENIED          '
         DC    AL1(A@ASFTSF),CL23'SPECIAL ACCESS ALLOWED '
DTBLSZ   EQU   (*-DISPTBL)/24
         SPACE 3
*
*        NON-LEAP YEAR TABLE.
*
TABLE1   DC    XL2'000F',CL2'01'         JAN
         DC    XL2'031F',CL2'02'         FEB
         DC    XL2'059F',CL2'03'         MAR
         DC    XL2'090F',CL2'04'         APR
         DC    XL2'120F',CL2'05'         MAY
         DC    XL2'151F',CL2'06'         JUN
         DC    XL2'181F',CL2'07'         JUL
         DC    XL2'212F',CL2'08'         AUG
         DC    XL2'243F',CL2'09'         SEP
         DC    XL2'273F',CL2'10'         OCT
         DC    XL2'304F',CL2'11'         NOV
         DC    XL2'334F',CL2'12'         DEC
         DC    XL2'365F'
         SPACE 3
*
*        LEAP YEAR TABLE.
*
TABLE2   DC    XL2'000F',CL2'01'         JAN
         DC    XL2'031F',CL2'02'         FEB
         DC    XL2'060F',CL2'03'         MAR
         DC    XL2'091F',CL2'04'         APR
         DC    XL2'121F',CL2'05'         MAY
         DC    XL2'152F',CL2'06'         JUN
         DC    XL2'182F',CL2'07'         JUL
         DC    XL2'213F',CL2'08'         AUG
         DC    XL2'244F',CL2'09'         SEP
         DC    XL2'274F',CL2'10'         OCT
         DC    XL2'305F',CL2'11'         NOV
         DC    XL2'335F',CL2'12'         DEC
         DC    XL2'366F'
         SPACE 3
*
*        TRANSLATE TABLE FOR TRANSLATING UNDERSCORES TO BLANKS.
*
TRTABLE  DS    0F
         DC    XL16'000102030405060708090A0B0C0D0E0F'
         DC    XL16'101112131415161718191A1B1C1D1E1F'
         DC    XL16'202122232425262728292A2B2C2D2E2F'
         DC    XL16'303132333435363738393A3B3C3D3E3F'
         DC    XL16'404142434445464748494A4B4C4D4E4F'
         DC    XL16'505152535455565758595A5B5C5D5E5F'
         DC    XL16'606162636465666768696A6B6C6D6E6F'
         DC    XL16'707172737475767778797A7B7C7D7E7F'
         DC    XL16'808182838485868788898A8B8C8D8E8F'
         DC    XL16'909192939495969798999A9B9C9D9E9F'
         DC    XL16'A0A1A2A3A4A5A6A7A8A9AAABACADAEAF'
         DC    XL16'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF'
         DC    XL16'C0C1C2C3C4C5C6C7C8C9CACBCCCDCECF'
         DC    XL16'D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF'
         DC    XL16'E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF'
         DC    XL16'F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF'
         ORG   TRTABLE+C'_'
         DC    C' '
         ORG   ,
         SPACE 3
*
*        LITERAL POOL.
*
         LTORG ,
*
*        GETMAINED WORK AREA TEMPLATE BEGINS HERE!
*
X        DS    0D
SAVEAREA DS    18F
*
HEADING  DS    0CL133
         DC    CL1'1'
DATE     DS    CL8
         DC    CL4' '
TIME     DS    CL8
         DC    CL23' '
         DC    CL40'O M E G A M O N  SECURITY  AUDIT  REPORT'
         DC    CL36' '
         DC    CL5'PAGE '
PAGE     DS    CL8
*
LINE1    DS    0CL133
         DC    CL1'-'
         DC    CL13' '
         DC    CL6'JOB:  '
JOBNAME  DS    CL8
         DC    CL3'  ('
JOBID    DS    CL8
         DC    CL5')    '
PRSTPNM  DS    CL8
         DC    CL4' '
STPNM    DS    CL8
         DC    CL6' '
         DC    CL9'SYSTEM:  '
SYSID    DS    CL4
         DC    CL50' '
*
LINE2    DS    0CL133
         DC    CL1' '
         DC    CL13' '
         DC    CL7'DATE:  '
REPDATE  DS    CL8
         DC    CL4' '
         DC    CL7'TIME:  '
REPTIME  DS    CL8
         DC    CL4' '
         DC    CL9'USERID:  '
USERID   DS    CL7
         DC    CL4' '
         DC    CL7'UNIT:  '
UNIT     DS    CL8
         DC    CL46' '
*
LINE3    DS    0CL133
         DC    CL1' '
         DC    CL13' '
         DC    CL10'COMMAND:  '
COMMAND  DS    CL9
ASSOCMAJ DS    CL16
         DC    CL6' '
         DC    CL7'TYPE:  '
CMTYPE   DS    CL15                                                 @03
         DC    CL6' '
         DC    CL14'DISPOSITION:  '
DISP     DS    CL7
         DC    CL29' '                                              @03
*
LINE4A   DS    0CL133
         DC    CL1' '
         DC    CL13' '
         DC    CL31'COMMAND OUTPUT IMAGE (MAJOR)>  '
AUXBUFF  DS    CL80
         DC    CL8' '
*
LINE4B   DS    0CL133
         DC    CL1' '
         DC    CL13' '
         DC    CL31'COMMAND INPUT IMAGE -------->  '
PRMBUFF  DS    CL80
         DC    CL8' '
*
LINE5    DS    0CL133
         DC    CL1' '
         DC    CL44' '
         DC    CL10'....+....1'
         DC    CL10'....+....2'
         DC    CL10'....+....3'
         DC    CL10'....+....4'
         DC    CL10'....+....5'
         DC    CL10'....+....6'
         DC    CL10'....+....7'
         DC    CL10'....+....8'
         DC    CL8' '
*
BLANKS   DS    0CL133
         DC    CL1' '
         DC    CL132' '
*
ERRORLN1 DS    0CL133                                               @02
         DC    CL1'-'                                               @02
         DC    CL13' '                                              @02
         DC    CL16'*** WARNING *** '                               @02
         DC    CL61'AN ERROR WAS DETECTED DURING THE PROCESSING OF RECOX
               RD NUMBER '                                          @02
RECNUM   DS    CL7                                                  @02
         DC    CL3'.  '                                             @02
         DC    CL32'POSSIBLE CAUSES ARE AS FOLLOWS: '               @02
*
ERRORLN2 DS    0CL133                                               @02
         DC    CL1' '                                               @02
         DC    CL29' '                                              @02
         DC    CL89'1)  INCORRECT SMF NUMBER SPECIFICATION IN EXTRACTIOX
               N STEP OR IN OMEGAMON SECURITY UPDATE.'              @02
         DC    CL14' '                                              @02
*
ERRORLN3 DS    0CL133                                               @02
         DC    CL1' '                                               @02
         DC    CL29' '                                              @02
         DC    CL76'2)  USE OF OMEGAMON''S SECURITY AUDIT SMF NUMBER BYX
                ANOTHER APPLICATION.'                               @02
         DC    CL27' '                                              @02
*
ERRORLN4 DS    0CL133                                               @02
         DC    CL1' '                                               @02
         DC    CL29' '                                              @02
         DC    CL43'3)  CORRUPTION OF THE SYSTEM SMF DATA SETS.'    @02
         DC    CL60' '                                              @02
*
TERMLN1  DS    0CL133                                               @02
         DC    CL1'-'                                               @02
         DC    CL45' '                                              @02
         DC    CL33'RECORDS PROCESSED SUCCESSFULLY:  '              @02
GOODNUM  DS    CL7                                                  @02
         DC    CL47' '                                              @02
*
TERMLN2  DS    0CL133                                               @02
         DC    CL1' '                                               @02
         DC    CL45' '                                              @02
         DC    CL33'RECORDS PROCESSED IN ERROR:      '              @02
BADNUM   DS    CL7                                                  @02
         DC    CL47' '                                              @02
*
TERMLN3  DS    0CL133                                               @02
         DC    CL1' '                                               @02
         DC    CL45' '                                              @02
         DC    CL33'TOTAL RECORDS PROCESSED:         '              @02
TOTNUM   DS    CL7                                                  @02
         DC    CL47' '                                              @02
*
MAJTAG   DS    0CL16
         DC    CL11'  (MAJOR:  '
MAJCMD   DS    CL4
         DC    CL1')'
LNCOUNT  DC    PL2'0'
PGCOUNT  DC    PL8'0'
PATTERN  DC    XL6'402020202120'
TIMEWORK DS    XL10
DATEWORK DS    D
GREGDATE DS    0CL8
MO       DS    CL2
         DC    CL1'/'
DA       DS    CL2
         DC    CL1'/'
YR       DS    CL2
HHMMSS   DS    0CL8
HH       DS    CL2
         DC    CL1':'
MM       DS    CL2
         DC    CL1':'
SS       DS    CL2
MISCSW   DC    X'00'
PGEJECT  EQU   X'80'
ERROR    EQU   X'40'                                                @02
SPIEACT  EQU   X'20'                                                @02
SPIESAVE DS    F                                                    @02
TOTCNT   DC    F'0'                                                 @02
GOODCNT  DC    F'0'                                                 @02
BADCNT   DC    F'0'                                                 @02
DOUBLE   DS    D                                                    @02
OPENFI   OPEN  (0,,0),MF=L
CLOSFI   CLOSE (0,,0),MF=L
STOP0C7  SPIE  ,,MF=L                                               @02
*
*        INPUT FILE DCB.
*
INDCB    DCB   DDNAME=SYSIN,DSORG=PS,MACRF=GL,RECFM=VBS,               X
               LRECL=32767,BLKSIZE=4096,EODAD=P002000,BFTEK=A
*
*        OUTPUT FILE DCB.
*
OUTDCB   DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,RECFM=FBA,            X
               LRECL=133,BLKSIZE=25*133
*
*        GETMAINED WORK AREA TEMPLATE ENDS HERE!
*
WORKSZ   EQU   *-X
         SPACE 3
*
*        MAPPING MACROS AND DSECTS.
*
         DCBD  DEVD=DA,DSORG=PS          DCB MAPPING MACRO
         DSECT
         IFASMFR 0                       SMF COMMON HEADER
         $CANHDR DSECT=YES               CANDLE COMMON HEADER
         $AUDIT ,                        OMEGAMON/BASE SECURITY AUDIT
         IHAPIE ,                        PROGRAM INTERRUPT ELEMENT  @02
*
*        STANDARD REGISTER EQUATES.
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         DROP  ,
         END
